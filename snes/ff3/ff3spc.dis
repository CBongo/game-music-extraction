SPC700 Disassembler v0.1
Loading Blocks
Block 00: start $0200 length $17B7
Execution Address: $0200
0200 20 	CLRP            ; set direct page to 0
0201 C0 	DI              ; disable interrupts
0202 CD FF 	MOV	X,#$FF
0204 BD 	MOV	SP,X    ; set stack ptr to #$FF ($01FF)
0205 E8 00 	MOV	A,#$00
0207 5D 	MOV	X,A
0208 AF 	MOV	(X)+,A
0209 C8 F0 	CMP	X,#$F0
020B D0 FB 	BNE	$0208   ; zero $00-$EF
020D 1A C6 	DECW	$C6     ; set $c6 word to #$FFFF
020F E8 00 	MOV	A,#$00
0211 8D 0C 	MOV	Y,#$0C
0213 3F 48 06 	CALL	$0648   ; zero master vol left
0216 8D 1C 	MOV	Y,#$1C
0218 3F 48 06 	CALL	$0648   ; zero master vol right
021B 8D 2C 	MOV	Y,#$2C
021D 3F 48 06 	CALL	$0648   ; zero echo vol left
0220 8D 3C 	MOV	Y,#$3C
0222 3F 48 06 	CALL	$0648   ; zero echo vol right
0225 8D 2D 	MOV	Y,#$2D
0227 3F 48 06 	CALL	$0648   ; clear all pitch mod
022A 8D 3D 	MOV	Y,#$3D
022C 3F 48 06 	CALL	$0648   ; clear noise enable bits
022F 8D 4D 	MOV	Y,#$4D
0231 3F 48 06 	CALL	$0648   ; clear echo enable bits
0234 8D 5D 	MOV	Y,#$5D
0236 E8 1B 	MOV	A,#$1B
0238 3F 48 06 	CALL	$0648   ; set sample dir to $1B00
023B 8D 07 	MOV	Y,#$07
023D CD A0 	MOV	X,#$A0
023F CB F2 	MOV	$F2,Y
0241 D8 F3 	MOV	$F3,X   ; set exp decr gain mode...
0243 DD 	MOV	A,Y
0244 60 	CLRC
0245 88 10 	ADC	A,#$10
0247 FD 	MOV	Y,A
0248 10 F5 	BPL	$023F   ; ...for all voices
024A 8F 30 F1 	MOV	$F1,#$30 ; clear ports
024D 8F 27 FA 	MOV	$FA,#$27 ; set timer0 latch to #$27 (205 Hz, 4.875ms)
0250 8F 80 FB 	MOV	$FB,#$80 ; set timer1 latch to #$80 (62.5 Hz, 16ms)
0253 8F 05 FC 	MOV	$FC,#$05 ; set timer2 latch to #$05 (12.8 KHz, 78 us)
0256 8F 07 F1 	MOV	$F1,#$07 ; start all timers
0259 8F 05 8C 	MOV	$8C,#$05
025C 3F 02 10 	CALL	$1002   ; set echo delay to 80ms
025F E8 3F 	MOV	A,#$3F
0261 8D 0C 	MOV	Y,#$0C
0263 3F 48 06 	CALL	$0648
0266 8D 1C 	MOV	Y,#$1C
0268 3F 48 06 	CALL	$0648    ; set master volume L/R to 50% (#$3F)
026B 8B 24 	DEC	$24      ; set key-off shadow to #$FF
026D 8F 07 C8 	MOV	$C8,#$07 ; set $C8 to 7
0270 8B A8 	DEC	$A8      ; set $A8 to #$FF
; begin main loop
0272 3F E1 09 	CALL	$09E1           ; do
0275 EB FD 	MOV	Y,$FD           ;   process CPU cmds
0277 F0 F9 	BEQ	$0272           ; until counter0 != 0
0279 43 85 03 	BBS	$85,#02,$027F
027C D3 86 04 	BBC	$86,#06,$0283
027F 8D 05 	MOV	Y,#$05          ; do up thru reg 5C (no echo regs)
0281 2F 02 	BRA	$0285
0283 8D 11 	MOV	Y,#$11          ; do all
0285 F6 94 19 	MOV	A,$1994+Y       ; get DSP register
0288 C4 F2 	MOV	$F2,A           ; set latch for register
028A F6 A5 19 	MOV	A,$19A5+Y       ; get shadow register
028D 5D 	MOV	X,A
028E E6 	MOV	A,(X)
028F C4 F3 	MOV	$F3,A           ; write DSP reg from shadow reg
0291 FE F2 	DBNZ	Y,$0285         ; loop thru shadowed regs
0293 CB 24 	MOV	$24,Y           ; clear key off shadow
0295 CB 22 	MOV	$22,Y           ; clear key on shadow
0297 E3 86 14 	BBS	$86,#07,$02AE
029A 63 85 03 	BBS	$85,#03,$02A0
029D EB 52 	MOV	Y,$52
029F E5         MOV	A,$ADEB ; pseudo op to skip instruction
02A0 EB AD 	MOV	Y,$AD
02A2 E4 DD 	MOV	A,$DD
02A4 DA F6 	MOVW	$F6,YA  ; write $DD and $52 or $AD to APU2/3
02A6 EB 7B 	MOV	Y,$7B
02A8 E8 00 	MOV	A,#$00
02AA DA F4 	MOVW	$F4,YA  ; write #$00 and $7B to APU0/1
02AC 2F 03 	BRA	$02B1
02AE 3F DF 10 	CALL	$10DF   ; read wave height regs, put in APU regs
02B1 BA D9 	MOVW	YA,$D9
02B3 D0 4B 	BNE	$0300
02B5 8B C8 	DEC	$C8
02B7 D0 06 	BNE	$02BF    ; --$c8 == 0 ?
02B9 8F 07 C8 	MOV	$C8,#$07 ;   reset $C8 counter
02BC 3F 38 11 	CALL	$1138    ;   1138
02BF 3F 08 03 	CALL	$0308
02C2 CD 00 	MOV	X,#$00
02C4 8F 01 8F 	MOV	$8F,#$01
02C7 E4 83 	MOV	A,$83
02C9 04 84 	OR	A,$84
02CB 48 FF 	EOR	A,#$FF
02CD 24 52 	AND	A,$52
02CF 24 23 	AND	A,$23
02D1 C4 A0 	MOV	$A0,A
02D3 2F 09 	BRA	$02DE
02D5 D8 A3 	MOV	$A3,X
02D7 3F 45 07 	CALL	$0745
02DA 3D 	INC	X
02DB 3D 	INC	X
02DC 0B 8F 	ASL	$8F
02DE 4B A0 	LSR	$A0
02E0 B0 F3 	BCS	$02D5
02E2 D0 F6 	BNE	$02DA
02E4 CD 1E 	MOV	X,#$1E
02E6 8F 80 8F 	MOV	$8F,#$80
02E9 E4 83 	MOV	A,$83
02EB 04 84 	OR	A,$84
02ED C4 A0 	MOV	$A0,A
02EF 2F 09 	BRA	$02FA
02F1 D8 A3 	MOV	$A3,X
02F3 3F 45 07 	CALL	$0745
02F6 1D 	DEC	X
02F7 1D 	DEC	X
02F8 4B 8F 	LSR	$8F
02FA 0B A0 	ASL	$A0
02FC B0 F3 	BCS	$02F1
02FE D0 F6 	BNE	$02F6
0300 E8 00 	MOV	A,#$00
0302 FD 	MOV	Y,A
0303 DA DB 	MOVW	$DB,YA  ; zero word $DB
0305 5F 72 02 	JMP	$0272
;
0308 A3 86 1F 	BBS	$86,#05,$032A
030B E4 46 	MOV	A,$46
030D EB B7 	MOV	Y,$B7
030F F0 12 	BEQ	$0323
0311 CF 	MUL	YA
0312 DD 	MOV	A,Y
0313 E3 B7 0A 	BBS	$B7,#07,$0320
0316 1C 	ASL	A
0317 60 	CLRC
0318 84 46 	ADC	A,$46 
031A 90 07 	BCC	$0323
031C E8 FF 	MOV	A,#$FF
031E 2F 03 	BRA	$0323
0320 D0 01 	BNE	$0323
0322 BC 	INC	A
0323 60 	CLRC
0324 84 47 	ADC	A,$47
0326 C4 47 	MOV	$47,A
0328 90 53 	BCC	$037D
032A CD 00 	MOV	X,#$00          ; loop over voices
032C 8F 01 8F 	MOV	$8F,#$01
032F FA 52 A0 	MOV	$A0<d>,$52<s>
0332 2F 39 	BRA	$036D
0334 D8 A3 	MOV	$A3,X
0336 9B 25 	DEC	$25+X
0338 D0 05 	BNE	$033F
033A 3F D9 03 	CALL	$03D9           ; do next vcmd
033D 2F 27 	BRA	$0366
033F 8D 00 	MOV	Y,#$00
0341 C8 10 	CMP	X,#$10
0343 B0 01 	BCS	$0346
0345 E8         MOV	A,#$FC  ; pseudo-op skip
0346 FC         INC     Y
0347 E8 02 	MOV	A,#$02
0349 DE 25 1A 	CBNE	$25+X,$0366
034C F6 59 00 	MOV	A,$0059+Y
034F 24 8F 	AND	A,$8F
0351 D0 13 	BNE	$0366
0353 DD 	MOV	A,Y
0354 D0 0D 	BNE	$0363
0356 E4 8F 	MOV	A,$8F
0358 4E 23 00 	TCLR1	$0023
035B E4 83 	MOV	A,$83
035D 04 84 	OR	A,$84
035F 24 8F 	AND	A,$8F
0361 D0 03 	BNE	$0366
0363 09 8F 24 	OR	$24<d>,$8F<s>   ; key-off this voice
0366 3F 54 06 	CALL	$0654
0369 3D 	INC	X
036A 3D 	INC	X
036B 0B 8F 	ASL	$8F
036D 4B A0 	LSR	$A0
036F B0 C3 	BCS	$0334           ; loop if this voice active
0371 D0 F6 	BNE	$0369
0373 C8 18 	CMP	X,#$18
0375 B0 1D 	BCS	$0394
0377 3F 95 03 	CALL	$0395
037A 3F E1 09 	CALL	$09E1
037D E8 78 	MOV	A,#$78
037F 60 	CLRC
0380 84 48 	ADC	A,$48
0382 C4 48 	MOV	$48,A
0384 90 0E 	BCC	$0394
0386 CD 18 	MOV	X,#$18
0388 8F 10 8F 	MOV	$8F,#$10
038B E4 83 	MOV	A,$83
038D 04 84 	OR	A,$84
038F 9F 	XCN	A
0390 C4 A0 	MOV	$A0,A
0392 2F D9 	BRA	$036D
0394 6F 	RET
;
0395 E4 49 	MOV	A,$49
0397 F0 08 	BEQ	$03A1
0399 8B 49 	DEC	$49
039B BA 4A 	MOVW	YA,$4A
039D 7A 45 	ADDW	YA,$45
039F DA 45 	MOVW	$45,YA
03A1 E4 50 	MOV	A,$50
03A3 F0 08 	BEQ	$03AD
03A5 8B 50 	DEC	$50
03A7 BA 4E 	MOVW	YA,$4E
03A9 7A 4C 	ADDW	YA,$4C
03AB DA 4C 	MOVW	$4C,YA
03AD E4 78 	MOV	A,$78
03AF F0 08 	BEQ	$03B9
03B1 8B 78 	DEC	$78
03B3 BA 79 	MOVW	YA,$79
03B5 7A 75 	ADDW	YA,$75
03B7 DA 75 	MOVW	$75,YA
03B9 E4 77 	MOV	A,$77
03BB F0 1B 	BEQ	$03D8
03BD 8B 77 	DEC	$77
03BF CD 10 	MOV	X,#$10
03C1 F5 FF 00 	MOV	A,$00FF+X
03C4 FD 	MOV	Y,A
03C5 F5 FE 00 	MOV	A,$00FE+X
03C8 DA 98 	MOVW	$98,YA
03CA F4 63 	MOV	A,$63+X
03CC FB 64 	MOV	Y,$64+X
03CE 7A 98 	ADDW	YA,$98
03D0 D4 63 	MOV	$63+X,A
03D2 DB 64 	MOV	$64+X,Y
03D4 1D 	DEC	X
03D5 1D 	DEC	X
03D6 D0 E9 	BNE	$03C1
03D8 6F 	RET
; process a command for voice X/2
03D9 3F C9 05 	CALL	$05C9
03DC 68 C4 	CMP	A,#$C4
03DE 90 05 	BCC	$03E5
03E0 3F B5 05 	CALL	$05B5
03E3 2F F4 	BRA	$03D9
03E5 FB 25 	MOV	Y,$25+X
03E7 D0 0C 	BNE	$03F5   ; skip duration stuff if voice "busy"
03E9 8D 00 	MOV	Y,#$00
03EB CD 0E 	MOV	X,#$0E
03ED 9E 	DIV	YA,X    ; A = AY / #$0E, Y = AY % #$0E
03EE F8 A3 	MOV	X,$A3
03F0 F6 D1 17 	MOV	A,$17D1+Y  ; get duration from table
03F3 D4 25 	MOV	$25+X,A
03F5 78 A8 A2 	CMP	$A2,#$A8
03F8 90 09 	BCC	$0403      ; note less than 12
03FA 78 B6 A2 	CMP	$A2,#$B6
03FD B0 03 	BCS	$0402      ; note >= 13
03FF 5F 99 04 	JMP	$0499
0402 6F 	RET
0403 E4 A2 	MOV	A,$A2
0405 8D 00 	MOV	Y,#$00
0407 CD 0E 	MOV	X,#$0E
0409 9E 	DIV	YA,X    ; A = AY / #$0E, Y = AY % #$0E
040A C4 A2 	MOV	$A2,A   ; save note in A2
040C F8 A3 	MOV	X,$A3
040E F5 00 F6 	MOV	A,$F600+X  ; current octave
0411 8D 0C 	MOV	Y,#$0C
0413 CF 	MUL	YA         ; multiply by 12
0414 60 	CLRC
0415 84 A2 	ADC	A,$A2      ; + note value
0417 60 	CLRC
0418 95 21 F7 	ADC	A,$F721+X  ; + F721+x (transpose?)
041B 80 	SETC
041C A8 0A 	SBC	A,#$0A
041E D5 61 F7 	MOV	$F761+X,A
0421 3F 54 05 	CALL	$0554      ; calculate pitch value
0424 E4 C0 	MOV	A,$C0
0426 D5 E0 F8 	MOV	$F8E0+X,A
0429 E4 C1 	MOV	A,$C1
042B D5 E1 F8 	MOV	$F8E1+X,A
042E F5 51 01 	MOV	A,$0151+X
0431 F0 05 	BEQ	$0438
0433 C4 A2 	MOV	$A2,A
0435 3F 02 13 	CALL	$1302
0438 F5 70 01 	MOV	A,$0170+X
043B F0 07 	BEQ	$0444
043D C4 A2 	MOV	$A2,A
043F 3F B6 13 	CALL	$13B6
0442 E8 00 	MOV	A,#$00
0444 D5 C0 F8 	MOV	$F8C0+X,A
0447 D5 C1 F8 	MOV	$F8C1+X,A
044A D5 60 F8 	MOV	$F860+X,A
044D D5 61 F8 	MOV	$F861+X,A
0450 D5 80 F7 	MOV	$F780+X,A
0453 D5 81 F7 	MOV	$F781+X,A
0456 C8 10 	CMP	X,#$10
0458 B0 20 	BCS	$047A
045A 09 8F 23 	OR	$23<d>,$8F<s>
045D E4 83 	MOV	A,$83
045F 04 84 	OR	A,$84
0461 24 8F 	AND	A,$8F
0463 D0 34 	BNE	$0499
0465 E4 8F 	MOV	A,$8F
0467 24 5F 	AND	A,$5F
0469 D0 22 	BNE	$048D
046B E4 8F 	MOV	A,$8F
046D 24 5B 	AND	A,$5B
046F F0 1C 	BEQ	$048D
0471 24 5D 	AND	A,$5D
0473 D0 1B 	BNE	$0490
0475 09 8F 5D 	OR	$5D<d>,$8F<s>
0478 2F 13 	BRA	$048D
047A E4 8F 	MOV	A,$8F
047C 24 60 	AND	A,$60
047E D0 0D 	BNE	$048D
0480 E4 8F 	MOV	A,$8F
0482 24 5C 	AND	A,$5C
0484 F0 07 	BEQ	$048D
0486 24 5E 	AND	A,$5E
0488 D0 06 	BNE	$0490
048A 09 8F 5E 	OR	$5E<d>,$8F<s>
048D 09 8F 22 	OR	$22<d>,$8F<s>
0490 09 8F DB 	OR	$DB<d>,$8F<s>
0493 09 8F DC 	OR	$DC<d>,$8F<s>
0496 3F 29 15 	CALL	$1529
0499 3F D4 05 	CALL	$05D4
049C FD 	MOV	Y,A
049D E4 8F 	MOV	A,$8F
049F C8 10 	CMP	X,#$10
04A1 B0 21 	BCS	$04C4
04A3 AD B6 	CMP	Y,#$B6
04A5 B0 09 	BCS	$04B0
04A7 AD A8 	CMP	Y,#$A8
04A9 90 0B 	BCC	$04B6
04AB 0E 59 00 	TSET1	$0059
04AE 2F 33 	BRA	$04E3
04B0 4E 5B 00 	TCLR1	$005B
04B3 4E 5F 00 	TCLR1	$005F
04B6 4E 59 00 	TCLR1	$0059
04B9 E4 5B 	MOV	A,$5B
04BB 04 5F 	OR	A,$5F
04BD 24 8F 	AND	A,$8F
04BF 0E 59 00 	TSET1	$0059
04C2 2F 1F 	BRA	$04E3
04C4 AD B6 	CMP	Y,#$B6
04C6 B0 09 	BCS	$04D1
04C8 AD A8 	CMP	Y,#$A8
04CA 90 0B 	BCC	$04D7
04CC 0E 5A 00 	TSET1	$005A
04CF 2F 12 	BRA	$04E3
04D1 4E 5C 00 	TCLR1	$005C
04D4 4E 60 00 	TCLR1	$0060
04D7 4E 5A 00 	TCLR1	$005A
04DA E4 5C 	MOV	A,$5C
04DC 04 60 	OR	A,$60
04DE 24 8F 	AND	A,$8F
04E0 0E 5A 00 	TSET1	$005A
04E3 F5 50 01 	MOV	A,$0150+X
04E6 F0 6B 	BEQ	$0553
04E8 60 	CLRC
04E9 95 61 F7 	ADC	A,$F761+X
04EC D5 61 F7 	MOV	$F761+X,A
04EF 3F 54 05 	CALL	$0554
04F2 F5 E1 F8 	MOV	A,$F8E1+X
04F5 FD 	MOV	Y,A
04F6 F5 E0 F8 	MOV	A,$F8E0+X
04F9 DA 98 	MOVW	$98,YA
04FB BA C0 	MOVW	YA,$C0
04FD 80 	SETC
04FE 9A 98 	SUBW	YA,$98
0500 DA 98 	MOVW	$98,YA
0502 0D 	PUSH	PSW
0503 B0 08 	BCS	$050D
0505 58 FF 98 	EOR	$98,#$FF
0508 58 FF 99 	EOR	$99,#$FF
050B 3A 98 	INCW	$98
050D F5 20 F7 	MOV	A,$F720+X
0510 D0 05 	BNE	$0517
0512 8F 00 9A 	MOV	$9A,#$00
0515 2F 12 	BRA	$0529
0517 5D 	MOV	X,A
0518 E4 99 	MOV	A,$99
051A 8D 00 	MOV	Y,#$00
051C 9E 	DIV	YA,X
051D C4 9A 	MOV	$9A,A
051F E4 98 	MOV	A,$98
0521 9E 	DIV	YA,X
0522 C4 99 	MOV	$99,A
0524 E8 00 	MOV	A,#$00
0526 9E 	DIV	YA,X
0527 C4 98 	MOV	$98,A
0529 8E 	POP	PSW
052A B0 0F 	BCS	$053B
052C 58 FF 98 	EOR	$98,#$FF
052F 58 FF 99 	EOR	$99,#$FF
0532 58 FF 9A 	EOR	$9A,#$FF
0535 3A 98 	INCW	$98
0537 D0 02 	BNE	$053B
0539 AB 9A 	INC	$9A
053B F8 A3 	MOV	X,$A3
053D BA 99 	MOVW	YA,$99
053F D5 80 F7 	MOV	$F780+X,A
0542 DD 	MOV	A,Y
0543 D5 81 F7 	MOV	$F781+X,A
0546 E4 98 	MOV	A,$98
0548 D5 A0 F8 	MOV	$F8A0+X,A
054B E8 00 	MOV	A,#$00
054D D5 50 01 	MOV	$0150+X,A
0550 D5 A1 F8 	MOV	$F8A1+X,A
0553 6F 	RET
; calculate pitch value for note in A
0554 CD 0C 	MOV	X,#$0C
0556 8D 00 	MOV	Y,#$00
0558 9E 	DIV	YA,X
0559 F8 A3 	MOV	X,$A3
055B C4 A1 	MOV	$A1,A           ; octave (corrected)
055D DD 	MOV	A,Y
055E 1C 	ASL	A
055F FD 	MOV	Y,A             ; note value is index into tbl
0560 F6 8F 17 	MOV	A,$178F+Y
0563 C4 C2 	MOV	$C2,A
0565 F6 90 17 	MOV	A,$1790+Y
0568 C4 C3 	MOV	$C3,A           ; pitch from table -> C2/C3
056A FD 	MOV	Y,A
056B F5 40 F7 	MOV	A,$F740+X
056E 60 	CLRC
056F 95 60 F7 	ADC	A,$F760+X
0572 0D 	PUSH	PSW
0573 2D 	PUSH	A
0574 CF 	MUL	YA
0575 DA C0 	MOVW	$C0,YA
0577 EB C2 	MOV	Y,$C2
0579 AE 	POP	A
057A CF 	MUL	YA
057B DD 	MOV	A,Y
057C 8D 00 	MOV	Y,#$00
057E 7A C0 	ADDW	YA,$C0
0580 DA C0 	MOVW	$C0,YA
0582 F5 41 F7 	MOV	A,$F741+X
0585 F0 08 	BEQ	$058F
0587 CF 	MUL	YA
0588 DD 	MOV	A,Y
0589 8D 00 	MOV	Y,#$00
058B 7A C0 	ADDW	YA,$C0
058D 2F 02 	BRA	$0591
058F E4 C0 	MOV	A,$C0
0591 8E 	POP	PSW
0592 30 02 	BMI	$0596
0594 7A C2 	ADDW	YA,$C2
0596 DA C0 	MOVW	$C0,YA
0598 E8 04 	MOV	A,#$04
059A EB A1 	MOV	Y,$A1
059C 30 0E 	BMI	$05AC
059E 64 A1 	CMP	A,$A1
05A0 B0 0F 	BCS	$05B1
05A2 0B C0 	ASL	$C0
05A4 2B C1 	ROL	$C1
05A6 BC 	INC	A
05A7 2E A1 F8 	CBNE	$A1,$05A2
05AA 2F 08 	BRA	$05B4
05AC 4B C1 	LSR	$C1
05AE 6B C0 	ROR	$C0
05B0 9C 	DEC	A
05B1 2E A1 F8 	CBNE	$A1,$05AC
05B4 6F 	RET
; dispatch command in A, reading first operand if present
05B5 A8 C4 	SBC	A,#$C4
05B7 1C 	ASL	A
05B8 FD 	MOV	Y,A
05B9 F6 82 18 	MOV	A,$1882+Y
05BC 2D 	PUSH	A
05BD F6 81 18 	MOV	A,$1881+Y
05C0 2D 	PUSH	A
05C1 DD 	MOV	A,Y
05C2 5C 	LSR	A
05C3 FD 	MOV	Y,A
05C4 F6 F9 18 	MOV	A,$18F9+Y
05C7 F0 0A 	BEQ	$05D3
; read next command for voice X/2 into $A2, A
05C9 E7 02 	MOV	A,[$02+X]
05CB C4 A2 	MOV	$A2,A
05CD BB 02 	INC	$02+X
05CF D0 02 	BNE	$05D3
05D1 BB 03 	INC	$03+X
05D3 6F 	RET
; scan ahead to next note command
05D4 F4 02 	MOV	A,$02+X
05D6 FB 03 	MOV	Y,$03+X
05D8 DA 90 	MOVW	$90,YA
05DA F4 26 	MOV	A,$26+X
05DC C4 C5 	MOV	$C5,A
05DE 8D 00 	MOV	Y,#$00
05E0 F7 90 	MOV	A,[$90]+Y
05E2 68 C4 	CMP	A,#$C4
05E4 90 61 	BCC	$0647
05E6 3A 90 	INCW	$90
05E8 68 EB 	CMP	A,#$EB
05EA F0 5B 	BEQ	$0647
05EC 68 F6 	CMP	A,#$F6
05EE D0 05 	BNE	$05F5
05F0 3F 58 16 	CALL	$1658
05F3 2F E9 	BRA	$05DE
05F5 68 E3 	CMP	A,#$E3
05F7 D0 05 	BNE	$05FE
05F9 3F 25 17 	CALL	$1725
05FC 2F E0 	BRA	$05DE
05FE 68 F5 	CMP	A,#$F5
0600 D0 05 	BNE	$0607
0602 3F 95 16 	CALL	$1695
0605 2F D7 	BRA	$05DE
0607 68 E5 	CMP	A,#$E5
0609 D0 05 	BNE	$0610
060B 3F CF 15 	CALL	$15CF
060E 2F CE 	BRA	$05DE
0610 68 E7 	CMP	A,#$E7
0612 D0 05 	BNE	$0619
0614 3F F3 15 	CALL	$15F3
0617 2F C5 	BRA	$05DE
0619 68 E9 	CMP	A,#$E9
061B D0 05 	BNE	$0622
061D 3F 33 16 	CALL	$1633
0620 2F BC 	BRA	$05DE
0622 68 EA 	CMP	A,#$EA
0624 D0 05 	BNE	$062B
0626 3F 39 16 	CALL	$1639
0629 2F B3 	BRA	$05DE
062B 68 DC 	CMP	A,#$DC
062D D0 08 	BNE	$0637
062F 3F CF 15 	CALL	$15CF
0632 3F F3 15 	CALL	$15F3
0635 2F A7 	BRA	$05DE
0637 80 	SETC
0638 A8 C4 	SBC	A,#$C4
063A FD 	MOV	Y,A
063B F6 F9 18 	MOV	A,$18F9+Y
063E F0 9E 	BEQ	$05DE
0640 FD 	MOV	Y,A
0641 3A 90 	INCW	$90
0643 FE FC 	DBNZ	Y,$0641
0645 2F 99 	BRA	$05E0
0647 6F 	RET
; set DSP register Y to A
0648 CB F2 	MOV	$F2,Y
064A C4 F3 	MOV	$F3,A
064C 6F 	RET
; clear f4/f5 read regs
064D 8F 17 F1 	MOV	$F1,#$17
0650 8F 07 F1 	MOV	$F1,#$07
0653 6F 	RET
;
0654 40 	SETP                    ; direct page = 01
0655 F4 11 	MOV	A,$11+X
0657 F0 02 	BEQ	$065B
0659 9B 11 	DEC	$11+X           ; DEC $0111+X if not zero
065B F4 31 	MOV	A,$31+X
065D F0 02 	BEQ	$0661
065F 9B 31 	DEC	$31+X           ; DEC $0131+x if not zero
0661 20 	CLRP                    ; direct page = 00
0662 F5 A0 F6 	MOV	A,$F6A0+X
0665 F0 26 	BEQ	$068D           ; if F6A0+X != 0 then
0667 9C 	DEC	A 
0668 D5 A0 F6 	MOV	$F6A0+X,A       ;   DEC F6A0+X
066B F5 20 F6 	MOV	A,$F620+X
066E C4 98 	MOV	$98,A
0670 F5 21 F6 	MOV	A,$F621+X
0673 C4 99 	MOV	$99,A 
0675 F5 41 F6 	MOV	A,$F641+X
0678 FD 	MOV	Y,A
0679 F5 40 F6 	MOV	A,$F640+X
067C 7A 98 	ADDW	YA,$98
067E D5 20 F6 	MOV	$F620+X,A
0681 DD 	MOV	A,Y             ;   F620/1 += F640/1
0682 75 21 F6 	CMP	A,$F621+X       ;   CMP old value high byte F621
0685 D5 21 F6 	MOV	$F621+X,A
0688 F0 03 	BEQ	$068D
068A 09 8F DB 	OR	$DB<d>,$8F<s>   ;   if different, set vbit in $DB
068D F5 A1 F6 	MOV	A,$F6A1+X
0690 F0 26 	BEQ	$06B8           ; if F6A1+X != 0 then
0692 9C 	DEC	A
0693 D5 A1 F6 	MOV	$F6A1+X,A       ;   DEC F6A1+X
0696 F5 60 F6 	MOV	A,$F660+X
0699 C4 98 	MOV	$98,A
069B F5 61 F6 	MOV	A,$F661+X
069E C4 99 	MOV	$99,A
06A0 F5 81 F6 	MOV	A,$F681+X
06A3 FD 	MOV	Y,A
06A4 F5 80 F6 	MOV	A,$F680+X
06A7 7A 98 	ADDW	YA,$98
06A9 D5 60 F6 	MOV	$F660+X,A
06AC DD 	MOV	A,Y             ;   F660/1 += F680/1
06AD 75 61 F6 	CMP	A,$F661+X       ;   CMP old value high byte F661
06B0 D5 61 F6 	MOV	$F661+X,A
06B3 F0 03 	BEQ	$06B8
06B5 09 8F DB 	OR	$DB<d>,$8F<s>   ;   if different, set vbit in $DB
06B8 F5 A0 F8 	MOV	A,$F8A0+X
06BB C4 98 	MOV	$98,A
06BD F5 80 F7 	MOV	A,$F780+X
06C0 C4 99 	MOV	$99,A
06C2 F5 81 F7 	MOV	A,$F781+X
06C5 C4 9A 	MOV	$9A,A
06C7 BA 98 	MOVW	YA,$98
06C9 D0 04 	BNE	$06CF
06CB E4 9A 	MOV	A,$9A
06CD F0 2E 	BEQ	$06FD
06CF F5 20 F7 	MOV	A,$F720+X
06D2 9C 	DEC	A
06D3 D0 09 	BNE	$06DE
06D5 D5 80 F7 	MOV	$F780+X,A
06D8 D5 81 F7 	MOV	$F781+X,A
06DB D5 A0 F8 	MOV	$F8A0+X,A
06DE D5 20 F7 	MOV	$F720+X,A
06E1 60 	CLRC
06E2 F5 E0 F8 	MOV	A,$F8E0+X
06E5 FD 	MOV	Y,A
06E6 F5 A1 F8 	MOV	A,$F8A1+X
06E9 7A 98 	ADDW	YA,$98
06EB D5 A1 F8 	MOV	$F8A1+X,A
06EE DD 	MOV	A,Y
06EF D5 E0 F8 	MOV	$F8E0+X,A
06F2 E4 9A 	MOV	A,$9A
06F4 95 E1 F8 	ADC	A,$F8E1+X
06F7 D5 E1 F8 	MOV	$F8E1+X,A
06FA 09 8F DC 	OR	$DC<d>,$8F<s>
06FD F5 71 01 	MOV	A,$0171+X
0700 F0 42 	BEQ	$0744
0702 F5 A0 F7 	MOV	A,$F7A0+X
0705 C4 98 	MOV	$98,A
0707 F5 A1 F7 	MOV	A,$F7A1+X
070A C4 99 	MOV	$99,A
070C F5 81 F8 	MOV	A,$F881+X
070F FD 	MOV	Y,A
0710 C4 9A 	MOV	$9A,A
0712 F5 80 F8 	MOV	A,$F880+X
0715 7A 98 	ADDW	YA,$98
0717 D5 80 F8 	MOV	$F880+X,A
071A DD 	MOV	A,Y
071B 75 81 F8 	CMP	A,$F881+X
071E D5 81 F8 	MOV	$F881+X,A
0721 F0 03 	BEQ	$0726
0723 09 8F DB 	OR	$DB<d>,$8F<s>
0726 F5 01 F7 	MOV	A,$F701+X
0729 9C 	DEC	A
072A D0 15 	BNE	$0741
072C 58 FF 98 	EOR	$98,#$FF
072F 58 FF 99 	EOR	$99,#$FF
0732 3A 98 	INCW	$98
0734 E4 98 	MOV	A,$98
0736 D5 A0 F7 	MOV	$F7A0+X,A
0739 E4 99 	MOV	A,$99
073B D5 A1 F7 	MOV	$F7A1+X,A
073E F5 00 F7 	MOV	A,$F700+X
0741 D5 01 F7 	MOV	$F701+X,A
0744 6F 	RET
; set volume/pitch regs on DSP for voice X/2
0745 F5 51 01 	MOV	A,$0151+X
0748 F0 07 	BEQ	$0751
074A C4 A2 	MOV	$A2,A
074C F5 11 01 	MOV	A,$0111+X
074F F0 03 	BEQ	$0754
0751 5F FC 07 	JMP	$07FC
0754 F5 E1 F7 	MOV	A,$F7E1+X
0757 FD 	MOV	Y,A
0758 F5 E0 F7 	MOV	A,$F7E0+X
075B DA C0 	MOVW	$C0,YA
075D F5 41 F8 	MOV	A,$F841+X
0760 FD 	MOV	Y,A
0761 F5 40 F8 	MOV	A,$F840+X
0764 7A C0 	ADDW	YA,$C0
0766 DA C2 	MOVW	$C2,YA
0768 D5 40 F8 	MOV	$F840+X,A
076B DD 	MOV	A,Y
076C 75 41 F8 	CMP	A,$F841+X
076F F0 57 	BEQ	$07C8
0771 D5 41 F8 	MOV	$F841+X,A
0774 0B C2 	ASL	$C2
0776 2B C3 	ROL	$C3
0778 F5 E1 F8 	MOV	A,$F8E1+X
077B 8D 0F 	MOV	Y,#$0F
077D CF 	MUL	YA
077E DA 98 	MOVW	$98,YA
0780 F5 E0 F8 	MOV	A,$F8E0+X
0783 8D 0F 	MOV	Y,#$0F
0785 CF 	MUL	YA
0786 DD 	MOV	A,Y
0787 8D 00 	MOV	Y,#$00
0789 7A 98 	ADDW	YA,$98
078B DA 98 	MOVW	$98,YA
078D E4 C3 	MOV	A,$C3
078F CF 	MUL	YA
0790 DA 9A 	MOVW	$9A,YA
0792 EB 98 	MOV	Y,$98
0794 E4 C3 	MOV	A,$C3
0796 CF 	MUL	YA
0797 DD 	MOV	A,Y
0798 8D 00 	MOV	Y,#$00
079A 7A 9A 	ADDW	YA,$9A
079C DA 9A 	MOVW	$9A,YA
079E EB C2 	MOV	Y,$C2
07A0 E4 99 	MOV	A,$99
07A2 CF 	MUL	YA
07A3 DD 	MOV	A,Y
07A4 8D 00 	MOV	Y,#$00
07A6 7A 9A 	ADDW	YA,$9A
07A8 DA 9A 	MOVW	$9A,YA
07AA F3 C3 04 	BBC	$C3,#07,$07B1
07AD 9A 98 	SUBW	YA,$98
07AF DA 9A 	MOVW	$9A,YA
07B1 F5 C1 F8 	MOV	A,$F8C1+X
07B4 FD 	MOV	Y,A
07B5 F5 C0 F8 	MOV	A,$F8C0+X
07B8 5A 9A 	CMPW	YA,$9A
07BA F0 0C 	BEQ	$07C8
07BC BA 9A 	MOVW	YA,$9A
07BE D5 C0 F8 	MOV	$F8C0+X,A
07C1 DD 	MOV	A,Y
07C2 D5 C1 F8 	MOV	$F8C1+X,A
07C5 09 8F DC 	OR	$DC<d>,$8F<s>
07C8 F5 C1 F6 	MOV	A,$F6C1+X
07CB 9C 	DEC	A
07CC D0 2B 	BNE	$07F9
07CE F5 C1 F7 	MOV	A,$F7C1+X
07D1 FD 	MOV	Y,A
07D2 F5 C0 F7 	MOV	A,$F7C0+X
07D5 DA 98 	MOVW	$98,YA
07D7 E4 C1 	MOV	A,$C1
07D9 C4 C2 	MOV	$C2,A
07DB F5 90 01 	MOV	A,$0190+X
07DE C4 9B 	MOV	$9B,A
07E0 38 70 9B 	AND	$9B,#$70
07E3 28 07 	AND	A,#$07
07E5 3F 61 09 	CALL	$0961
07E8 D5 E0 F7 	MOV	$F7E0+X,A
07EB DD 	MOV	A,Y
07EC D5 E1 F7 	MOV	$F7E1+X,A
07EF E4 9A 	MOV	A,$9A
07F1 04 9B 	OR	A,$9B
07F3 D5 90 01 	MOV	$0190+X,A
07F6 F5 C0 F6 	MOV	A,$F6C0+X
07F9 D5 C1 F6 	MOV	$F6C1+X,A
07FC F5 70 01 	MOV	A,$0170+X
07FF F0 5C 	BEQ	$085D
0801 C4 A2 	MOV	$A2,A
0803 F5 31 01 	MOV	A,$0131+X
0806 D0 55 	BNE	$085D
0808 F5 21 F8 	MOV	A,$F821+X
080B FD 	MOV	Y,A
080C F5 20 F8 	MOV	A,$F820+X
080F DA C0 	MOVW	$C0,YA
0811 CB C2 	MOV	$C2,Y
0813 F5 61 F8 	MOV	A,$F861+X
0816 FD 	MOV	Y,A
0817 F5 60 F8 	MOV	A,$F860+X
081A 7A C0 	ADDW	YA,$C0
081C D5 60 F8 	MOV	$F860+X,A
081F DD 	MOV	A,Y
0820 75 61 F8 	CMP	A,$F861+X
0823 F0 06 	BEQ	$082B
0825 D5 61 F8 	MOV	$F861+X,A
0828 09 8F DB 	OR	$DB<d>,$8F<s>
082B F5 E1 F6 	MOV	A,$F6E1+X
082E 9C 	DEC	A
082F D0 29 	BNE	$085A
0831 F5 01 F8 	MOV	A,$F801+X
0834 FD 	MOV	Y,A
0835 F5 00 F8 	MOV	A,$F800+X
0838 DA 98 	MOVW	$98,YA
083A F5 90 01 	MOV	A,$0190+X
083D C4 9B 	MOV	$9B,A
083F 38 07 9B 	AND	$9B,#$07
0842 9F 	XCN	A
0843 28 07 	AND	A,#$07
0845 3F 61 09 	CALL	$0961
0848 D5 20 F8 	MOV	$F820+X,A
084B DD 	MOV	A,Y
084C D5 21 F8 	MOV	$F821+X,A
084F E4 9A 	MOV	A,$9A
0851 9F 	XCN	A
0852 04 9B 	OR	A,$9B
0854 D5 90 01 	MOV	$0190+X,A
0857 F5 E0 F6 	MOV	A,$F6E0+X
085A D5 E1 F6 	MOV	$F6E1+X,A
085D BA DB 	MOVW	YA,$DB
085F D0 01 	BNE	$0862
0861 6F 	RET
0862 7D 	MOV	A,X
0863 28 0F 	AND	A,#$0F
0865 C4 98 	MOV	$98,A
0867 E4 98 	MOV	A,$98
0869 9F 	XCN	A
086A 5C 	LSR	A
086B C4 99 	MOV	$99,A
086D E4 8F 	MOV	A,$8F
086F 24 DB 	AND	A,$DB
0871 F0 06 	BEQ	$0879
0873 4E DB 00 	TCLR1	$00DB
0876 3F 88 08 	CALL	$0888
0879 E4 8F 	MOV	A,$8F
087B 24 DC 	AND	A,$DC
087D F0 08 	BEQ	$0887
087F 4E DC 00 	TCLR1	$00DC
0882 22 99 	SET1	$99,#01
0884 3F 14 09 	CALL	$0914
0887 6F 	RET
; set voice volume DSP regs
0888 8F 80 9A 	MOV	$9A,#$80
088B 03 85 23 	BBS	$85,#00,$08B1
088E 43 85 20 	BBS	$85,#02,$08B1
0891 E4 8F 	MOV	A,$8F
0893 24 84 	AND	A,$84
0895 D0 1A 	BNE	$08B1
0897 F5 61 F6 	MOV	A,$F661+X
089A FD 	MOV	Y,A
089B C8 10 	CMP	X,#$10
089D 90 08 	BCC	$08A7
089F E4 B2 	MOV	A,$B2
08A1 48 80 	EOR	A,#$80
08A3 3F D4 0F 	CALL	$0FD4
08A6 FD 	MOV	Y,A
08A7 F5 81 F8 	MOV	A,$F881+X
08AA 3F D4 0F 	CALL	$0FD4
08AD 48 FF 	EOR	A,#$FF
08AF C4 9A 	MOV	$9A,A
08B1 F5 21 F6 	MOV	A,$F621+X
08B4 FD 	MOV	Y,A
08B5 C4 9B 	MOV	$9B,A
08B7 F5 61 F8 	MOV	A,$F861+X
08BA F0 0C 	BEQ	$08C8
08BC 1C 	ASL	A
08BD CF 	MUL	YA
08BE B0 08 	BCS	$08C8
08C0 DD 	MOV	A,Y
08C1 84 9B 	ADC	A,$9B
08C3 10 02 	BPL	$08C7
08C5 E8 7F 	MOV	A,#$7F
08C7 FD 	MOV	Y,A
08C8 C8 10 	CMP	X,#$10
08CA B0 0D 	BCS	$08D9
08CC E4 A6 	MOV	A,$A6
08CE CF 	MUL	YA
08CF E4 8F 	MOV	A,$8F
08D1 24 61 	AND	A,$61
08D3 D0 11 	BNE	$08E6
08D5 E4 51 	MOV	A,$51
08D7 2F 0C 	BRA	$08E5
08D9 E4 8F 	MOV	A,$8F
08DB 24 84 	AND	A,$84
08DD F0 04 	BEQ	$08E3
08DF E8 FF 	MOV	A,#$FF
08E1 2F 02 	BRA	$08E5
08E3 E4 A8 	MOV	A,$A8
08E5 CF 	MUL	YA
08E6 CB 9B 	MOV	$9B,Y
08E8 E4 9A 	MOV	A,$9A
08EA FD 	MOV	Y,A
08EB E4 9B 	MOV	A,$9B
08ED CF 	MUL	YA
08EE E4 8F 	MOV	A,$8F
08F0 24 A4 	AND	A,$A4
08F2 F0 02 	BEQ	$08F6
08F4 8D 00 	MOV	Y,#$00
08F6 DD 	MOV	A,Y
08F7 EB 98 	MOV	Y,$98
08F9 D6 C9 00 	MOV	$00C9+Y,A
08FC FD 	MOV	Y,A
08FD E4 99 	MOV	A,$99
08FF C4 F2 	MOV	$F2,A
0901 7E F3 	CMP	Y,$F3
0903 F0 02 	BEQ	$0907
0905 CB F3 	MOV	$F3,Y
0907 E4 9A 	MOV	A,$9A
0909 48 FF 	EOR	A,#$FF
090B EA 98 00 	NOT1	$0098
090E AB 99 	INC	$99
0910 33 99 D7 	BBC	$99,#01,$08EA
0913 6F 	RET
; set voice pitch DSP regs
0914 F5 E1 F8 	MOV	A,$F8E1+X
0917 FD 	MOV	Y,A
0918 F5 E0 F8 	MOV	A,$F8E0+X
091B DA 9A 	MOVW	$9A,YA
091D F5 C1 F8 	MOV	A,$F8C1+X
0920 FD 	MOV	Y,A
0921 F5 C0 F8 	MOV	A,$F8C0+X
0924 7A 9A 	ADDW	YA,$9A
0926 DA 9A 	MOVW	$9A,YA          ; YA, $9A/B = F8E0/1+X + F8C0/1+X
0928 C8 10 	CMP	X,#$10
092A 90 04 	BCC	$0930
092C BA 9A 	MOVW	YA,$9A
092E 2F 1B 	BRA	$094B
0930 E4 BC 	MOV	A,$BC
0932 0D 	PUSH	PSW
0933 2D 	PUSH	A
0934 CF 	MUL	YA
0935 DA 9C 	MOVW	$9C,YA 
0937 AE 	POP	A
0938 EB 9A 	MOV	Y,$9A
093A CF 	MUL	YA 
093B DD 	MOV	A,Y
093C 8D 00 	MOV	Y,#$00
093E 7A 9C 	ADDW	YA,$9C          ; YA = ($BC * $9A/B) >> 8
0940 8E 	POP	PSW
0941 30 08 	BMI	$094B   ; branch if $BC negative
0943 1C 	ASL	A
0944 2D 	PUSH	A
0945 DD 	MOV	A,Y
0946 3C 	ROL	A
0947 FD 	MOV	Y,A
0948 AE 	POP	A       ; ASL YA
0949 7A 9A 	ADDW	YA,$9A  ; final pitch value to write
094B 4D 	PUSH	X
094C F8 99 	MOV	X,$99
094E D8 F2 	MOV	$F2,X
0950 64 F3 	CMP	A,$F3
0952 F0 02 	BEQ	$0956
0954 C4 F3 	MOV	$F3,A   ; set DSP pitch lo from A if different
0956 3D 	INC	X
0957 D8 F2 	MOV	$F2,X
0959 7E F3 	CMP	Y,$F3
095B F0 02 	BEQ	$095F
095D CB F3 	MOV	$F3,Y   ; set DSP pitch hi from Y if different
095F CE 	POP	X
0960 6F 	RET
;
0961 8F 00 9A 	MOV	$9A,#$00
0964 78 C0 A2 	CMP	$A2,#$C0
0967 B0 4B 	BCS	$09B4
0969 78 80 A2 	CMP	$A2,#$80
096C B0 1F 	BCS	$098D
096E 58 FF C0 	EOR	$C0,#$FF
0971 58 FF C1 	EOR	$C1,#$FF
0974 3A C0 	INCW	$C0
0976 FD 	MOV	Y,A
0977 F0 65 	BEQ	$09DE
0979 9C 	DEC	A
097A C4 9A 	MOV	$9A,A
097C E3 C1 5F 	BBS	$C1,#07,$09DE
097F 4B 99 	LSR	$99
0981 6B 98 	ROR	$98
0983 4B 99 	LSR	$99
0985 6B 98 	ROR	$98
0987 BA 98 	MOVW	YA,$98
0989 7A C0 	ADDW	YA,$C0
098B 2F 53 	BRA	$09E0
098D 58 FF C0 	EOR	$C0,#$FF
0990 58 FF C1 	EOR	$C1,#$FF
0993 3A C0 	INCW	$C0
0995 FD 	MOV	Y,A
0996 F0 46 	BEQ	$09DE
0998 9C 	DEC	A
0999 C4 9A 	MOV	$9A,A
099B F3 C1 40 	BBC	$C1,#07,$09DE
099E 4B 99 	LSR	$99
09A0 6B 98 	ROR	$98
09A2 4B 99 	LSR	$99
09A4 6B 98 	ROR	$98
09A6 58 FF 98 	EOR	$98,#$FF
09A9 58 FF 99 	EOR	$99,#$FF
09AC 3A 98 	INCW	$98
09AE BA 98 	MOVW	YA,$98
09B0 7A C0 	ADDW	YA,$C0
09B2 2F 2C 	BRA	$09E0
09B4 FD 	MOV	Y,A
09B5 F0 1F 	BEQ	$09D6
09B7 9C 	DEC	A
09B8 C4 9A 	MOV	$9A,A
09BA F3 C1 08 	BBC	$C1,#07,$09C5
09BD 58 FF C0 	EOR	$C0,#$FF
09C0 58 FF C1 	EOR	$C1,#$FF
09C3 3A C0 	INCW	$C0
09C5 4B 99 	LSR	$99
09C7 6B 98 	ROR	$98
09C9 4B 99 	LSR	$99
09CB 6B 98 	ROR	$98
09CD BA 98 	MOVW	YA,$98
09CF 7A C0 	ADDW	YA,$C0
09D1 DA C0 	MOVW	$C0,YA
09D3 E3 C2 08 	BBS	$C2,#07,$09DE
09D6 58 FF C0 	EOR	$C0,#$FF
09D9 58 FF C1 	EOR	$C1,#$FF
09DC 3A C0 	INCW	$C0
09DE BA C0 	MOVW	YA,$C0
09E0 6F 	RET
; check for, process command from CPU
09E1 F8 F4 	MOV	X,$F4           ; check 2140
09E3 F0 35 	BEQ	$0A1A           ; return if zero
09E5 F8 F4 	MOV	X,$F4
09E7 3E F4 	CMP	X,$F4
09E9 D0 FA 	BNE	$09E5           ; wait for 2140 to go zero again
09EB BA F6 	MOVW	YA,$F6
09ED DA 8D 	MOVW	$8D,YA
09EF BA F4 	MOVW	YA,$F4
09F1 DA 8B 	MOVW	$8B,YA          ; move 2140/1/2/3 to $8B/C/D/E
09F3 3F 4D 06 	CALL	$064D           ; clear read regs 2140/1
09F6 C4 F4 	MOV	$F4,A
09F8 5D 	MOV	X,A
09F9 10 03 	BPL	$09FE
09FB 5F 54 0C 	JMP	$0C54           ; if X >= 80, JMP 0C54
09FE C8 10 	CMP	X,#$10
0A00 90 18 	BCC	$0A1A
0A02 C8 20 	CMP	X,#$20
0A04 B0 0D 	BCS	$0A13
0A06 28 0F 	AND	A,#$0F          ; if 10 < X < 20,
0A08 1C 	ASL	A
0A09 FD 	MOV	Y,A
0A0A F6 36 19 	MOV	A,$1936+Y
0A0D 2D 	PUSH	A
0A0E F6 35 19 	MOV	A,$1935+Y
0A11 2D 	PUSH	A
0A12 6F 	RET                     ; jmp via tbl at 1935
0A13 C8 30 	CMP	X,#$30
0A15 B0 03 	BCS	$0A1A
0A17 5F F1 0B 	JMP	$0BF1           ; 20 < X < 30 then JMP 0BF1
0A1A 6F 	RET
; process CPU cmd $14
0A1B 3F 54 10 	CALL	$1054
; process CPU cmd $10
0A1E 8F 10 C4 	MOV	$C4,#$10
0A21 2F 06 	BRA	$0A29
; process CPU cmd $15
0A23 3F 54 10 	CALL	$1054
; process CPU cmd $11
0A26 8F 20 C4 	MOV	$C4,#$20
0A29 E8 FF 	MOV	A,#$FF
0A2B 8D 5C 	MOV	Y,#$5C
0A2D 3F 48 06 	CALL	$0648           ; key off all voices
0A30 E4 76 	MOV	A,$76
0A32 FA 8C C7 	MOV	$C7<d>,$8C<s>   ; store song # in C7
0A35 E4 8D 	MOV	A,$8D
0A37 C4 A6 	MOV	$A6,A
0A39 8F 00 AD 	MOV	$AD,#$00
0A3C 3F 38 0E 	CALL	$0E38           ; download song info (like FE cmd)
0A3F E8 00 	MOV	A,#$00
0A41 FD 	MOV	Y,A
0A42 DA 83 	MOVW	$83,YA          ; zero $83
0A44 B2 86 	CLR1	$86,#05         ; clear bit 5 of $86
0A46 72 85 	CLR1	$85,#03         ; clear bit 3 of $85
0A48 DA D9 	MOVW	$D9,YA          ; zero $D9
0A4A C4 DD 	MOV	$DD,A           ; zero $DD
0A4C 69 C7 C6 	CMP	$C6<d>,$C7<s>
0A4F D0 41 	BNE	$0A92           ; is this the saved song?
0A51 3F 95 10 	CALL	$1095           ; restore saved state
0A54 E4 52 	MOV	A,$52
0A56 F0 3A 	BEQ	$0A92
0A58 38 E0 8A 	AND	$8A,#$E0
0A5B 09 62 8A 	OR	$8A<d>,$62<s>
0A5E CD 00 	MOV	X,#$00
0A60 8F 01 8F 	MOV	$8F,#$01
0A63 BB 25 	INC	$25+X
0A65 D8 A3 	MOV	$A3,X
0A67 3F 29 15 	CALL	$1529
0A6A 7D 	MOV	A,X
0A6B 9F 	XCN	A
0A6C 5C 	LSR	A
0A6D FD 	MOV	Y,A             ; get voice x/2 DSP addr to Y
0A6E E8 00 	MOV	A,#$00
0A70 3F 48 06 	CALL	$0648           ; set voice volume L to 0
0A73 FC 	INC	Y
0A74 3F 48 06 	CALL	$0648           ; set voice volume R to 0
0A77 FC 	INC	Y
0A78 CB 99 	MOV	$99,Y
0A7A 3F 14 09 	CALL	$0914
0A7D 3D 	INC	X
0A7E 3D 	INC	X
0A7F 0B 8F 	ASL	$8F
0A81 D0 E0 	BNE	$0A63
0A83 E8 00 	MOV	A,#$00
0A85 C4 54 	MOV	$54,A
0A87 C4 56 	MOV	$56,A
0A89 C4 58 	MOV	$58,A
0A8B FA 23 22 	MOV	$22<d>,$23<s>
0A8E C4 24 	MOV	$24,A
0A90 2F 6A 	BRA	$0AFC
0A92 E8 00 	MOV	A,#$00
0A94 FD 	MOV	Y,A
0A95 C4 52 	MOV	$52,A
0A97 DA 53 	MOVW	$53,YA
0A99 DA 55 	MOVW	$55,YA
0A9B DA 57 	MOVW	$57,YA
0A9D C4 22 	MOV	$22,A           ; zero key-on shadow
0A9F C4 24 	MOV	$24,A           ; zero key-off shadow
0AA1 C4 23 	MOV	$23,A
0AA3 C4 59 	MOV	$59,A
0AA5 C4 5B 	MOV	$5B,A
0AA7 C4 5F 	MOV	$5F,A
0AA9 C4 61 	MOV	$61,A
0AAB 8F 01 46 	MOV	$46,#$01
0AAE 8F FF 47 	MOV	$47,#$FF
0AB1 8F FF 51 	MOV	$51,#$FF
0AB4 C4 7B 	MOV	$7B,A
0AB6 EB C4 	MOV	Y,$C4           ; #$10 or #$20 for cmd $10 or $11
0AB8 CD 10 	MOV	X,#$10
0ABA F6 03 1C 	MOV	A,$1C03+Y
0ABD D4 01 	MOV	$01+X,A
0ABF DC 	DEC	Y
0AC0 1D 	DEC	X
0AC1 D0 F7 	BNE	$0ABA           ; copy 1C04 or 1C14-x to 02-11
0AC3 E5 00 1C 	MOV	A,$1C00
0AC6 C4 00 	MOV	$00,A
0AC8 E5 01 1C 	MOV	A,$1C01
0ACB C4 01 	MOV	$01,A           ; copy 1C00/1 to 00/01
0ACD E8 24 	MOV	A,#$24
0ACF 8D 1C 	MOV	Y,#$1C
0AD1 9A 00 	SUBW	YA,$00
0AD3 DA 00 	MOVW	$00,YA          ; $00 = #$1C24 - $00
0AD5 CD 0E 	MOV	X,#$0E
0AD7 8F 80 8F 	MOV	$8F,#$80
0ADA E5 02 1C 	MOV	A,$1C02
0ADD EC 03 1C 	MOV	Y,$1C03
0AE0 DA 98 	MOVW	$98,YA          ; $98/9 = $1C02/3
0AE2 F4 02 	MOV	A,$02+X
0AE4 FB 03 	MOV	Y,$03+X
0AE6 5A 98 	CMPW	YA,$98
0AE8 F0 0C 	BEQ	$0AF6
0AEA 09 8F 52 	OR	$52<d>,$8F<s>   ; set bit in $52 if voice active
0AED 7A 00 	ADDW	YA,$00 
0AEF D4 02 	MOV	$02+X,A
0AF1 DB 03 	MOV	$03+X,Y         ; add $00 to $02+X
0AF3 3F 12 0B 	CALL	$0B12           ; init per-voice data
0AF6 1D 	DEC	X
0AF7 1D 	DEC	X
0AF8 4B 8F 	LSR	$8F
0AFA D0 E6 	BNE	$0AE2           ; loop for each voice
0AFC FA 53 87 	MOV	$87<d>,$53<s>   ; DSP shadow for echo enable
0AFF FA 55 88 	MOV	$88<d>,$55<s>   ; DSP shadow for noise enable
0B02 FA 57 89 	MOV	$89<d>,$57<s>   ; DSP shadow for pitchmod
0B05 E8 00 	MOV	A,#$00
0B07 FD 	MOV	Y,A
0B08 DA DB 	MOVW	$DB,YA          ; zero word $DB
0B0A CD FF 	MOV	X,#$FF
0B0C BD 	MOV	SP,X            ; reset stack ptr to $01FF
0B0D E4 FD 	MOV	A,$FD           ; clear counter0
0B0F 5F 72 02 	JMP	$0272           ; jump back to main loop
;
0B12 7D 	MOV	A,X
0B13 1C 	ASL	A
0B14 D4 26 	MOV	$26+X,A
0B16 E8 00 	MOV	A,#$00
0B18 D5 50 01 	MOV	$0150+X,A
0B1B D5 80 F7 	MOV	$F780+X,A
0B1E D5 81 F7 	MOV	$F781+X,A
0B21 D5 A0 F8 	MOV	$F8A0+X,A
0B24 D5 51 01 	MOV	$0151+X,A
0B27 D5 70 01 	MOV	$0170+X,A
0B2A D5 71 01 	MOV	$0171+X,A
0B2D D5 80 F8 	MOV	$F880+X,A
0B30 D5 81 F8 	MOV	$F881+X,A
0B33 D5 60 F7 	MOV	$F760+X,A
0B36 D5 21 F7 	MOV	$F721+X,A
0B39 BC 	INC	A
0B3A D4 25 	MOV	$25+X,A
0B3C 6F 	RET
; process CPU cmd $18
0B3D BA D9 	MOVW	YA,$D9
0B3F F0 01 	BEQ	$0B42
0B41 6F 	RET
0B42 FA 8C 90 	MOV	$90<d>,$8C<s>
0B45 8F 00 91 	MOV	$91,#$00
0B48 0B 90 	ASL	$90
0B4A 2B 91 	ROL	$91
0B4C 0B 90 	ASL	$90
0B4E 2B 91 	ROL	$91
0B50 E8 00 	MOV	A,#$00
0B52 8D 2C 	MOV	Y,#$2C
0B54 7A 90 	ADDW	YA,$90
0B56 DA 90 	MOVW	$90,YA
0B58 CD 1E 	MOV	X,#$1E
0B5A 8F 80 8F 	MOV	$8F,#$80
0B5D E4 83 	MOV	A,$83
0B5F D0 04 	BNE	$0B65
0B61 E4 84 	MOV	A,$84
0B63 48 F0 	EOR	A,#$F0
0B65 C4 A1 	MOV	$A1,A
0B67 E4 A1 	MOV	A,$A1
0B69 24 8F 	AND	A,$8F
0B6B D0 07 	BNE	$0B74
0B6D 4B 8F 	LSR	$8F
0B6F 1D 	DEC	X
0B70 1D 	DEC	X
0B71 B3 8F F3 	BBC	$8F,#05,$0B67
0B74 8D 03 	MOV	Y,#$03
0B76 8F 00 A1 	MOV	$A1,#$00
0B79 F7 90 	MOV	A,[$90]+Y
0B7B F0 35 	BEQ	$0BB2
0B7D D4 03 	MOV	$03+X,A
0B7F DC 	DEC	Y
0B80 F7 90 	MOV	A,[$90]+Y
0B82 D4 02 	MOV	$02+X,A
0B84 09 8F A1 	OR	$A1<d>,$8F<s>
0B87 3F 12 0B 	CALL	$0B12
0B8A BB 25 	INC	$25+X
0B8C E8 41 	MOV	A,#$41
0B8E D5 21 F6 	MOV	$F621+X,A
0B91 E8 80 	MOV	A,#$80
0B93 D5 61 F6 	MOV	$F661+X,A
0B96 E8 03 	MOV	A,#$03
0B98 D5 00 F6 	MOV	$F600+X,A
0B9B E8 00 	MOV	A,#$00
0B9D D5 A0 F6 	MOV	$F6A0+X,A
0BA0 D5 A1 F6 	MOV	$F6A1+X,A
0BA3 6D 	PUSH	Y
0BA4 3F 72 17 	CALL	$1772
0BA7 E8 04 	MOV	A,#$04
0BA9 3F 02 15 	CALL	$1502
0BAC EE 	POP	Y
0BAD 1D 	DEC	X
0BAE 1D 	DEC	X
0BAF 4B 8F 	LSR	$8F
0BB1 E8 DC 	MOV	A,#$DC
0BB3 DC 	DEC	Y
0BB4 10 C3 	BPL	$0B79
0BB6 E4 83 	MOV	A,$83
0BB8 04 A1 	OR	A,$A1
0BBA 4E 22 00 	TCLR1	$0022
0BBD 4E 5A 00 	TCLR1	$005A
0BC0 4E 5C 00 	TCLR1	$005C
0BC3 4E 60 00 	TCLR1	$0060
0BC6 0E 24 00 	TSET1	$0024
0BC9 FA 83 A2 	MOV	$A2<d>,$83<s>
0BCC CD 1E 	MOV	X,#$1E
0BCE 8F 80 8F 	MOV	$8F,#$80
0BD1 0B A2 	ASL	$A2
0BD3 90 03 	BCC	$0BD8
0BD5 3F 72 17 	CALL	$1772
0BD8 1D 	DEC	X
0BD9 1D 	DEC	X
0BDA 4B 8F 	LSR	$8F
0BDC 73 8F F2 	BBC	$8F,#03,$0BD1
0BDF E4 A1 	MOV	A,$A1
0BE1 C4 83 	MOV	$83,A
0BE3 4E 87 00 	TCLR1	$0087
0BE6 4E 89 00 	TCLR1	$0089
0BE9 4E 88 00 	TCLR1	$0088
0BEC E4 8D 	MOV	A,$8D
0BEE C4 B2 	MOV	$B2,A
0BF0 6F 	RET
; process CPU cmds $20-2F
0BF1 BA D9 	MOVW	YA,$D9
0BF3 D0 5E 	BNE	$0C53
0BF5 7D 	MOV	A,X
0BF6 28 0F 	AND	A,#$0F
0BF8 1C 	ASL	A
0BF9 FD 	MOV	Y,A
0BFA CD 20 	MOV	X,#$20
0BFC E4 83 	MOV	A,$83
0BFE 04 84 	OR	A,$84
0C00 28 F0 	AND	A,#$F0
0C02 8F 80 8F 	MOV	$8F,#$80
0C05 68 F0 	CMP	A,#$F0
0C07 F0 0C 	BEQ	$0C15
0C09 1D 	DEC	X
0C0A 1D 	DEC	X
0C0B 1C 	ASL	A
0C0C 90 14 	BCC	$0C22
0C0E 4B 8F 	LSR	$8F
0C10 73 8F F6 	BBC	$8F,#03,$0C09
0C13 2F 0D 	BRA	$0C22
0C15 1D 	DEC	X
0C16 1D 	DEC	X
0C17 E4 84 	MOV	A,$84
0C19 24 8F 	AND	A,$8F
0C1B D0 05 	BNE	$0C22
0C1D 4B 8F 	LSR	$8F
0C1F 73 8F F3 	BBC	$8F,#03,$0C15
0C22 F6 E0 17 	MOV	A,$17E0+Y
0C25 F0 2C 	BEQ	$0C53
0C27 D4 03 	MOV	$03+X,A
0C29 F6 DF 17 	MOV	A,$17DF+Y
0C2C D4 02 	MOV	$02+X,A
0C2E 3F 12 0B 	CALL	$0B12
0C31 BB 25 	INC	$25+X
0C33 3F 72 17 	CALL	$1772
0C36 E4 8F 	MOV	A,$8F
0C38 4E 5A 00 	TCLR1	$005A
0C3B 4E 5C 00 	TCLR1	$005C
0C3E 4E 60 00 	TCLR1	$0060
0C41 0E 24 00 	TSET1	$0024
0C44 4E 22 00 	TCLR1	$0022
0C47 4E 87 00 	TCLR1	$0087
0C4A 4E 89 00 	TCLR1	$0089
0C4D 4E 88 00 	TCLR1	$0088
0C50 09 8F 84 	OR	$84<d>,$8F<s>
0C53 6F 	RET
; process CPU cmds >= $80
0C54 C8 F0 	CMP	X,#$F0
0C56 B0 04 	BCS	$0C5C
0C58 C8 90 	CMP	X,#$90
0C5A B0 0D 	BCS	$0C69      ; return if 90 <= X < F0
0C5C 7D 	MOV	A,X
0C5D 28 1F 	AND	A,#$1F
0C5F 1C 	ASL	A
0C60 FD 	MOV	Y,A
0C61 F6 56 19 	MOV	A,$1956+Y
0C64 2D 	PUSH	A
0C65 F6 55 19 	MOV	A,$1955+Y
0C68 2D 	PUSH	A          ; jmp to tbl at 1955,X
0C69 6F 	RET
; process CPU cmds 80-82
0C6A E4 8B 	MOV	A,$8B
0C6C 68 82 	CMP	A,#$82
0C6E B0 06 	BCS	$0C76
0C70 EB 8D 	MOV	Y,$8D
0C72 D0 02 	BNE	$0C76
0C74 80 	SETC
0C75 8D 	MOV	Y,#$60    ; "skip" next instruction
0C76 60         CLRC
0C77 CA 85 60 	MOV1	$0085.3,C
0C7A CD 00 	MOV	X,#$00
0C7C 13 8B 03 	BBC	$8B,#00,$0C82
0C7F BC 	INC	A
0C80 2F 0D 	BRA	$0C8F
0C82 33 8B 05 	BBC	$8B,#01,$0C8A
0C85 BC 	INC	A
0C86 CD 02 	MOV	X,#$02
0C88 2F 05 	BRA	$0C8F
0C8A AB 8B 	INC	$8B
0C8C 60 	CLRC
0C8D 88 03 	ADC	A,#$03
0C8F C4 98 	MOV	$98,A
0C91 EB 8D 	MOV	Y,$8D
0C93 E4 8C 	MOV	A,$8C
0C95 D4 AD 	MOV	$AD+X,A
0C97 D0 0A 	BNE	$0CA3
0C99 DB A6 	MOV	$A6+X,Y
0C9B D4 A5 	MOV	$A5+X,A
0C9D D4 AA 	MOV	$AA+X,A
0C9F D4 A9 	MOV	$A9+X,A
0CA1 2F 13 	BRA	$0CB6
0CA3 DD 	MOV	A,Y
0CA4 80 	SETC
0CA5 B4 A6 	SBC	A,$A6+X
0CA7 F0 EC 	BEQ	$0C95
0CA9 4D 	PUSH	X
0CAA 3F C5 0C 	CALL	$0CC5
0CAD CE 	POP	X
0CAE D4 A9 	MOV	$A9+X,A
0CB0 DB AA 	MOV	$AA+X,Y
0CB2 E8 00 	MOV	A,#$00
0CB4 D4 A5 	MOV	$A5+X,A
0CB6 AB 8B 	INC	$8B
0CB8 69 98 8B 	CMP	$8B<d>,$98<s>
0CBB F0 04 	BEQ	$0CC1
0CBD 3D 	INC	X
0CBE 3D 	INC	X
0CBF 2F D0 	BRA	$0C91
0CC1 8F FF DB 	MOV	$DB,#$FF
0CC4 6F 	RET
; divide (deltas)
0CC5 0D 	PUSH	PSW
0CC6 B0 03 	BCS	$0CCB
0CC8 48 FF 	EOR	A,#$FF
0CCA BC 	INC	A
0CCB F8 8C 	MOV	X,$8C
0CCD 8D 00 	MOV	Y,#$00
0CCF 9E 	DIV	YA,X
0CD0 C4 C1 	MOV	$C1,A
0CD2 E8 00 	MOV	A,#$00
0CD4 9E 	DIV	YA,X
0CD5 C4 C0 	MOV	$C0,A
0CD7 8E 	POP	PSW
0CD8 B0 08 	BCS	$0CE2
0CDA 58 FF C0 	EOR	$C0,#$FF
0CDD 58 FF C1 	EOR	$C1,#$FF
0CE0 3A C0 	INCW	$C0
0CE2 BA C0 	MOVW	YA,$C0
0CE4 6F 	RET
; process CPU cmd $83
0CE5 EB 8D 	MOV	Y,$8D
0CE7 E4 8C 	MOV	A,$8C
0CE9 C4 B5 	MOV	$B5,A
0CEB D0 0A 	BNE	$0CF7
0CED CB B2 	MOV	$B2,Y
0CEF C4 B1 	MOV	$B1,A
0CF1 C4 B4 	MOV	$B4,A
0CF3 C4 B3 	MOV	$B3,A
0CF5 2F 0E 	BRA	$0D05
0CF7 DD 	MOV	A,Y
0CF8 80 	SETC
0CF9 A4 B2 	SBC	A,$B2
0CFB F0 EC 	BEQ	$0CE9
0CFD 3F C5 0C 	CALL	$0CC5
0D00 DA B3 	MOVW	$B3,YA
0D02 8F 00 B1 	MOV	$B1,#$00
0D05 8F FF DB 	MOV	$DB,#$FF
0D08 6F 	RET
; process CPU cmd $84
0D09 EB 8D 	MOV	Y,$8D
0D0B E4 8C 	MOV	A,$8C
0D0D C4 BA 	MOV	$BA,A
0D0F D0 0A 	BNE	$0D1B
0D11 CB B7 	MOV	$B7,Y
0D13 C4 B6 	MOV	$B6,A
0D15 C4 B9 	MOV	$B9,A
0D17 C4 B8 	MOV	$B8,A
0D19 2F 16 	BRA	$0D31
0D1B FA B7 A2 	MOV	$A2<d>,$B7<s>
0D1E 58 80 A2 	EOR	$A2,#$80
0D21 DD 	MOV	A,Y
0D22 48 80 	EOR	A,#$80
0D24 80 	SETC
0D25 A4 A2 	SBC	A,$A2
0D27 F0 E4 	BEQ	$0D0D
0D29 3F C5 0C 	CALL	$0CC5
0D2C DA B8 	MOVW	$B8,YA
0D2E 8F 00 B6 	MOV	$B6,#$00
0D31 8F FF DC 	MOV	$DC,#$FF
0D34 6F 	RET
; process CPU cmd $85
0D35 EB 8D 	MOV	Y,$8D
0D37 E4 8C 	MOV	A,$8C
0D39 C4 BF 	MOV	$BF,A
0D3B D0 0A 	BNE	$0D47
0D3D CB BC 	MOV	$BC,Y
0D3F C4 BB 	MOV	$BB,A
0D41 C4 BE 	MOV	$BE,A
0D43 C4 BD 	MOV	$BD,A
0D45 2F 16 	BRA	$0D5D
0D47 FA BC A2 	MOV	$A2<d>,$BC<s>
0D4A 58 80 A2 	EOR	$A2,#$80
0D4D DD 	MOV	A,Y
0D4E 48 80 	EOR	A,#$80
0D50 80 	SETC
0D51 A4 A2 	SBC	A,$A2
0D53 F0 E4 	BEQ	$0D39
0D55 3F C5 0C 	CALL	$0CC5
0D58 DA BD 	MOVW	$BD,YA
0D5A 8F 00 BB 	MOV	$BB,#$00
0D5D 8F FF DC 	MOV	$DC,#$FF
0D60 6F 	RET
; process CPU cmd $F3
0D61 E4 8C 	MOV	A,$8C
0D63 D0 04 	BNE	$0D69
0D65 12 85 	CLR1	$85,#00
0D67 2F 02 	BRA	$0D6B
0D69 02 85 	SET1	$85,#00
0D6B 8F FF DB 	MOV	$DB,#$FF
0D6E 6F 	RET
; process CPU cmd $F0-F2
0D6F 23 8B 2D 	BBS	$8B,#01,$0D9F
0D72 E4 83 	MOV	A,$83
0D74 04 84 	OR	A,$84
0D76 48 FF 	EOR	A,#$FF
0D78 0E 24 00 	TSET1	$0024
0D7B 4E 22 00 	TCLR1	$0022
0D7E 4E 87 00 	TCLR1	$0087
0D81 4E 89 00 	TCLR1	$0089
0D84 4E 88 00 	TCLR1	$0088
0D87 E8 00 	MOV	A,#$00
0D89 C4 52 	MOV	$52,A
0D8B C4 D9 	MOV	$D9,A
0D8D C4 53 	MOV	$53,A
0D8F C4 57 	MOV	$57,A
0D91 C4 55 	MOV	$55,A
0D93 C4 A0 	MOV	$A0,A
0D95 9C 	DEC	A
0D96 C4 C6 	MOV	$C6,A
0D98 C4 C7 	MOV	$C7,A
0D9A 72 85 	CLR1	$85,#03
0D9C 03 8B 23 	BBS	$8B,#00,$0DC2
0D9F E4 83 	MOV	A,$83
0DA1 0E 24 00 	TSET1	$0024
0DA4 4E 22 00 	TCLR1	$0022
0DA7 4E DB 00 	TCLR1	$00DB
0DAA 4E DC 00 	TCLR1	$00DC
0DAD C4 A1 	MOV	$A1,A
0DAF CD 1E 	MOV	X,#$1E
0DB1 8F 80 8F 	MOV	$8F,#$80
0DB4 0B A1 	ASL	$A1
0DB6 90 03 	BCC	$0DBB
0DB8 3F 72 17 	CALL	$1772
0DBB 1D 	DEC	X
0DBC 1D 	DEC	X
0DBD 4B 8F 	LSR	$8F
0DBF 73 8F F2 	BBC	$8F,#03,$0DB4
0DC2 6F 	RET
; process CPU cmd $F4
0DC3 FA 8C A4 	MOV	$A4<d>,$8C<s>
0DC6 8F FF DB 	MOV	$DB,#$FF
0DC9 6F 	RET
; process CPU cmd $F5 - stop all voices.
0DCA E4 8C 	MOV	A,$8C
0DCC F0 48 	BEQ	$0E16
0DCE 8D 05 	MOV	Y,#$05
0DD0 CB F2 	MOV	$F2,Y
0DD2 E4 F3 	MOV	A,$F3
0DD4 28 7F 	AND	A,#$7F
0DD6 C4 F3 	MOV	$F3,A
0DD8 DD 	MOV	A,Y
0DD9 60 	CLRC
0DDA 88 10 	ADC	A,#$10
0DDC FD 	MOV	Y,A
0DDD 10 F1 	BPL	$0DD0   ; set GAIN mode on all voices
0DDF CD 00 	MOV	X,#$00
0DE1 8D 00 	MOV	Y,#$00
0DE3 CB F2 	MOV	$F2,Y
0DE5 D8 F3 	MOV	$F3,X
0DE7 FC 	INC	Y
0DE8 CB F2 	MOV	$F2,Y
0DEA D8 F3 	MOV	$F3,X
0DEC DD 	MOV	A,Y
0DED 60 	CLRC
0DEE 88 0F 	ADC	A,#$0F
0DF0 FD 	MOV	Y,A
0DF1 10 F0 	BPL	$0DE3   ; set all voice volumes to 0
0DF3 FA 52 98 	MOV	$98<d>,$52<s>
0DF6 FA 83 99 	MOV	$99<d>,$83<s>
0DF9 BA 98 	MOVW	YA,$98
0DFB F0 0A 	BEQ	$0E07
0DFD DA D9 	MOVW	$D9,YA
0DFF E8 00 	MOV	A,#$00
0E01 C4 52 	MOV	$52,A           ; no active voices
0E03 C4 83 	MOV	$83,A
0E05 C4 DB 	MOV	$DB,A
0E07 C4 22 	MOV	$22,A           ; zero key-on shadow
0E09 8D 10 	MOV	Y,#$10
0E0B D6 C8 00 	MOV	$00C8+Y,A
0E0E FE FB 	DBNZ	Y,$0E0B
0E10 CD FF 	MOV	X,#$FF
0E12 BD 	MOV	SP,X            ; set stack ptr to $01FF
0E13 5F 72 02 	JMP	$0272           ; restart main loop
;
0E16 8D 05 	MOV	Y,#$05
0E18 CB F2 	MOV	$F2,Y
0E1A E4 F3 	MOV	A,$F3
0E1C 08 80 	OR	A,#$80
0E1E C4 F3 	MOV	$F3,A
0E20 DD 	MOV	A,Y
0E21 60 	CLRC
0E22 88 10 	ADC	A,#$10
0E24 FD 	MOV	Y,A
0E25 10 F1 	BPL	$0E18           ; set ADSR mode on all voices
0E27 BA D9 	MOVW	YA,$D9
0E29 F0 0C 	BEQ	$0E37
0E2B 8F FF DB 	MOV	$DB,#$FF
0E2E C4 52 	MOV	$52,A
0E30 CB 83 	MOV	$83,Y
0E32 E8 00 	MOV	A,#$00
0E34 FD 	MOV	Y,A
0E35 DA D9 	MOVW	$D9,YA
0E37 6F 	RET
; process CPU cmd $FE
0E38 F8 F4 	MOV	X,$F4
0E3A F0 FC 	BEQ	$0E38
0E3C 3E F4 	CMP	X,$F4
0E3E D0 F8 	BNE	$0E38
0E40 E4 F5 	MOV	A,$F5   ; get subcmd from $F5
0E42 68 F0 	CMP	A,#$F0
0E44 F0 2B 	BEQ	$0E71
0E46 C4 F5 	MOV	$F5,A   ; write it back
0E48 28 07 	AND	A,#$07
0E4A 1C 	ASL	A       ; convert to tbl idx
0E4B 2D 	PUSH	A
0E4C BA F6 	MOVW	YA,$F6
0E4E DA 90 	MOVW	$90,YA  ; move $F6/7 to $90/1
0E50 AE 	POP	A
0E51 AD 1A 	CMP	Y,#$1A
0E53 90 04 	BCC	$0E59
0E55 AD F5 	CMP	Y,#$F5
0E57 90 02 	BCC	$0E5B
0E59 E8 00 	MOV	A,#$00  ; set subcmd idx to 0 unless 1A <= Y < F5
0E5B D8 F4 	MOV	$F4,X   ; write back $F4
0E5D FD 	MOV	Y,A
0E5E F6 A0 11 	MOV	A,$11A0+Y
0E61 2D 	PUSH	A
0E62 F6 9F 11 	MOV	A,$119F+Y
0E65 2D 	PUSH	A       ; put subcmd addr on stack
0E66 3E F4 	CMP	X,$F4
0E68 F0 FC 	BEQ	$0E66
0E6A F8 F4 	MOV	X,$F4
0E6C 3E F4 	CMP	X,$F4
0E6E D0 FA 	BNE	$0E6A
0E70 6F 	RET
0E71 D8 F4 	MOV	$F4,X   ; write back $F4
0E73 5F 4D 06 	JMP	$064D   ; clear f4/f5 read regs
; FE-03
0E76 8D 00 	MOV	Y,#$00
0E78 E4 F5 	MOV	A,$F5
0E7A D7 90 	MOV	[$90]+Y,A
0E7C D8 F4 	MOV	$F4,X
0E7E FC 	INC	Y
0E7F E4 F6 	MOV	A,$F6
0E81 D7 90 	MOV	[$90]+Y,A
0E83 FC 	INC	Y
0E84 E4 F7 	MOV	A,$F7
0E86 D7 90 	MOV	[$90]+Y,A
0E88 60 	CLRC
0E89 98 03 90 	ADC	$90,#$03
0E8C 98 00 91 	ADC	$91,#$00
0E8F 78 F5 91 	CMP	$91,#$F5
0E92 F0 7F 	BEQ	$0E13
0E94 3E F4 	CMP	X,$F4
0E96 F0 FC 	BEQ	$0E94
0E98 F8 F4 	MOV	X,$F4
0E9A 3E F4 	CMP	X,$F4
0E9C D0 FA 	BNE	$0E98
0E9E E8 FF 	MOV	A,#$FF
0EA0 8D F0 	MOV	Y,#$F0
0EA2 7E F4 	CMP	Y,$F4
0EA4 F0 09 	BEQ	$0EAF
0EA6 5A F4 	CMPW	YA,$F4
0EA8 D0 CC 	BNE	$0E76
0EAA CB 8C 	MOV	$8C,Y
0EAC 5F A3 0F 	JMP	$0FA3
0EAF 5F 40 0E 	JMP	$0E40
; FE-02
0EB2 8D 00 	MOV	Y,#$00
0EB4 E4 F6 	MOV	A,$F6
0EB6 D7 90 	MOV	[$90]+Y,A
0EB8 D8 F4 	MOV	$F4,X
0EBA FC 	INC	Y
0EBB E4 F7 	MOV	A,$F7
0EBD D7 90 	MOV	[$90]+Y,A
0EBF 3A 90 	INCW	$90
0EC1 3A 90 	INCW	$90
0EC3 78 F5 91 	CMP	$91,#$F5
0EC6 F0 4B 	BEQ	$0F13
0EC8 3E F4 	CMP	X,$F4
0ECA F0 FC 	BEQ	$0EC8
0ECC F8 F4 	MOV	X,$F4
0ECE 3E F4 	CMP	X,$F4
0ED0 D0 FA 	BNE	$0ECC
0ED2 E8 FF 	MOV	A,#$FF
0ED4 8D F0 	MOV	Y,#$F0
0ED6 7E F4 	CMP	Y,$F4
0ED8 F0 09 	BEQ	$0EE3
0EDA 5A F4 	CMPW	YA,$F4
0EDC D0 D4 	BNE	$0EB2
0EDE CB 8C 	MOV	$8C,Y
0EE0 5F A3 0F 	JMP	$0FA3
0EE3 5F 40 0E 	JMP	$0E40
; FE-01
0EE6 8D 00 	MOV	Y,#$00
0EE8 D8 F4 	MOV	$F4,X
0EEA E4 F7 	MOV	A,$F7
0EEC D7 90 	MOV	[$90]+Y,A
0EEE 3A 90 	INCW	$90
0EF0 78 F5 91 	CMP	$91,#$F5
0EF3 F0 1E 	BEQ	$0F13
0EF5 3E F4 	CMP	X,$F4
0EF7 F0 FC 	BEQ	$0EF5
0EF9 F8 F4 	MOV	X,$F4
0EFB 3E F4 	CMP	X,$F4
0EFD D0 FA 	BNE	$0EF9
0EFF E8 FF 	MOV	A,#$FF
0F01 8D F0 	MOV	Y,#$F0
0F03 7E F4 	CMP	Y,$F4
0F05 F0 09 	BEQ	$0F10
0F07 5A F4 	CMPW	YA,$F4
0F09 D0 DB 	BNE	$0EE6
0F0B CB 8C 	MOV	$8C,Y
0F0D 5F A3 0F 	JMP	$0FA3
0F10 5F 40 0E 	JMP	$0E40
; FE-00/04/05/06
0F13 3E F4 	CMP	X,$F4
0F15 F0 FC 	BEQ	$0F13
0F17 F8 F4 	MOV	X,$F4
0F19 3E F4 	CMP	X,$F4
0F1B D0 FA 	BNE	$0F17
0F1D E8 FF 	MOV	A,#$FF
0F1F 8D F0 	MOV	Y,#$F0
0F21 7E F4 	CMP	Y,$F4
0F23 F0 09 	BEQ	$0F2E
0F25 5A F4 	CMPW	YA,$F4
0F27 D0 EA 	BNE	$0F13
0F29 CB 8C 	MOV	$8C,Y
0F2B 5F A3 0F 	JMP	$0FA3
0F2E 5F 40 0E 	JMP	$0E40
; FE-07
0F31 BA F6 	MOVW	YA,$F6
0F33 DA 92 	MOVW	$92,YA
0F35 D8 F4 	MOV	$F4,X
0F37 3F 64 0F 	CALL	$0F64
0F3A BA F6 	MOVW	YA,$F6
0F3C DA 98 	MOVW	$98,YA
0F3E D8 F4 	MOV	$F4,X
0F40 8D 00 	MOV	Y,#$00
0F42 F7 90 	MOV	A,[$90]+Y
0F44 D7 92 	MOV	[$92]+Y,A
0F46 FC 	INC	Y
0F47 D0 04 	BNE	$0F4D
0F49 AB 91 	INC	$91
0F4B AB 93 	INC	$93
0F4D 1A 98 	DECW	$98
0F4F D0 F1 	BNE	$0F42
0F51 3F 64 0F 	CALL	$0F64
0F54 B0 0B 	BCS	$0F61
0F56 BA F6 	MOVW	YA,$F6
0F58 DA 90 	MOVW	$90,YA
0F5A D8 F4 	MOV	$F4,X
0F5C 3F 64 0F 	CALL	$0F64
0F5F 2F D0 	BRA	$0F31
0F61 5F 40 0E 	JMP	$0E40
0F64 E8 FF 	MOV	A,#$FF
0F66 8D F0 	MOV	Y,#$F0
0F68 3E F4 	CMP	X,$F4
0F6A F0 FC 	BEQ	$0F68
0F6C F8 F4 	MOV	X,$F4
0F6E 3E F4 	CMP	X,$F4
0F70 D0 FA 	BNE	$0F6C
0F72 7E F4 	CMP	Y,$F4
0F74 F0 09 	BEQ	$0F7F
0F76 5A F4 	CMPW	YA,$F4
0F78 D0 07 	BNE	$0F81
0F7A CB 8C 	MOV	$8C,Y
0F7C 5F A3 0F 	JMP	$0FA3
0F7F 80 	SETC
0F80 8D 60 	MOV	Y,#$60
0F82 6F 	RET
; process CPU cmd $F6
0F83 E4 8C 	MOV	A,$8C
0F85 60 	CLRC
0F86 88 FF 	ADC	A,#$FF
0F88 CA 86 A0 	MOV1	$0086.5,C
0F8B B0 04 	BCS	$0F91
0F8D E8 27 	MOV	A,#$27
0F8F 2F 02 	BRA	$0F93
0F91 E8 01 	MOV	A,#$01
0F93 8F 06 F1 	MOV	$F1,#$06
0F96 C4 FA 	MOV	$FA,A
0F98 8F 07 F1 	MOV	$F1,#$07
0F9B 6F 	RET
; process CPU cmd $89
0F9C FA 52 DD 	MOV	$DD<d>,$52<s>
0F9F FA 52 F6 	MOV	$F6<d>,$52<s>
0FA2 6F 	RET
; process CPU cmd $FF - reset
0FA3 E4 8C 	MOV	A,$8C
0FA5 68 01 	CMP	A,#$01
0FA7 D0 0A 	BNE	$0FB3
0FA9 E4 8D 	MOV	A,$8D
0FAB 60 	CLRC
0FAC 88 FF 	ADC	A,#$FF
0FAE CA 86 E0 	MOV1	$0086.7,C
0FB1 2F 1F 	BRA	$0FD2
0FB3 68 02 	CMP	A,#$02
0FB5 D0 0A 	BNE	$0FC1
0FB7 E4 8D 	MOV	A,$8D
0FB9 60 	CLRC
0FBA 88 FF 	ADC	A,#$FF
0FBC CA 86 C0 	MOV1	$C086,C
0FBF 2F 11 	BRA	$0FD2
0FC1 68 F0 	CMP	A,#$F0
0FC3 D0 0D 	BNE	$0FD2
0FC5 E8 E0 	MOV	A,#$E0
0FC7 8D 6C 	MOV	Y,#$6C
0FC9 3F 48 06 	CALL	$0648           ; do soft reset
0FCC 8F 80 F1 	MOV	$F1,#$80
0FCF 5F C0 FF 	JMP	$FFC0           ; jump back to master "OS" recv
0FD2 6F 	RET
0FD3 6F 	RET
; (Y=balance, A=F881+X or $B2 ^ #$80)
0FD4 C4 C0 	MOV	$C0,A
0FD6 DD 	MOV	A,Y
0FD7 60 	CLRC
0FD8 84 C0 	ADC	A,$C0
0FDA E3 C0 06 	BBS	$C0,#07,$0FE3   ; branch FE3 if C0 negative
0FDD 90 08 	BCC	$0FE7
0FDF E8 FF 	MOV	A,#$FF
0FE1 2F 04 	BRA	$0FE7
0FE3 B0 02 	BCS	$0FE7
0FE5 E8 00 	MOV	A,#$00
0FE7 6F 	RET
; process CPU cmd $FD
; write $8D ($F6) to DSP register $8C ($F5)
0FE8 EB 8C 	MOV	Y,$8C
0FEA E4 8D 	MOV	A,$8D
0FEC 5F 48 06 	JMP	$0648
; delay for (X) timer1 periods
0FEF 8F 05 F1 	MOV	$F1,#$05 ; stop timer1
0FF2 E4 FE 	MOV	A,$FE    ; clear counter1
0FF4 8F 07 F1 	MOV	$F1,#$07 ; start timer1
0FF7 E8 00 	MOV	A,#$00
0FF9 EB FE 	MOV	Y,$FE
0FFB F0 FC 	BEQ	$0FF9    ; wait for timer1 to increment
0FFD BC 	INC	A
0FFE 66 	CMP	A,(X)
0FFF D0 F8 	BNE	$0FF9    ; loop (X) times
1001 6F 	RET
; process CPU cmd $FC
; set echo delay/start from $8C low nybble, enable echo, $52->$4D if nonzero
1002 38 0F 8C 	AND	$8C,#$0F
1005 FA 8C 80 	MOV	$80<d>,$8C<s>
1008 3F 15 10 	CALL	$1015          ; set echo delay time/start from $8C
100B 3F 41 10 	CALL	$1041          ; enable echo
100E E4 52 	MOV	A,$52
1010 D0 02 	BNE	$1014
1012 C4 4D 	MOV	$4D,A          ; move $52 to $4D if nonzero
1014 6F 	RET
; set echo delay time/start addr from $80, delay till old echo done
1015 8F 6C F2 	MOV	$F2,#$6C
1018 E4 F3 	MOV	A,$F3
101A 08 20 	OR	A,#$20
101C C4 F3 	MOV	$F3,A     ; DSP FLG bit ECEN on (disable echo?)
101E 8D 7D 	MOV	Y,#$7D
1020 CB F2 	MOV	$F2,Y
1022 E4 F3 	MOV	A,$F3
1024 28 0F 	AND	A,#$0F
1026 C4 81 	MOV	$81,A     ; move DSP echo delay to $81
1028 E4 80 	MOV	A,$80
102A 3F 48 06 	CALL	$0648     ; set DSP echo delay from $80
102D 1C 	ASL	A
102E 1C 	ASL	A
102F 1C 	ASL	A
1030 48 FF 	EOR	A,#$FF
1032 BC 	INC	A
1033 60 	CLRC
1034 88 F5 	ADC	A,#$F5  
1036 8D 6D 	MOV	Y,#$6D
1038 3F 48 06 	CALL	$0648     ; set echo start addr to #$F5 - ($80 * 8)
103B CD 81 	MOV	X,#$81
103D 3F EF 0F 	CALL	$0FEF     ; delay ($81) timer1 periods
1040 6F 	RET
; enable echo after delaying $80 echo periods if nonzero
1041 E4 80 	MOV	A,$80
1043 F0 05 	BEQ	$104A
1045 CD 80 	MOV	X,#$80
1047 3F EF 0F 	CALL	$0FEF     ; delay $80 timer1 periods
104A 8F 6C F2 	MOV	$F2,#$6C
104D E4 F3 	MOV	A,$F3
104F 28 DF 	AND	A,#$DF
1051 C4 F3 	MOV	$F3,A     ; enable echo
1053 6F 	RET
; save some state?
1054 78 2F C7 	CMP	$C7,#$2F
1057 F0 3B 	BEQ	$1094           ; don't do it for song $2F
1059 FA C7 C6 	MOV	$C6<d>,$C7<s>   ; save song #
105C E8 00 	MOV	A,#$00
105E C4 90 	MOV	$90,A
1060 E8 F6 	MOV	A,#$F6
1062 C4 91 	MOV	$91,A
1064 E8 00 	MOV	A,#$00    ; set $90 to #$F600
1066 C4 92 	MOV	$92,A
1068 E8 FA 	MOV	A,#$FA
106A C4 93 	MOV	$93,A     ; set $92 to #$FA00
106C 8D 00 	MOV	Y,#$00
106E F7 90 	MOV	A,[$90]+Y
1070 D7 92 	MOV	[$92]+Y,A
1072 FC 	INC	Y
1073 D0 F9 	BNE	$106E
1075 AB 91 	INC	$91
1077 AB 93 	INC	$93
1079 78 FA 91 	CMP	$91,#$FA
107C D0 F0 	BNE	$106E     ; move $F600-F9FF to $FA00-FDFF
107E 1A 92 	DECW	$92
1080 8D 80 	MOV	Y,#$80
1082 F6 FF FF 	MOV	A,$FFFF+Y
1085 D7 92 	MOV	[$92]+Y,A
1087 FE F9 	DBNZ	Y,$1082
1089 AB 93 	INC	$93
108B 8D A0 	MOV	Y,#$A0
108D F6 FF 00 	MOV	A,$00FF+Y
1090 D7 92 	MOV	[$92]+Y,A
1092 FE F9 	DBNZ	Y,$108D
1094 6F 	RET
; restore some state?
1095 8F FF C6 	MOV	$C6,#$FF
1098 E8 00 	MOV	A,#$00
109A C4 90 	MOV	$90,A
109C E8 F6 	MOV	A,#$F6
109E C4 91 	MOV	$91,A
10A0 E8 00 	MOV	A,#$00
10A2 C4 92 	MOV	$92,A
10A4 E8 FA 	MOV	A,#$FA
10A6 C4 93 	MOV	$93,A
10A8 8D 00 	MOV	Y,#$00
10AA F7 92 	MOV	A,[$92]+Y
10AC D7 90 	MOV	[$90]+Y,A
10AE FC 	INC	Y
10AF D0 F9 	BNE	$10AA
10B1 AB 91 	INC	$91
10B3 AB 93 	INC	$93
10B5 78 FA 91 	CMP	$91,#$FA
10B8 D0 F0 	BNE	$10AA
10BA 1A 92 	DECW	$92
10BC 8D 80 	MOV	Y,#$80
10BE F7 92 	MOV	A,[$92]+Y
10C0 D6 FF FF 	MOV	$FFFF+Y,A
10C3 FE F9 	DBNZ	Y,$10BE
10C5 AB 93 	INC	$93
10C7 8D A0 	MOV	Y,#$A0
10C9 F7 92 	MOV	A,[$92]+Y
10CB D6 FF 00 	MOV	$00FF+Y,A
10CE FE F9 	DBNZ	Y,$10C9
10D0 8F 81 8B 	MOV	$8B,#$81
10D3 8F 10 8C 	MOV	$8C,#$10
10D6 8F FF 8D 	MOV	$8D,#$FF
10D9 8F 20 A6 	MOV	$A6,#$20
10DC 5F 6A 0C 	JMP	$0C6A           ; simulate $81 cmd
; read wave heights, put in APU regs
10DF E8 98 	MOV	A,#$98
10E1 C4 9D 	MOV	$9D,A
10E3 E8 C9 	MOV	A,#$C9
10E5 8F 00 A1 	MOV	$A1,#$00
10E8 83 86 05 	BBS	$86,#04,$10F0
10EB 8F 09 8F 	MOV	$8F,#$09
10EE 2F 08 	BRA	$10F8
10F0 8F 49 8F 	MOV	$8F,#$49
10F3 60 	CLRC
10F4 88 08 	ADC	A,#$08
10F6 E2 A1 	SET1	$A1,#07
10F8 C4 9E 	MOV	$9E,A
10FA 60 	CLRC
10FB 88 08 	ADC	A,#$08
10FD C4 A0 	MOV	$A0,A
10FF F8 9E 	MOV	X,$9E
1101 EB 8F 	MOV	Y,$8F
1103 CB F2 	MOV	$F2,Y
1105 EB F3 	MOV	Y,$F3           ; read wave height for voice 8F
1107 6D 	PUSH	Y
1108 BF 	MOV	A,(X)+
1109 1C 	ASL	A
110A CF 	MUL	YA
110B DD 	MOV	A,Y
110C 28 70 	AND	A,#$70
110E C4 9C 	MOV	$9C,A
1110 EE 	POP	Y
1111 BF 	MOV	A,(X)+
1112 1C 	ASL	A
1113 CF 	MUL	YA
1114 DD 	MOV	A,Y
1115 D8 9E 	MOV	$9E,X
1117 F8 9D 	MOV	X,$9D
1119 9F 	XCN	A
111A 28 07 	AND	A,#$07
111C 04 9C 	OR	A,$9C
111E 04 A1 	OR	A,$A1
1120 AF 	MOV	(X)+,A
1121 D8 9D 	MOV	$9D,X
1123 60 	CLRC
1124 98 10 8F 	ADC	$8F,#$10
1127 69 A0 9E 	CMP	$9E<d>,$A0<s>
112A D0 D3 	BNE	$10FF
112C BA 98 	MOVW	YA,$98
112E DA F4 	MOVW	$F4,YA
1130 BA 9A 	MOVW	YA,$9A
1132 DA F6 	MOVW	$F6,YA
1134 EA 86 80 	NOT1	$8086
1137 6F 	RET
;
1138 E4 AD 	MOV	A,$AD
113A F0 0F 	BEQ	$114B
113C 8B AD 	DEC	$AD
113E BA A9 	MOVW	YA,$A9
1140 7A A5 	ADDW	YA,$A5
1142 7E A6 	CMP	Y,$A6
1144 DA A5 	MOVW	$A5,YA
1146 F0 03 	BEQ	$114B
1148 09 52 DB 	OR	$DB<d>,$52<s>
114B E4 AF 	MOV	A,$AF
114D F0 1D 	BEQ	$116C
114F BA AB 	MOVW	YA,$AB
1151 7A A7 	ADDW	YA,$A7
1153 7E A8 	CMP	Y,$A8
1155 DA A7 	MOVW	$A7,YA
1157 F0 03 	BEQ	$115C
1159 09 83 DB 	OR	$DB<d>,$83<s>
115C 8B AF 	DEC	$AF
115E D0 0C 	BNE	$116C
1160 DD 	MOV	A,Y
1161 D0 09 	BNE	$116C
1163 8F FF A8 	MOV	$A8,#$FF
1166 8F F2 8B 	MOV	$8B,#$F2
1169 3F 6F 0D 	CALL	$0D6F
116C E4 B5 	MOV	A,$B5
116E F0 0F 	BEQ	$117F
1170 8B B5 	DEC	$B5
1172 BA B3 	MOVW	YA,$B3
1174 7A B1 	ADDW	YA,$B1
1176 7E B2 	CMP	Y,$B2
1178 DA B1 	MOVW	$B1,YA
117A F0 03 	BEQ	$117F
117C 09 83 DB 	OR	$DB<d>,$83<s>
117F E4 BA 	MOV	A,$BA
1181 F0 08 	BEQ	$118B
1183 8B BA 	DEC	$BA
1185 BA B8 	MOVW	YA,$B8
1187 7A B6 	ADDW	YA,$B6
1189 DA B6 	MOVW	$B6,YA
118B E4 BF 	MOV	A,$BF
118D F0 0F 	BEQ	$119E
118F 8B BF 	DEC	$BF
1191 BA BD 	MOVW	YA,$BD
1193 7A BB 	ADDW	YA,$BB
1195 7E BC 	CMP	Y,$BC
1197 DA BB 	MOVW	$BB,YA
1199 F0 03 	BEQ	$119E
119B 09 52 DC 	OR	$DC<d>,$52<s>
119E 6F 	RET
; table used by command FE
119F 13 0F   ; 00  0F13
11A1 E6 0E   ; 01  0EE6
11A3 B2 0E   ; 02  0EB2
11A5 76 0E   ; 03  0E76
11A7 13 0F   ; 04  0F13
11A9 13 0F   ; 05  0F13
11AB 13 0F   ; 06  0F13
11AD 31 0F   ; 07  0F31
; vcmd F0 - set tempo
11AF C4 46 	MOV	$46,A
11B1 E8 00 	MOV	A,#$00
11B3 C4 45 	MOV	$45,A
11B5 C4 49 	MOV	$49,A
11B7 6F 	RET
; vcmd F1 - tempo "fade"
11B8 C4 49 	MOV	$49,A
11BA C4 8C 	MOV	$8C,A
11BC 3F C9 05 	CALL	$05C9
11BF EB 8C 	MOV	Y,$8C
11C1 F0 EC 	BEQ	$11AF
11C3 80 	SETC
11C4 A4 46 	SBC	A,$46
11C6 F0 ED 	BEQ	$11B5
11C8 3F C5 0C 	CALL	$0CC5
11CB F8 A3 	MOV	X,$A3
11CD DA 4A 	MOVW	$4A,YA
11CF 6F 	RET
; vcmd F4
11D0 C4 51 	MOV	$51,A
11D2 6F 	RET
; vcmd C4 - set voice volume
11D3 28 7F 	AND	A,#$7F
11D5 D5 21 F6 	MOV	$F621+X,A
11D8 E8 00 	MOV	A,#$00
11DA D5 20 F6 	MOV	$F620+X,A
11DD 09 8F DB 	OR	$DB<d>,$8F<s>
11E0 D5 A0 F6 	MOV	$F6A0+X,A
11E3 6F 	RET
; vcmd C5 - volume fade (steps, dest value)
11E4 D5 A0 F6 	MOV	$F6A0+X,A
11E7 C4 8C 	MOV	$8C,A
11E9 3F C9 05 	CALL	$05C9
11EC 28 7F 	AND	A,#$7F
11EE EB 8C 	MOV	Y,$8C
11F0 F0 E1 	BEQ	$11D3
11F2 80 	SETC
11F3 B5 21 F6 	SBC	A,$F621+X
11F6 F0 E8 	BEQ	$11E0
11F8 3F C5 0C 	CALL	$0CC5
11FB F8 A3 	MOV	X,$A3
11FD D5 40 F6 	MOV	$F640+X,A
1200 DD 	MOV	A,Y
1201 D5 41 F6 	MOV	$F641+X,A
1204 6F 	RET
; vcmd F2 - set echo volume
1205 AA A2 E0 	MOV1	C,$00A2.7
1208 7C 	ROR	A               ; keep sign, div by 2
1209 C4 4D 	MOV	$4D,A           ; echo volume shadow
120B E8 00 	MOV	A,#$00
120D C4 4C 	MOV	$4C,A
120F C4 50 	MOV	$50,A
1211 6F 	RET
; vcmd F3 - fade echo volume
1212 C4 50 	MOV	$50,A
1214 C4 8C 	MOV	$8C,A
1216 3F C9 05 	CALL	$05C9
1219 EB 8C 	MOV	Y,$8C
121B F0 E8 	BEQ	$1205
121D AA A2 E0 	MOV1	C,$E0A2
1220 7C 	ROR	A
1221 48 80 	EOR	A,#$80
1223 EA 4D E0 	NOT1	$E04D
1226 80 	SETC
1227 A4 4D 	SBC	A,$4D
1229 EA 4D E0 	NOT1	$E04D
122C F0 E1 	BEQ	$120F
122E 3F C5 0C 	CALL	$0CC5
1231 F8 A3 	MOV	X,$A3
1233 DA 4E 	MOVW	$4E,YA
1235 6F 	RET
; vcmd C6 - set balance
1236 1C 	ASL	A
1237 D5 61 F6 	MOV	$F661+X,A
123A E8 00 	MOV	A,#$00
123C D5 60 F6 	MOV	$F660+X,A
123F 09 8F DB 	OR	$DB<d>,$8F<s>
1242 D5 A1 F6 	MOV	$F6A1+X,A
1245 6F 	RET
; vcmd C7 - balance fade (pan)
1246 D5 A1 F6 	MOV	$F6A1+X,A
1249 C4 8C 	MOV	$8C,A
124B 3F C9 05 	CALL	$05C9
124E EB 8C 	MOV	Y,$8C
1250 F0 E4 	BEQ	$1236
1252 1C 	ASL	A
1253 80 	SETC
1254 B5 61 F6 	SBC	A,$F661+X
1257 F0 E9 	BEQ	$1242
1259 3F C5 0C 	CALL	$0CC5
125C F8 A3 	MOV	X,$A3
125E D5 80 F6 	MOV	$F680+X,A
1261 DD 	MOV	A,Y
1262 D5 81 F6 	MOV	$F681+X,A
1265 6F 	RET
; vcmd C8
1266 BC 	INC	A
1267 D5 20 F7 	MOV	$F720+X,A
126A 3F C9 05 	CALL	$05C9
126D D5 50 01 	MOV	$0150+X,A
1270 6F 	RET
; vcmd DA - change (relative) transpose?
1271 60 	CLRC
1272 95 21 F7 	ADC	A,$F721+X
; vcmd D9 - set transpose?
1275 D5 21 F7 	MOV	$F721+X,A
1278 6F 	RET
; vcmd F7 - Set/Fade echo feedback
1279 C4 78 	MOV	$78,A
127B C4 8C 	MOV	$8C,A
127D 3F C9 05 	CALL	$05C9
1280 EB 8C 	MOV	Y,$8C
1282 F0 14 	BEQ	$1298
1284 48 80 	EOR	A,#$80
1286 EA 76 E0 	NOT1	$0076.7
1289 80 	SETC
128A A4 76 	SBC	A,$76   ; echo feedback shadow
128C EA 76 E0 	NOT1	$0076.7
128F 3F C5 0C 	CALL	$0CC5
1292 F8 A3 	MOV	X,$A3
1294 DA 79 	MOVW	$79,YA
1296 2F 02 	BRA	$129A
1298 C4 76 	MOV	$76,A
129A 6F 	RET
; vcmd F8
129B C4 77 	MOV	$77,A
129D C4 8C 	MOV	$8C,A
129F 3F C9 05 	CALL	$05C9
12A2 28 03 	AND	A,#$03
12A4 BC 	INC	A
12A5 1C 	ASL	A
12A6 1C 	ASL	A
12A7 1C 	ASL	A
12A8 FD 	MOV	Y,A
12A9 CD 10 	MOV	X,#$10
12AB E4 8C 	MOV	A,$8C
12AD F0 27 	BEQ	$12D6
12AF E8 00 	MOV	A,#$00
12B1 D4 63 	MOV	$63+X,A
12B3 F4 64 	MOV	A,$64+X
12B5 48 80 	EOR	A,#$80
12B7 C4 98 	MOV	$98,A
12B9 F6 A8 17 	MOV	A,$17A8+Y
12BC 48 80 	EOR	A,#$80
12BE 80 	SETC
12BF A4 98 	SBC	A,$98
12C1 6D 	PUSH	Y
12C2 4D 	PUSH	X
12C3 3F C5 0C 	CALL	$0CC5
12C6 CE 	POP	X
12C7 D5 FE 00 	MOV	$00FE+X,A
12CA DD 	MOV	A,Y
12CB D5 FF 00 	MOV	$00FF+X,A
12CE EE 	POP	Y
12CF DC 	DEC	Y
12D0 1D 	DEC	X
12D1 1D 	DEC	X
12D2 D0 DB 	BNE	$12AF
12D4 2F 0A 	BRA	$12E0
12D6 F6 A8 17 	MOV	A,$17A8+Y
12D9 D4 64 	MOV	$64+X,A
12DB DC 	DEC	Y
12DC 1D 	DEC	X
12DD 1D 	DEC	X
12DE D0 F6 	BNE	$12D6
12E0 F8 A3 	MOV	X,$A3
12E2 6F 	RET
; vcmd C9
12E3 D5 10 01 	MOV	$0110+X,A
12E6 3F C9 05 	CALL	$05C9
12E9 D5 C0 F6 	MOV	$F6C0+X,A
12EC C4 98 	MOV	$98,A
12EE 3F C9 05 	CALL	$05C9
12F1 D5 51 01 	MOV	$0151+X,A
12F4 3F 3C 13 	CALL	$133C
12F7 F8 A3 	MOV	X,$A3
12F9 BA 98 	MOVW	YA,$98
12FB D5 C0 F7 	MOV	$F7C0+X,A
12FE DD 	MOV	A,Y
12FF D5 C1 F7 	MOV	$F7C1+X,A
1302 E8 00 	MOV	A,#$00
1304 D5 C0 F8 	MOV	$F8C0+X,A
1307 D5 C1 F8 	MOV	$F8C1+X,A
130A D5 40 F8 	MOV	$F840+X,A
130D D5 41 F8 	MOV	$F841+X,A
1310 F5 C0 F6 	MOV	A,$F6C0+X
1313 D5 C1 F6 	MOV	$F6C1+X,A
1316 F5 C1 F7 	MOV	A,$F7C1+X
1319 FD 	MOV	Y,A
131A F5 C0 F7 	MOV	A,$F7C0+X
131D DA 98 	MOVW	$98,YA
131F F5 90 01 	MOV	A,$0190+X
1322 28 70 	AND	A,#$70
1324 FD 	MOV	Y,A
1325 F5 10 01 	MOV	A,$0110+X
1328 D5 11 01 	MOV	$0111+X,A
132B 3F 66 13 	CALL	$1366
132E D5 90 01 	MOV	$0190+X,A
1331 E4 98 	MOV	A,$98
1333 D5 E0 F7 	MOV	$F7E0+X,A
1336 E4 99 	MOV	A,$99
1338 D5 E1 F7 	MOV	$F7E1+X,A
133B 6F 	RET
133C 28 3F 	AND	A,#$3F
133E BC 	INC	A
133F 8D 00 	MOV	Y,#$00
1341 CB 99 	MOV	$99,Y
1343 F8 98 	MOV	X,$98
1345 F0 06 	BEQ	$134D
1347 9E 	DIV	YA,X
1348 C4 99 	MOV	$99,A
134A E8 00 	MOV	A,#$00
134C 9E 	DIV	YA,X
134D C4 98 	MOV	$98,A
134F 4B 99 	LSR	$99
1351 6B 98 	ROR	$98
1353 4B 99 	LSR	$99
1355 6B 98 	ROR	$98
1357 BA 98 	MOVW	YA,$98
1359 D0 02 	BNE	$135D
135B AB 98 	INC	$98
135D 0B 98 	ASL	$98
135F 2B 99 	ROL	$99
1361 0B 98 	ASL	$98
1363 2B 99 	ROL	$99
1365 6F 	RET
1366 0D 	PUSH	PSW
1367 F0 08 	BEQ	$1371
1369 4B 99 	LSR	$99
136B 6B 98 	ROR	$98
136D 4B 99 	LSR	$99
136F 6B 98 	ROR	$98
1371 78 80 A2 	CMP	$A2,#$80
1374 90 0D 	BCC	$1383
1376 78 C0 A2 	CMP	$A2,#$C0
1379 B0 08 	BCS	$1383
137B 58 FF 98 	EOR	$98,#$FF
137E 58 FF 99 	EOR	$99,#$FF
1381 3A 98 	INCW	$98
1383 8E 	POP	PSW
1384 F0 04 	BEQ	$138A
1386 DD 	MOV	A,Y
1387 08 07 	OR	A,#$07
1389 8D DD 	MOV	Y,#$DD
138B 6F 	RET
; vcmd CA
138C D5 51 01 	MOV	$0151+X,A
138F D5 C0 F8 	MOV	$F8C0+X,A
1392 D5 C1 F8 	MOV	$F8C1+X,A
1395 6F 	RET
; vcmd CB
1396 D5 30 01 	MOV	$0130+X,A
1399 3F C9 05 	CALL	$05C9
139C D5 E0 F6 	MOV	$F6E0+X,A
139F C4 98 	MOV	$98,A
13A1 3F C9 05 	CALL	$05C9
13A4 D5 70 01 	MOV	$0170+X,A
13A7 3F 3C 13 	CALL	$133C
13AA F8 A3 	MOV	X,$A3
13AC E4 98 	MOV	A,$98
13AE D5 00 F8 	MOV	$F800+X,A
13B1 E4 99 	MOV	A,$99
13B3 D5 01 F8 	MOV	$F801+X,A
13B6 E8 00 	MOV	A,#$00
13B8 D5 60 F8 	MOV	$F860+X,A
13BB D5 61 F8 	MOV	$F861+X,A
13BE F5 E0 F6 	MOV	A,$F6E0+X
13C1 D5 E1 F6 	MOV	$F6E1+X,A
13C4 F5 01 F8 	MOV	A,$F801+X
13C7 FD 	MOV	Y,A
13C8 F5 00 F8 	MOV	A,$F800+X
13CB DA 98 	MOVW	$98,YA
13CD F5 90 01 	MOV	A,$0190+X
13D0 28 70 	AND	A,#$70
13D2 FD 	MOV	Y,A
13D3 F5 30 01 	MOV	A,$0130+X
13D6 D5 31 01 	MOV	$0131+X,A
13D9 3F 66 13 	CALL	$1366
13DC D5 90 01 	MOV	$0190+X,A
13DF E4 98 	MOV	A,$98
13E1 D5 20 F8 	MOV	$F820+X,A
13E4 E4 99 	MOV	A,$99
13E6 D5 21 F8 	MOV	$F821+X,A
13E9 6F 	RET
; vcmd CC
13EA D5 70 01 	MOV	$0170+X,A
13ED D5 60 F8 	MOV	$F860+X,A
13F0 D5 61 F8 	MOV	$F861+X,A
13F3 6F 	RET
; vcmd CD
13F4 60 	CLRC
13F5 BC 	INC	A
13F6 F0 08 	BEQ	$1400
13F8 28 FE 	AND	A,#$FE
13FA D0 05 	BNE	$1401
13FC E8 02 	MOV	A,#$02
13FE 2F 01 	BRA	$1401
1400 80 	SETC
1401 D5 00 F7 	MOV	$F700+X,A
1404 7C 	ROR	A
1405 D5 01 F7 	MOV	$F701+X,A
1408 FD 	MOV	Y,A
1409 3F C9 05 	CALL	$05C9
140C 1C 	ASL	A
140D E4 A2 	MOV	A,$A2
140F 28 7F 	AND	A,#$7F
1411 90 02 	BCC	$1415
1413 48 7F 	EOR	A,#$7F
1415 C4 98 	MOV	$98,A
1417 DD 	MOV	A,Y
1418 10 05 	BPL	$141F
141A 8F 00 99 	MOV	$99,#$00
141D 2F 13 	BRA	$1432
141F 5D 	MOV	X,A
1420 8D 00 	MOV	Y,#$00
1422 E4 98 	MOV	A,$98
1424 9E 	DIV	YA,X
1425 C4 99 	MOV	$99,A
1427 E8 00 	MOV	A,#$00
1429 9E 	DIV	YA,X
142A C4 98 	MOV	$98,A
142C BA 98 	MOVW	YA,$98
142E D0 02 	BNE	$1432
1430 AB 98 	INC	$98
1432 90 08 	BCC	$143C
1434 58 FF 98 	EOR	$98,#$FF
1437 58 FF 99 	EOR	$99,#$FF
143A 3A 98 	INCW	$98
143C F8 A3 	MOV	X,$A3
143E E4 98 	MOV	A,$98
1440 D5 A0 F7 	MOV	$F7A0+X,A
1443 E4 99 	MOV	A,$99
1445 D5 A1 F7 	MOV	$F7A1+X,A
1448 E4 A2 	MOV	A,$A2
; vcmd CE
144A D5 71 01 	MOV	$0171+X,A
144D E8 00 	MOV	A,#$00
144F D5 80 F8 	MOV	$F880+X,A
1452 D5 81 F8 	MOV	$F881+X,A
1455 6F 	RET
; vcmd D7 - inc octave
1456 F5 00 F6 	MOV	A,$F600+X
1459 BC 	INC	A
145A 2F 04 	BRA	$1460
; vcmd D8 - dec octave
145C F5 00 F6 	MOV	A,$F600+X
145F 9C 	DEC	A
; vcmd D6 - set octave
1460 D5 00 F6 	MOV	$F600+X,A
1463 6F 	RET
; vcmd D4 - enable echo
1464 C8 10 	CMP	X,#$10
1466 B0 05 	BCS	$146D
1468 09 8F 53 	OR	$53<d>,$8F<s>
146B 2F 03 	BRA	$1470
146D 09 8F 54 	OR	$54<d>,$8F<s>
1470 E4 83 	MOV	A,$83
1472 04 84 	OR	A,$84
1474 48 FF 	EOR	A,#$FF
1476 24 53 	AND	A,$53
1478 04 54 	OR	A,$54
147A C4 87 	MOV	$87,A   ; dsp shadow for echo enable
147C 6F 	RET
; vcmd D5 - disable echo
147D E4 8F 	MOV	A,$8F
147F C8 10 	CMP	X,#$10
1481 B0 05 	BCS	$1488
1483 4E 53 00 	TCLR1	$0053
1486 2F E8 	BRA	$1470
1488 4E 54 00 	TCLR1	$0054
148B 2F E3 	BRA	$1470
; vcmd D0 - enable noise
148D C8 10 	CMP	X,#$10
148F B0 05 	BCS	$1496
1491 09 8F 55 	OR	$55<d>,$8F<s>
1494 2F 03 	BRA	$1499
1496 09 8F 56 	OR	$56<d>,$8F<s>
1499 FA 56 98 	MOV	$98<d>,$56<s>
149C 12 98 	CLR1	$98,#00
149E E4 8A 	MOV	A,$8A
14A0 28 E0 	AND	A,#$E0
14A2 EB 56 	MOV	Y,$56
14A4 D0 04 	BNE	$14AA
14A6 04 62 	OR	A,$62
14A8 2F 02 	BRA	$14AC
14AA 04 63 	OR	A,$63
14AC C4 8A 	MOV	$8A,A   ; dsp shadow for FLG (6C)
14AE E4 83 	MOV	A,$83
14B0 04 84 	OR	A,$84
14B2 48 FF 	EOR	A,#$FF
14B4 24 55 	AND	A,$55
14B6 04 98 	OR	A,$98
14B8 C4 88 	MOV	$88,A   ; dsp shadow for noise bits
14BA 6F 	RET
; vcmd D1 - disable noise
14BB E4 8F 	MOV	A,$8F
14BD C8 10 	CMP	X,#$10
14BF B0 05 	BCS	$14C6
14C1 4E 55 00 	TCLR1	$0055
14C4 2F D3 	BRA	$1499
14C6 4E 56 00 	TCLR1	$0056
14C9 2F CE 	BRA	$1499
; vcmd CF - set noise clock
14CB 28 1F 	AND	A,#$1F
14CD C8 10 	CMP	X,#$10
14CF B0 04 	BCS	$14D5
14D1 C4 62 	MOV	$62,A
14D3 2F C4 	BRA	$1499
14D5 C4 63 	MOV	$63,A
14D7 2F C0 	BRA	$1499
; vcmd D2 - enable pitchmod
14D9 C8 10 	CMP	X,#$10
14DB B0 05 	BCS	$14E2
14DD 09 8F 57 	OR	$57<d>,$8F<s>
14E0 2F 03 	BRA	$14E5
14E2 09 8F 58 	OR	$58<d>,$8F<s>
14E5 E4 83 	MOV	A,$83
14E7 04 84 	OR	A,$84
14E9 48 FF 	EOR	A,#$FF
14EB 24 57 	AND	A,$57
14ED 04 58 	OR	A,$58
14EF C4 89 	MOV	$89,A           ; dsp shadow for pitchmod
14F1 6F 	RET
; vcmd D3 - disable pitchmod
14F2 E4 8F 	MOV	A,$8F
14F4 C8 10 	CMP	X,#$10
14F6 B0 05 	BCS	$14FD
14F8 4E 57 00 	TCLR1	$0057
14FB 2F E8 	BRA	$14E5
14FD 4E 58 00 	TCLR1	$0058
1500 2F E3 	BRA	$14E5
; vcmd DC - set sample
1502 D5 01 F6 	MOV	$F601+X,A
1505 1C 	ASL	A
1506 FD 	MOV	Y,A             ; sample # as index in Y
1507 F6 00 1A 	MOV	A,$1A00+Y
150A D5 40 F7 	MOV	$F740+X,A
150D F6 01 1A 	MOV	A,$1A01+Y
1510 D5 41 F7 	MOV	$F741+X,A       ; set F740/1+X from 1A00/1+Y
1513 F6 80 1A 	MOV	A,$1A80+Y
1516 D5 00 F9 	MOV	$F900+X,A
1519 F6 81 1A 	MOV	A,$1A81+Y
151C D5 01 F9 	MOV	$F901+X,A       ; set F900/1+X from 1A80/1+Y
151F C8 10 	CMP	X,#$10
1521 B0 05 	BCS	$1528
1523 E4 8F 	MOV	A,$8F
1525 4E 61 00 	TCLR1	$0061           ; clear vbit in $61
1528 6F 	RET
; set SRCN reg from F601+X
1529 F5 01 F6 	MOV	A,$F601+X
152C FD 	MOV	Y,A
152D 7D 	MOV	A,X
152E 9F 	XCN	A
152F 5C 	LSR	A
1530 08 04 	OR	A,#$04
1532 C4 F2 	MOV	$F2,A
1534 CB F3 	MOV	$F3,Y           ; set SRCN reg from F601+X
1536 2F 10 	BRA	$1548
; vcmd DD  - set ADSR attack value
1538 28 0F 	AND	A,#$0F
153A C4 A2 	MOV	$A2,A
153C F5 00 F9 	MOV	A,$F900+X
153F 28 70 	AND	A,#$70          ; keep old decay value
1541 04 A2 	OR	A,$A2           ; set attack value
1543 08 80 	OR	A,#$80          ; ADSR mode, not GAIN mode
1545 D5 00 F9 	MOV	$F900+X,A
1548 C8 10 	CMP	X,#$10
154A B0 09 	BCS	$1555
154C E4 83 	MOV	A,$83
154E 04 84 	OR	A,$84
1550 24 8F 	AND	A,$8F
1552 F0 01 	BEQ	$1555
1554 6F 	RET
1555 7D 	MOV	A,X
1556 9F 	XCN	A
1557 5C 	LSR	A
1558 08 05 	OR	A,#$05
155A FD 	MOV	Y,A
155B F5 00 F9 	MOV	A,$F900+X
155E 3F 48 06 	CALL	$0648           ; set ADSR1 from F900+X
1561 FC 	INC	Y
1562 F5 01 F9 	MOV	A,$F901+X       ; set ADSR2 from F901+X
1565 5F 48 06 	JMP	$0648
; vcmd DE - set ADSR decay value
1568 28 07 	AND	A,#$07
156A 9F 	XCN	A
156B C4 A2 	MOV	$A2,A
156D F5 00 F9 	MOV	A,$F900+X
1570 28 0F 	AND	A,#$0F          ; keep old attack value
1572 04 A2 	OR	A,$A2           ; add new decay value
1574 08 80 	OR	A,#$80          ; ADSR mode, not GAIN mode
1576 D5 00 F9 	MOV	$F900+X,A
1579 2F CD 	BRA	$1548
; vcmd DF - set ADSR sustain level
157B 28 07 	AND	A,#$07
157D 9F 	XCN	A
157E 1C 	ASL	A
157F C4 A2 	MOV	$A2,A
1581 F5 01 F9 	MOV	A,$F901+X
1584 28 1F 	AND	A,#$1F          ; keep old release value
1586 04 A2 	OR	A,$A2           ; add new sustain value
1588 D5 01 F9 	MOV	$F901+X,A
158B 2F BB 	BRA	$1548
; vcmd E0 - set ADSR release level
158D 28 1F 	AND	A,#$1F
158F C4 A2 	MOV	$A2,A
1591 F5 01 F9 	MOV	A,$F901+X
1594 28 E0 	AND	A,#$E0          ; keep old sustain value
1596 04 A2 	OR	A,$A2           ; add new release value
1598 D5 01 F9 	MOV	$F901+X,A
159B 2F AB 	BRA	$1548
; vcmd E1 - set default ADSR paramaters for sample
159D F5 01 F6 	MOV	A,$F601+X
15A0 1C 	ASL	A
15A1 FD 	MOV	Y,A             ; sample # as index
15A2 F6 80 1A 	MOV	A,$1A80+Y
15A5 D5 00 F9 	MOV	$F900+X,A
15A8 F6 81 1A 	MOV	A,$1A81+Y
15AB D5 01 F9 	MOV	$F901+X,A
15AE 2F 98 	BRA	$1548
; vcmd FB
15B0 09 8F 61 	OR	$61<d>,$8F<s>
15B3 6F 	RET
; vcmd E4
15B4 E4 8F 	MOV	A,$8F
15B6 C8 10 	CMP	X,#$10
15B8 B0 0B 	BCS	$15C5
15BA 0E 5B 00 	TSET1	$005B
15BD 4E 5D 00 	TCLR1	$005D
15C0 4E 5F 00 	TCLR1	$005F
15C3 2F 09 	BRA	$15CE
15C5 0E 5C 00 	TSET1	$005C
15C8 4E 5E 00 	TCLR1	$005E
15CB 4E 60 00 	TCLR1	$0060
15CE 6F 	RET
; simulate E5 for readahead/first half simulate DC
15CF E4 8F 	MOV	A,$8F
15D1 C8 10 	CMP	X,#$10
15D3 B0 05 	BCS	$15DA
15D5 4E 5B 00 	TCLR1	$005B
15D8 2F 03 	BRA	$15DD
15DA 4E 5C 00 	TCLR1	$005C
15DD 6F 	RET
; vcmd E6
15DE E4 8F 	MOV	A,$8F
15E0 C8 10 	CMP	X,#$10
15E2 B0 08 	BCS	$15EC
15E4 0E 5F 00 	TSET1	$005F
15E7 4E 5B 00 	TCLR1	$005B
15EA 2F 06 	BRA	$15F2
15EC 0E 60 00 	TSET1	$0060
15EF 4E 5C 00 	TCLR1	$005C
15F2 6F 	RET
; simulate E7 for readahead/second half simulate DC
15F3 E4 8F 	MOV	A,$8F
15F5 C8 10 	CMP	X,#$10
15F7 B0 05 	BCS	$15FE
15F9 4E 5F 00 	TCLR1	$005F
15FC 2F 03 	BRA	$1601
15FE 4E 60 00 	TCLR1	$0060
1601 6F 	RET
; vcmd E9 - goto address in $2C00+A*4
1602 8D 00 	MOV	Y,#$00
1604 2F 02 	BRA	$1608
; vcmd EA - goto address in $2C02+A*4
1606 8D 02 	MOV	Y,#$02
1608 3F 16 16 	CALL	$1616
160B D4 02 	MOV	$02+X,A
160D DB 03 	MOV	$03+X,Y
160F DD 	MOV	A,Y
1610 D0 03 	BNE	$1615
1612 5F 70 17 	JMP	$1770           ; halt if 03+x = 0
1615 6F 	RET
; get song ptr from table at 2C00, indexed by A width 4, Y selects 0 or 2
1616 8F 00 93 	MOV	$93,#$00
1619 1C 	ASL	A
161A 2B 93 	ROL	$93
161C 1C 	ASL	A
161D 2B 93 	ROL	$93
161F C4 92 	MOV	$92,A           ; $92/3 = A * 4
1621 DD 	MOV	A,Y
1622 8D 2C 	MOV	Y,#$2C
1624 7A 92 	ADDW	YA,$92
1626 DA 92 	MOVW	$92,YA          ; $92/3 += #$2C00 or #$2C02
1628 8D 00 	MOV	Y,#$00
162A F7 92 	MOV	A,[$92]+Y
162C 2D 	PUSH	A
162D FC 	INC	Y
162E F7 92 	MOV	A,[$92]+Y
1630 FD 	MOV	Y,A
1631 AE 	POP	A
1632 6F 	RET
; simulate E9 for readahead
1633 F7 90 	MOV	A,[$90]+Y
1635 8D 00 	MOV	Y,#$00
1637 2F 04 	BRA	$163D
; simulate EA for readahead
1639 F7 90 	MOV	A,[$90]+Y
163B 8D 02 	MOV	Y,#$02
163D 3F 16 16 	CALL	$1616
1640 DA 90 	MOVW	$90,YA
1642 DD 	MOV	A,Y
1643 F0 04 	BEQ	$1649
1645 AE 	POP	A
1646 AE 	POP	A
1647 E8 EB 	MOV	A,#$EB
1649 6F 	RET
; F6 - goto
164A FD 	MOV	Y,A
164B 3F C9 05 	CALL	$05C9
164E DD 	MOV	A,Y
164F EB A2 	MOV	Y,$A2
1651 7A 00 	ADDW	YA,$00
1653 D4 02 	MOV	$02+X,A
1655 DB 03 	MOV	$03+X,Y
1657 6F 	RET
; simulate F6 for readahead
1658 F7 90 	MOV	A,[$90]+Y
165A 2D 	PUSH	A
165B FC 	INC	Y
165C F7 90 	MOV	A,[$90]+Y
165E FD 	MOV	Y,A
165F AE 	POP	A
1660 7A 00 	ADDW	YA,$00
1662 DA 90 	MOVW	$90,YA
1664 6F 	RET
; vcmd F5
1665 C4 9A 	MOV	$9A,A
1667 3F C9 05 	CALL	$05C9
166A C4 98 	MOV	$98,A
166C 3F C9 05 	CALL	$05C9
166F C4 99 	MOV	$99,A
1671 FB 26 	MOV	Y,$26+X
1673 F6 20 F9 	MOV	A,$F920+Y
1676 2E 9A 1B 	CBNE	$9A,$1694       ; is this repeat #arg1?
1679 F6 40 F9 	MOV	A,$F940+Y
167C 9C 	DEC	A               ; decrement repeat count
167D D0 0D 	BNE	$168C
167F 7D 	MOV	A,X
1680 1C 	ASL	A
1681 9C 	DEC	A
1682 9B 26 	DEC	$26+X
1684 DE 26 05 	CBNE	$26+X,$168C
1687 60 	CLRC
1688 88 04 	ADC	A,#$04
168A D4 26 	MOV	$26+X,A         ; if done, remove repeat state 
168C BA 98 	MOVW	YA,$98
168E 7A 00 	ADDW	YA,$00          ; correct offset
1690 D4 02 	MOV	$02+X,A
1692 DB 03 	MOV	$03+X,Y         ; set voice ptr to arg2/3
1694 6F 	RET
; simulate F5 for readahead
1695 EB C5 	MOV	Y,$C5
1697 F6 20 F9 	MOV	A,$F920+Y
169A 8D 00 	MOV	Y,#$00
169C 77 90 	CMP	A,[$90]+Y
169E D0 19 	BNE	$16B9
16A0 EB C5 	MOV	Y,$C5
16A2 F6 40 F9 	MOV	A,$F940+Y
16A5 9C 	DEC	A
16A6 D0 0C 	BNE	$16B4
16A8 7D 	MOV	A,X
16A9 1C 	ASL	A
16AA 9C 	DEC	A
16AB 8B C5 	DEC	$C5
16AD 2E C5 04 	CBNE	$C5,$16B4
16B0 60 	CLRC
16B1 98 04 C5 	ADC	$C5,#$04
16B4 8D 01 	MOV	Y,#$01
16B6 5F 58 16 	JMP	$1658
16B9 3A 90 	INCW	$90
16BB 3A 90 	INCW	$90
16BD 3A 90 	INCW	$90
16BF 6F 	RET
; vcmd E2 - begin repeat
16C0 BB 26 	INC	$26+X
16C2 7D 	MOV	A,X
16C3 1C 	ASL	A
16C4 60 	CLRC
16C5 88 04 	ADC	A,#$04          ; A = X * 2 + 4
16C7 DE 26 05 	CBNE	$26+X,$16CF     
16CA 80 	SETC
16CB A8 04 	SBC	A,#$04
16CD D4 26 	MOV	$26+X,A
16CF FB 26 	MOV	Y,$26+X         ; get rpt index into Y
16D1 E4 A2 	MOV	A,$A2           ; get repeat count (E2 arg)
16D3 F0 01 	BEQ	$16D6
16D5 BC 	INC	A               ; inc unless 0
16D6 D6 40 F9 	MOV	$F940+Y,A       ; save repeat count in F940+Y
16D9 C8 10 	CMP	X,#$10
16DB B0 05 	BCS	$16E2
16DD E8 01 	MOV	A,#$01
16DF D6 20 F9 	MOV	$F920+Y,A       ; for real voices: store 1 in F920+Y
16E2 DD 	MOV	A,Y
16E3 1C 	ASL	A
16E4 FD 	MOV	Y,A
16E5 F4 02 	MOV	A,$02+X
16E7 D6 80 F9 	MOV	$F980+Y,A
16EA F4 03 	MOV	A,$03+X
16EC D6 81 F9 	MOV	$F981+Y,A
16EF 6F 	RET
; vcmd E3 - end repeat
16F0 FB 26 	MOV	Y,$26+X
16F2 C8 10 	CMP	X,#$10
16F4 B0 07 	BCS	$16FD
16F6 F6 20 F9 	MOV	A,$F920+Y
16F9 BC 	INC	A
16FA D6 20 F9 	MOV	$F920+Y,A       ; inc F920+Y
16FD F6 40 F9 	MOV	A,$F940+Y       ; get repeats left
1700 F0 15 	BEQ	$1717           ; if 0, repeat forever
1702 9C 	DEC	A               ; DEC repeats left
1703 D0 0F 	BNE	$1714           ; done?
1705 7D 	MOV	A,X
1706 1C 	ASL	A
1707 9C 	DEC	A
1708 9B 26 	DEC	$26+X
170A DE 26 17 	CBNE	$26+X,$1724
170D 60 	CLRC
170E 88 04 	ADC	A,#$04
1710 D4 26 	MOV	$26+X,A         ; dec repeat index
1712 2F 10 	BRA	$1724
1714 D6 40 F9 	MOV	$F940+Y,A       ; not done,
1717 DD 	MOV	A,Y
1718 1C 	ASL	A
1719 FD 	MOV	Y,A
171A F6 80 F9 	MOV	A,$F980+Y
171D D4 02 	MOV	$02+X,A
171F F6 81 F9 	MOV	A,$F981+Y
1722 D4 03 	MOV	$03+X,A         ; goto stored repeat beginning
1724 6F 	RET
; simulate E3 for readahead
1725 EB C5 	MOV	Y,$C5
1727 F6 40 F9 	MOV	A,$F940+Y
172A F0 11 	BEQ	$173D
172C 9C 	DEC	A
172D D0 0E 	BNE	$173D
172F 7D 	MOV	A,X
1730 1C 	ASL	A
1731 9C 	DEC	A
1732 8B C5 	DEC	$C5
1734 2E C5 13 	CBNE	$C5,$174A
1737 60 	CLRC
1738 98 04 C5 	ADC	$C5,#$04
173B 2F 0D 	BRA	$174A
173D DD 	MOV	A,Y
173E 1C 	ASL	A
173F FD 	MOV	Y,A
1740 F6 80 F9 	MOV	A,$F980+Y
1743 C4 90 	MOV	$90,A
1745 F6 81 F9 	MOV	A,$F981+Y
1748 C4 91 	MOV	$91,A
174A 6F 	RET
; vcmd E8 - utility rest
174B D4 25 	MOV	$25+X,A
174D 6F 	RET
; vcmd DB
174E D5 60 F7 	MOV	$F760+X,A
1751 6F 	RET
; vcmd F9
1752 AB 7B 	INC	$7B
1754 6F 	RET
; vcmd FA
1755 8F 00 7B 	MOV	$7B,#$00
1758 6F 	RET
; vcmd FC - branch if voice bit in $DD set
1759 FD 	MOV	Y,A
175A 3F C9 05 	CALL	$05C9
175D E4 8F 	MOV	A,$8F
175F 24 DD 	AND	A,$DD
1761 F0 0C 	BEQ	$176F
1763 4E DD 00 	TCLR1	$00DD
1766 DD 	MOV	A,Y
1767 EB A2 	MOV	Y,$A2
1769 7A 00 	ADDW	YA,$00
176B D4 02 	MOV	$02+X,A
176D DB 03 	MOV	$03+X,Y
176F 6F 	RET
; vcmd EB-EF, FD-FF - halt
1770 AE 	POP	A
1771 AE 	POP	A
1772 E4 8F 	MOV	A,$8F
1774 C8 10 	CMP	X,#$10
1776 B0 05 	BCS	$177D
1778 4E 52 00 	TCLR1	$0052
177B 2F 09 	BRA	$1786
177D 4E 83 00 	TCLR1	$0083
1780 4E 84 00 	TCLR1	$0084
1783 4E 5D 00 	TCLR1	$005D
1786 3F BB 14 	CALL	$14BB   ; D1 - disable noise
1789 3F F2 14 	CALL	$14F2   ; D3 - disable pitchmod
178C 5F 7D 14 	JMP	$147D   ; D5 - disable echo
; pitch table
178F 79 08  ;  C
1791 FA 08  ;  C#
1793 83 09  ;  D
1795 14 0A  ;  D#
1797 AD 0A  ;  E
1799 50 0B  ;  F
179B FC 0B  ;  F#
179D B2 0C  ;  G
179F 74 0D  ;  G#
17A1 41 0E  ;  A
17A3 1A 0F  ;  A#
17A5 00 10  ;  B
17A7 F3 10
; echo filter table
17A9 7F 00 00 00  00 00 00 00
17B1 0C 21 2B 2B  13 FE F3 F9
17B9 58 BF DB F0  FE 07 0C 0C
17C1 34 33 00 D9  E5 01 FC EB
17C9 80 80 80 80  7F 7F 7F 7F
; duration table
17D1 C0 60 40 48 30 20 24 18 10 0C 08 06 04 03
; table to 02+X for CPU cmds $20-2F
17DF FF 17  ; 20  17FF
17E1 0A 18  ; 21  180A
17E3 15 18  ; 22  1815
17E5 20 18  ; 23  1820
17E7 32 18  ; 24  1832
17E9 00 00  ; 25  0000
17EB 00 00  ; 26  0000
17ED 00 00  ; 27  0000
17EF 3E 18  ; 28  183E
17F1 57 18  ; 29  1857
17F3 00 00  ; 2A  0000
17F5 00 00  ; 2B  0000
17F7 6F 18  ; 2C  186F
17F9 00 00  ; 2D  0000
17FB 00 00  ; 2E  0000
17FD 00 00  ; 2F  0000
; song data for CPU cmd $20
17FF C4 46 DC 05  C8 06 0C D6  06 6C EB
; song data for CPU cmd $21
180A C4 46 DC 05  C8 06 0C D6  06 96 EB 
; song data for CPU cmd $22
1815 C4 6E D6 04  DC 06 E2 04  37 E3 EB
; song data for CPU cmd $23
1820 C4 46 DC 03  DD 0E D6 07  E4 28 37 53  6E 7C E0 16
1830 90 EB
; song data for CPU cmd $24
1832 C4 46 DC 07  D6 07 DD 06  E0 16 6C EB
; song data for CPU cmd $28
183E C4 6E C9 00  0C 7F DC 06  D6 05 88 D7  C4 64 42 C4
184E 50 42 C4 3C  42 C4 28 42  EB
; song data for CPU cmd $29
1857 C4 6E C9 00  0C 7F DC 06  D6 05 42 C4  64 A4 C4 50
1867 A4 C4 3C A4  C4 28 A4 EB
; song data for CPU cmd $2C
186F C4 41 DC 05  D6 07 E0 18  99 CB 00 06  BF E0 12 D4
187F 9D EB
; voice data command dispatch table
1881 D3 11  ;  C4: 11D3  set voice volume
1883 E4 11  ;  C5: 11E4  volume fade (steps, dest value)
1885 36 12  ;  C6: 1236  set balance
1887 46 12  ;  C7: 1246  balance fade (pan)
1889 66 12  ;  C8: 1266
188B E3 12  ;  C9: 12E3
188D 8C 13  ;  CA: 138C
188F 96 13  ;  CB: 1396
1891 EA 13  ;  CC: 13EA
1893 F4 13  ;  CD: 13F4
1895 4A 14  ;  CE: 144A
1897 CB 14  ;  CF: 14CB  set noise clock
1899 8D 14  ;  D0: 148D  enable noise
189B BB 14  ;  D1: 14BB  disable noise
189D D9 14  ;  D2: 14D9  enable pitchmod
189F F2 14  ;  D3: 14F2  disable pitchmod
18A1 64 14  ;  D4: 1464  enable echo
18A3 7D 14  ;  D5: 147D  disable echo
18A5 60 14  ;  D6: 1460  set octave
18A7 56 14  ;  D7: 1456  inc octave
18A9 5C 14  ;  D8: 145C  dec octave
18AB 75 12  ;  D9: 1275  set transpose?
18AD 71 12  ;  DA: 1271  change (relative) transpose?
18AF 4E 17  ;  DB: 174E  (set F760+x)
18B1 02 15  ;  DC: 1502* set sample
18B3 38 15  ;  DD: 1538  set ADSR attack value
18B5 68 15  ;  DE: 1568  set ADSR decay value
18B7 7B 15  ;  DF: 157B  set ADSR sustain level
18B9 8D 15  ;  E0: 158D  set ADSR release value
18BB 9D 15  ;  E1: 159D  set default ADSR parameters for sample
18BD C0 16  ;  E2: 16C0  begin repeat
18BF F0 16  ;  E3: 16F0* end repeat
18C1 B4 15  ;  E4: 15B4
18C3 D3 0F  ;  E5: 0FD3*  nop
18C5 DE 15  ;  E6: 15DE
18C7 D3 0F  ;  E7: 0FD3*  nop
18C9 4B 17  ;  E8: 174B   utility rest
18CB 02 16  ;  E9: 1602* goto address in 2C00+A*4
18CD 06 16  ;  EA: 1606* goto address in 2C02+A*4
18CF 70 17  ;  EB: 1770* (halt?)
18D1 70 17  ;  EC: 1770  (halt?)
18D3 70 17  ;  ED: 1770  (halt?)
18D5 70 17  ;  EE: 1770  (halt?)
18D7 70 17  ;  EF: 1770  (halt?)
18D9 AF 11  ;  F0: 11AF  set tempo
18DB B8 11  ;  F1: 11B8  tempo "fade"
18DD 05 12  ;  F2: 1205  set echo volume
18DF 12 12  ;  F3: 1212  fade echo volume
18E1 D0 11  ;  F4: 11D0
18E3 65 16  ;  F5: 1665* loop if repeat count matched
18E5 4A 16  ;  F6: 164A* goto
18E7 79 12  ;  F7: 1279  set/fade echo feedback
18E9 9B 12  ;  F8: 129B
18EB 52 17  ;  F9: 1752  (inc $7B)
18ED 55 17  ;  FA: 1755  (zero $7B)
18EF B0 15  ;  FB: 15B0
18F1 59 17  ;  FC: 1759  branch if voice bit in $DD set
18F3 70 17  ;  FD: 1770  (halt?)
18F5 70 17  ;  FE: 1770  (halt?)
18F7 70 17  ;  FF: 1770  (halt?)
; music op lengths
18F9              01 02 01 02  02 03 00 03  00 02 00 01
1905 00 00 00 00  00 00 01 00  00 01 01 01  01 01 01 01
1915 01 00 01 00  00 00 00 00  01 01 01 00  00 00 00 00
1925 01 02 01 02  01 03 02 02  02 00 00 00  02 00 00 00
; table for CPU commands 10-1F
1935 1E 0A   ; 10  0A1E 
1937 26 0A   ; 11  0A26
1939 D3 0F   ; 12  0FD3  NOP
193B D3 0F   ; 13  0FD3  NOP
193D 1B 0A   ; 14  0A1B
193F 23 0A   ; 15  0A23
1941 D3 0F   ; 16  0FD3  NOP
1943 D3 0F   ; 17  0FD3  NOP
1945 3D 0B   ; 18  0B3D
1947 D3 0F   ; 19  0FD3  NOP
1949 D3 0F   ; 1A  0FD3  NOP
194B D3 0F   ; 1B  0FD3  NOP
194D D3 0F   ; 1C  0FD3  NOP
194F D3 0F   ; 1D  0FD3  NOP
1951 D3 0F   ; 1E  0FD3  NOP
1953 D3 0F   ; 1F  0FD3  NOP
; table for CPU commands 80-8F, F0-FF
1955 6A 0C   ; 80  0C6A
1957 6A 0C   ; 81  0C6A
1959 6A 0C   ; 82  0C6A
195B E5 0C   ; 83  0CE5
195D 09 0D   ; 84  0D09
195F 35 0D   ; 85  0D35
1961 D3 0F   ; 86  0FD3  NOP
1963 D3 0F   ; 87  0FD3  NOP
1965 D3 0F   ; 88  0FD3  NOP
1967 9C 0F   ; 89  0F9C
1969 D3 0F   ; 8A  0FD3  NOP
196B D3 0F   ; 8B  0FD3  NOP
196D D3 0F   ; 8C  0FD3  NOP
196F D3 0F   ; 8D  0FD3  NOP
1971 D3 0F   ; 8E  0FD3  NOP
1973 D3 0F   ; 8F  0FD3  NOP
1975 6F 0D   ; F0  0D6F
1977 6F 0D   ; F1  0D6F
1979 6F 0D   ; F2  0D6F
197B 61 0D   ; F3  0D61
197D C3 0D   ; F4  0DC3
197F CA 0D   ; F5  0DCA
1981 83 0F   ; F6  0F83
1983 D3 0F   ; F7  0FD3  NOP
1985 D3 0F   ; F8  0FD3  NOP
1987 D3 0F   ; F9  0FD3  NOP
1989 D3 0F   ; FA  0FD3  NOP
198B D3 0F   ; FB  0FD3  NOP
198D 02 10   ; FC  1002  Set echo delay from $F5, enable echo, 52->4D unless 0
198F E8 0F   ; FD  0FE8  Write $F6 to DSP register $F5
1991 38 0E   ; FE  0E38
1993 A3 0F   ; FF  0FA3  Reset
; DSP register to shadow mappings
1995 4C 2D 3D 6C  5C 4D 2C 3C  0D 0F 1F 2F  3F 4F 5F 6F  7F 
; shadows
19A6 22 89 88 8A  24 87 4D 4D  76 66 68 6A  6C 6E 70 72  74
