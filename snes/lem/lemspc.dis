SPC700 Disassembler v0.1
Loading Blocks
Block 00: start $0800 length $0AC0
Execution Address: $0800
0800 20 	CLRP            ; direct page = 00
0801 CD CF 	MOV	X,#$CF
0803 BD 	MOV	SP,X    ; stack ptr = $01CF
0804 E8 00 	MOV	A,#$00
0806 5D 	MOV	X,A
0807 AF 	MOV	(X)+,A
0808 C8 F0 	CMP	X,#$F0
080A D0 FB 	BNE	$0807   ; zero $00-$EF
080C BC 	INC	A
080D 3F 3C 0D 	CALL	$0D3C
0810 A2 48 	SET1	$48,#05
0812 E8 60 	MOV	A,#$60
0814 8D 0C 	MOV	Y,#$0C
0816 3F D6 09 	CALL	$09D6   ; set master vol L to 96
0819 8D 1C 	MOV	Y,#$1C
081B 3F D6 09 	CALL	$09D6   ; set master vol R to 96
081E E8 3C 	MOV	A,#$3C
0820 8D 5D 	MOV	Y,#$5D
0822 3F D6 09 	CALL	$09D6   ; set source dir to $3C00
0825 E8 F0 	MOV	A,#$F0
0827 C5 F1 00 	MOV	$00F1,A ; reset ports, timers off
082A E8 10 	MOV	A,#$10
082C C5 FA 00 	MOV	$00FA,A ; set timer0 latch to $10 (500Hz, 2ms)
082F C4 53 	MOV	$53,A   ; and keep a copy in $53
0831 E2 1A 	SET1	$1A,#07
0833 E8 01 	MOV	A,#$01
0835 C5 F7 00 	MOV	$00F7,A ; send #$01 to APU3
0838 C4 D3 	MOV	$D3,A   ; and keep a copy in $D3
083A E8 01 	MOV	A,#$01
083C C5 F1 00 	MOV	$00F1,A ; start timer 0
; begin main loop
083F E4 1B 	MOV	A,$1B
0841 D0 51 	BNE	$0894
0843 8D 0A 	MOV	Y,#$0A
0845 AD 05 	CMP	Y,#$05
0847 F0 07 	BEQ	$0850
0849 B0 08 	BCS	$0853
084B 69 4D 4C 	CMP	$4C<d>,$4D<s>
084E D0 11 	BNE	$0861
0850 E3 4C 0E 	BBS	$4C,#07,$0861
0853 F6 BD 10 	MOV	A,$10BD+Y
0856 C5 F2 00 	MOV	$00F2,A
0859 F6 C7 10 	MOV	A,$10C7+Y
085C 5D 	MOV	X,A
085D E6 	MOV	A,(X)
085E C5 F3 00 	MOV	$00F3,A         ; write shadow regs
0861 FE E2 	DBNZ	Y,$0845
0863 CB 45 	MOV	$45,Y
0865 CB 46 	MOV	$46,Y           ; zero key on/off shadows
0867 E4 18 	MOV	A,$18
0869 44 19 	EOR	A,$19
086B 5C 	LSR	A
086C 5C 	LSR	A
086D ED 	NOTC
086E 6B 18 	ROR	$18
0870 6B 19 	ROR	$19
0872 EC FD 00 	MOV	Y,$00FD
0875 F0 FB 	BEQ	$0872           ; wait for counter0 to go nonzero
0877 6D 	PUSH	Y
0878 E8 20 	MOV	A,#$20
087A CF 	MUL	YA              ; YA = counter0 * #$20
087B 60 	CLRC
087C 84 43 	ADC	A,$43
087E C4 43 	MOV	$43,A
0880 90 07 	BCC	$0889
0882 69 4D 4C 	CMP	$4C<d>,$4D<s>
0885 F0 02 	BEQ	$0889
0887 AB 4C 	INC	$4C
0889 E4 53 	MOV	A,$53
088B EE 	POP	Y
088C CF 	MUL	YA              ; YA = counter0 * $53
088D 60 	CLRC
088E 84 51 	ADC	A,$51
0890 C4 51 	MOV	$51,A
0892 90 0A 	BCC	$089E
0894 3F 3F 11 	CALL	$113F           ; dispatch CPU cmd
0897 CD 00 	MOV	X,#$00
0899 3F B7 08 	CALL	$08B7           ; read CPU ports
089C 2F A1 	BRA	$083F           ; restart main loop
089E E4 04 	MOV	A,$04           ; if $04 == 0 then
08A0 F0 12 	BEQ	$08B4           ;   restart main loop
08A2 CD 00 	MOV	X,#$00
08A4 8F 01 47 	MOV	$47,#$01        ; loop voice index X, bit $47
08A7 F4 31 	MOV	A,$31+X
08A9 F0 03 	BEQ	$08AE
08AB 3F E6 0F 	CALL	$0FE6
08AE 3D 	INC	X
08AF 3D 	INC	X
08B0 0B 47 	ASL	$47
08B2 D0 F3 	BNE	$08A7           ; do all 8 voices
08B4 5F 3F 08 	JMP	$083F           ; restart main loop
; read CPU ports
08B7 E5 F4 00 	MOV	A,$00F4 ; get APU0
08BA C5 90 03 	MOV	$0390,A ; save in $0390
08BD C4 00 	MOV	$00,A   ; and $00
08BF F0 1E 	BEQ	$08DF   ; return if zero, otherwise...
08C1 E5 F5 00 	MOV	A,$00F5
08C4 C5 91 03 	MOV	$0391,A ; save APU1 in 0391
08C7 E5 F6 00 	MOV	A,$00F6
08CA C5 92 03 	MOV	$0392,A ; save APU2 in 0392
08CD E5 F7 00 	MOV	A,$00F7
08D0 C5 93 03 	MOV	$0393,A ; save APU3 in 0393
08D3 E8 31 	MOV	A,#$31
08D5 C5 F1 00 	MOV	$00F1,A ; clear ports
08D8 AB D3 	INC	$D3
08DA E4 D3 	MOV	A,$D3   ; inc 
08DC C5 F7 00 	MOV	$00F7,A ; write back to APU3
08DF 6F 	RET
;
08E0 6F 	RET
;
08E1 AD CA 	CMP	Y,#$CA
08E3 90 05 	BCC	$08EA
08E5 3F 8F 0B 	CALL	$0B8F
08E8 8D A4 	MOV	Y,#$A4
08EA AD C8 	CMP	Y,#$C8
08EC B0 F2 	BCS	$08E0
08EE E4 1A 	MOV	A,$1A
08F0 24 47 	AND	A,$47
08F2 D0 EC 	BNE	$08E0
08F4 DD 	MOV	A,Y
08F5 28 7F 	AND	A,#$7F
08F7 60 	CLRC
08F8 84 50 	ADC	A,$50
08FA 60 	CLRC
08FB 95 F0 02 	ADC	A,$02F0+X
08FE D5 61 03 	MOV	$0361+X,A
0901 F5 81 03 	MOV	A,$0381+X
0904 D5 60 03 	MOV	$0360+X,A
0907 F5 B1 02 	MOV	A,$02B1+X
090A 5C 	LSR	A
090B E8 00 	MOV	A,#$00
090D 7C 	ROR	A
090E D5 A0 02 	MOV	$02A0+X,A
0911 E8 00 	MOV	A,#$00
0913 D4 B0 	MOV	$B0+X,A
0915 D5 00 01 	MOV	$0100+X,A
0918 D5 D0 02 	MOV	$02D0+X,A
091B D4 C0 	MOV	$C0+X,A
091D 09 47 5E 	OR	$5E<d>,$47<s>
0920 09 47 45 	OR	$45<d>,$47<s>   ; key on shadow
0923 F5 80 02 	MOV	A,$0280+X
0926 D4 A0 	MOV	$A0+X,A
0928 F0 1E 	BEQ	$0948
092A F5 81 02 	MOV	A,$0281+X
092D D4 A1 	MOV	$A1+X,A
092F F5 90 02 	MOV	A,$0290+X
0932 D0 0A 	BNE	$093E
0934 F5 61 03 	MOV	A,$0361+X
0937 80 	SETC
0938 B5 91 02 	SBC	A,$0291+X
093B D5 61 03 	MOV	$0361+X,A
093E F5 91 02 	MOV	A,$0291+X
0941 60 	CLRC
0942 95 61 03 	ADC	A,$0361+X
0945 3F B4 0D 	CALL	$0DB4
0948 3F CC 0D 	CALL	$0DCC           ; $10/11 = $0360/1+X
;
094B 8D 00 	MOV	Y,#$00
094D E4 11 	MOV	A,$11
094F 80 	SETC
0950 A8 34 	SBC	A,#$34
0952 B0 09 	BCS	$095D
0954 E4 11 	MOV	A,$11
0956 80 	SETC
0957 A8 13 	SBC	A,#$13
0959 B0 06 	BCS	$0961
095B DC 	DEC	Y
095C 1C 	ASL	A
095D 7A 10 	ADDW	YA,$10
095F DA 10 	MOVW	$10,YA
;
0961 4D 	PUSH	X
0962 E4 11 	MOV	A,$11
0964 1C 	ASL	A
0965 8D 00 	MOV	Y,#$00
0967 CD 18 	MOV	X,#$18
0969 9E 	DIV	YA,X
096A 5D 	MOV	X,A
096B F6 D3 10 	MOV	A,$10D3+Y
096E C4 15 	MOV	$15,A
0970 F6 D2 10 	MOV	A,$10D2+Y
0973 C4 14 	MOV	$14,A
0975 F6 D5 10 	MOV	A,$10D5+Y
0978 2D 	PUSH	A
0979 F6 D4 10 	MOV	A,$10D4+Y
097C EE 	POP	Y
097D 9A 14 	SUBW	YA,$14
097F EB 10 	MOV	Y,$10
0981 CF 	MUL	YA
0982 DD 	MOV	A,Y
0983 8D 00 	MOV	Y,#$00
0985 7A 14 	ADDW	YA,$14
0987 CB 15 	MOV	$15,Y
0989 1C 	ASL	A
098A 2B 15 	ROL	$15
098C C4 14 	MOV	$14,A
098E 2F 04 	BRA	$0994
0990 4B 15 	LSR	$15
0992 7C 	ROR	A
0993 3D 	INC	X
0994 C8 06 	CMP	X,#$06
0996 D0 F8 	BNE	$0990
0998 C4 14 	MOV	$14,A
099A CE 	POP	X
099B F5 20 02 	MOV	A,$0220+X
099E EB 15 	MOV	Y,$15
09A0 CF 	MUL	YA
09A1 DA 16 	MOVW	$16,YA
09A3 F5 20 02 	MOV	A,$0220+X
09A6 EB 14 	MOV	Y,$14
09A8 CF 	MUL	YA
09A9 6D 	PUSH	Y
09AA F5 21 02 	MOV	A,$0221+X
09AD EB 14 	MOV	Y,$14
09AF CF 	MUL	YA
09B0 7A 16 	ADDW	YA,$16
09B2 DA 16 	MOVW	$16,YA
09B4 F5 21 02 	MOV	A,$0221+X
09B7 EB 15 	MOV	Y,$15
09B9 CF 	MUL	YA
09BA FD 	MOV	Y,A
09BB AE 	POP	A
09BC 7A 16 	ADDW	YA,$16
09BE DA 16 	MOVW	$16,YA
09C0 7D 	MOV	A,X
09C1 9F 	XCN	A
09C2 5C 	LSR	A
09C3 08 02 	OR	A,#$02
09C5 FD 	MOV	Y,A     ; Y = pitch lo reg for voice X
09C6 E4 16 	MOV	A,$16
09C8 3F CE 09 	CALL	$09CE
09CB FC 	INC	Y       ; Y = pitch hi reg for voice X
09CC E4 17 	MOV	A,$17
;
09CE 2D 	PUSH	A
09CF E4 47 	MOV	A,$47
09D1 24 1A 	AND	A,$1A
09D3 AE 	POP	A
09D4 D0 06 	BNE	$09DC
; write A to DSP register Y
09D6 CC F2 00 	MOV	$00F2,Y
09D9 C5 F3 00 	MOV	$00F3,A
09DC 6F 	RET
; load word at $40; INCW $40 twice
09DD 8D 00 	MOV	Y,#$00
09DF F7 40 	MOV	A,[$40]+Y
09E1 3A 40 	INCW	$40
09E3 2D 	PUSH	A
09E4 F7 40 	MOV	A,[$40]+Y
09E6 3A 40 	INCW	$40
09E8 FD 	MOV	Y,A
09E9 AE 	POP	A
09EA 6F 	RET
; CPU cmd FF
09EB 3F EC 10 	CALL	$10EC  ; emulate standard CPU xfer protocol
09EE C4 08 	MOV	$08,A
; CPU cmd < 40
09F0 C4 04 	MOV	$04,A
09F2 C5 F5 00 	MOV	$00F5,A
09F5 1C 	ASL	A
09F6 5D 	MOV	X,A
09F7 F5 FF 17 	MOV	A,$17FF+X
09FA FD 	MOV	Y,A
09FB F5 FE 17 	MOV	A,$17FE+X
09FE DA 40 	MOVW	$40,YA
0A00 8F 02 0C 	MOV	$0C,#$02
; CPU cmd F0
0A03 E4 1A 	MOV	A,$1A
0A05 48 FF 	EOR	A,#$FF
0A07 0E 46 00 	TSET1	$0046           ; key off shadow
0A0A 6F 	RET
; reset voice and global state
0A0B CD 0E 	MOV	X,#$0E
0A0D 8F 80 47 	MOV	$47,#$80
0A10 E8 FF 	MOV	A,#$FF          ; loop over voices
0A12 D5 01 03 	MOV	$0301+X,A
0A15 E8 0A 	MOV	A,#$0A
0A17 3F E8 0B 	CALL	$0BE8           ; set 0351+x,0331+X,0330+X from A
0A1A D5 11 02 	MOV	$0211+X,A       ; zero stuff
0A1D D5 81 03 	MOV	$0381+X,A
0A20 D5 F0 02 	MOV	$02F0+X,A
0A23 D5 80 02 	MOV	$0280+X,A
0A26 D5 00 04 	MOV	$0400+X,A
0A29 D4 B1 	MOV	$B1+X,A
0A2B D4 C1 	MOV	$C1+X,A
0A2D 1D 	DEC	X
0A2E 1D 	DEC	X
0A2F 4B 47 	LSR	$47
0A31 D0 DD 	BNE	$0A10
0A33 C4 68 	MOV	$68,A
0A35 C4 54 	MOV	$54,A
0A37 C4 50 	MOV	$50,A
0A39 C4 42 	MOV	$42,A
0A3B C4 5F 	MOV	$5F,A
0A3D 8F 20 53 	MOV	$53,#$20
0A40 6F 	RET
; CPU cmd F1
0A41 E4 04 	MOV	A,$04
0A43 F0 FB 	BEQ	$0A40       ; return if $04 == 0
0A45 E4 0C 	MOV	A,$0C
0A47 F0 5A 	BEQ	$0AA3
0A49 6E 0C BF 	DBNZ	$0C,$0A0B
0A4C 3F DD 09 	CALL	$09DD       ; load word at $40; INCW twice
0A4F D0 22 	BNE	$0A73
0A51 FD 	MOV	Y,A
0A52 F0 9C 	BEQ	$09F0
0A54 68 80 	CMP	A,#$80
0A56 F0 06 	BEQ	$0A5E
0A58 68 81 	CMP	A,#$81
0A5A D0 06 	BNE	$0A62
0A5C E8 00 	MOV	A,#$00
0A5E C4 1B 	MOV	$1B,A
0A60 2F EA 	BRA	$0A4C           ; do next word
0A62 8B 42 	DEC	$42
0A64 10 02 	BPL	$0A68
0A66 C4 42 	MOV	$42,A
0A68 3F DD 09 	CALL	$09DD           ; load word at $40++
0A6B F8 42 	MOV	X,$42
0A6D F0 DD 	BEQ	$0A4C           ; do next word
0A6F DA 40 	MOVW	$40,YA
0A71 2F D9 	BRA	$0A4C           ; do next word
0A73 DA 16 	MOVW	$16,YA
0A75 8D 0F 	MOV	Y,#$0F
0A77 F7 16 	MOV	A,[$16]+Y
0A79 D6 30 00 	MOV	$0030+Y,A
0A7C DC 	DEC	Y
0A7D 10 F8 	BPL	$0A77
0A7F CD 00 	MOV	X,#$00
0A81 8F 01 47 	MOV	$47,#$01
0A84 F4 31 	MOV	A,$31+X
0A86 F0 0A 	BEQ	$0A92
0A88 F5 11 02 	MOV	A,$0211+X
0A8B D0 05 	BNE	$0A92
0A8D E8 00 	MOV	A,#$00
0A8F 3F 8F 0B 	CALL	$0B8F
0A92 E8 00 	MOV	A,#$00
0A94 D4 80 	MOV	$80+X,A
0A96 D4 90 	MOV	$90+X,A
0A98 D4 91 	MOV	$91+X,A
0A9A BC 	INC	A
0A9B D4 70 	MOV	$70+X,A
0A9D 3D 	INC	X
0A9E 3D 	INC	X
0A9F 0B 47 	ASL	$47
0AA1 D0 E1 	BNE	$0A84
0AA3 CD 00 	MOV	X,#$00
0AA5 D8 5E 	MOV	$5E,X
0AA7 8F 01 47 	MOV	$47,#$01
0AAA D8 44 	MOV	$44,X
0AAC F4 31 	MOV	A,$31+X
0AAE F0 70 	BEQ	$0B20
0AB0 9B 70 	DEC	$70+X
0AB2 D0 62 	BNE	$0B16
0AB4 3F 85 0B 	CALL	$0B85
0AB7 D0 17 	BNE	$0AD0
0AB9 F4 80 	MOV	A,$80+X
0ABB F0 8F 	BEQ	$0A4C
0ABD 3F D2 0C 	CALL	$0CD2
0AC0 9B 80 	DEC	$80+X
0AC2 D0 F0 	BNE	$0AB4
0AC4 F5 30 02 	MOV	A,$0230+X
0AC7 D4 30 	MOV	$30+X,A
0AC9 F5 31 02 	MOV	A,$0231+X
0ACC D4 31 	MOV	$31+X,A
0ACE 2F E4 	BRA	$0AB4
0AD0 30 1E 	BMI	$0AF0
0AD2 D5 00 02 	MOV	$0200+X,A
0AD5 3F 85 0B 	CALL	$0B85
0AD8 30 16 	BMI	$0AF0
0ADA C4 11 	MOV	$11,A
0ADC 4B 11 	LSR	$11
0ADE 1C 	ASL	A
0ADF 84 11 	ADC	A,$11
0AE1 D5 01 02 	MOV	$0201+X,A
0AE4 3F 85 0B 	CALL	$0B85
0AE7 30 07 	BMI	$0AF0
0AE9 1C 	ASL	A
0AEA D5 10 02 	MOV	$0210+X,A
0AED 3F 85 0B 	CALL	$0B85
0AF0 68 E0 	CMP	A,#$E0
0AF2 90 05 	BCC	$0AF9
0AF4 3F 73 0B 	CALL	$0B73
0AF7 2F BB 	BRA	$0AB4
0AF9 F5 00 04 	MOV	A,$0400+X
0AFC 04 1B 	OR	A,$1B
0AFE D0 04 	BNE	$0B04
0B00 DD 	MOV	A,Y
0B01 3F E1 08 	CALL	$08E1
0B04 F5 00 02 	MOV	A,$0200+X
0B07 D4 70 	MOV	$70+X,A
0B09 FD 	MOV	Y,A
0B0A F5 01 02 	MOV	A,$0201+X
0B0D CF 	MUL	YA
0B0E DD 	MOV	A,Y
0B0F D0 01 	BNE	$0B12
0B11 BC 	INC	A
0B12 D4 71 	MOV	$71+X,A
0B14 2F 07 	BRA	$0B1D
0B16 E4 1B 	MOV	A,$1B
0B18 D0 06 	BNE	$0B20
0B1A 3F 0F 0F 	CALL	$0F0F
0B1D 3F 94 0D 	CALL	$0D94
0B20 3D 	INC	X
0B21 3D 	INC	X
0B22 0B 47 	ASL	$47
0B24 D0 84 	BNE	$0AAA
0B26 E4 54 	MOV	A,$54
0B28 F0 0B 	BEQ	$0B35
0B2A BA 56 	MOVW	YA,$56
0B2C 7A 52 	ADDW	YA,$52
0B2E 6E 54 02 	DBNZ	$54,$0B33
0B31 BA 54 	MOVW	YA,$54
0B33 DA 52 	MOVW	$52,YA
0B35 E4 68 	MOV	A,$68
0B37 F0 15 	BEQ	$0B4E
0B39 BA 64 	MOVW	YA,$64
0B3B 7A 60 	ADDW	YA,$60
0B3D DA 60 	MOVW	$60,YA
0B3F BA 66 	MOVW	YA,$66
0B41 7A 62 	ADDW	YA,$62
0B43 6E 68 06 	DBNZ	$68,$0B4C
0B46 BA 68 	MOVW	YA,$68
0B48 DA 60 	MOVW	$60,YA
0B4A EB 6A 	MOV	Y,$6A
0B4C DA 62 	MOVW	$62,YA
0B4E E4 5A 	MOV	A,$5A
0B50 F0 0E 	BEQ	$0B60
0B52 BA 5C 	MOVW	YA,$5C
0B54 7A 58 	ADDW	YA,$58
0B56 6E 5A 02 	DBNZ	$5A,$0B5B
0B59 BA 5A 	MOVW	YA,$5A
0B5B DA 58 	MOVW	$58,YA
0B5D 8F FF 5E 	MOV	$5E,#$FF
0B60 CD 00 	MOV	X,#$00
0B62 8F 01 47 	MOV	$47,#$01
0B65 F4 31 	MOV	A,$31+X
0B67 F0 03 	BEQ	$0B6C
0B69 3F 50 0E 	CALL	$0E50
0B6C 3D 	INC	X
0B6D 3D 	INC	X
0B6E 0B 47 	ASL	$47
0B70 D0 F3 	BNE	$0B65
0B72 6F 	RET
; dispatch vcmd?
0B73 1C 	ASL	A
0B74 FD 	MOV	Y,A
0B75 F6 34 0D 	MOV	A,$0D34+Y
0B78 2D 	PUSH	A
0B79 F6 33 0D 	MOV	A,$0D33+Y
0B7C 2D 	PUSH	A
0B7D DD 	MOV	A,Y
0B7E 5C 	LSR	A
0B7F FD 	MOV	Y,A
0B80 F6 D1 0D 	MOV	A,$0DD1+Y
0B83 F0 08 	BEQ	$0B8D
; get next vcmd stream byte
0B85 E7 30 	MOV	A,[$30+X]
;
0B87 BB 30 	INC	$30+X
0B89 D0 02 	BNE	$0B8D
0B8B BB 31 	INC	$31+X
0B8D FD 	MOV	Y,A
0B8E 6F 	RET
;
0B8F D5 11 02 	MOV	$0211+X,A
;
0B92 FD 	MOV	Y,A
0B93 10 06 	BPL	$0B9B
0B95 80 	SETC
0B96 A8 CA 	SBC	A,#$CA
0B98 60 	CLRC
0B99 84 5F 	ADC	A,$5F
0B9B 8D 06 	MOV	Y,#$06
0B9D CF 	MUL	YA
0B9E DA 14 	MOVW	$14,YA
0BA0 60 	CLRC
0BA1 98 00 14 	ADC	$14,#$00
0BA4 98 3E 15 	ADC	$15,#$3E
0BA7 E4 1A 	MOV	A,$1A
0BA9 24 47 	AND	A,$47
0BAB D0 3A 	BNE	$0BE7
0BAD 4D 	PUSH	X
0BAE 7D 	MOV	A,X
0BAF 9F 	XCN	A
0BB0 5C 	LSR	A
0BB1 08 04 	OR	A,#$04
0BB3 5D 	MOV	X,A             ; X = SRCN reg for voice X
0BB4 8D 00 	MOV	Y,#$00
0BB6 F7 14 	MOV	A,[$14]+Y
0BB8 10 0E 	BPL	$0BC8
0BBA 28 1F 	AND	A,#$1F
0BBC 38 20 48 	AND	$48,#$20
0BBF 0E 48 00 	TSET1	$0048
0BC2 09 47 49 	OR	$49<d>,$47<s>
0BC5 DD 	MOV	A,Y
0BC6 2F 07 	BRA	$0BCF
0BC8 E4 47 	MOV	A,$47
0BCA 4E 49 00 	TCLR1	$0049
0BCD F7 14 	MOV	A,[$14]+Y
0BCF C9 F2 00 	MOV	$00F2,X
0BD2 C5 F3 00 	MOV	$00F3,A
0BD5 3D 	INC	X
0BD6 FC 	INC	Y
0BD7 AD 04 	CMP	Y,#$04          ; set SRCN, ADSR1/2, GAIN from [$14]
0BD9 D0 F2 	BNE	$0BCD
0BDB CE 	POP	X
0BDC F7 14 	MOV	A,[$14]+Y
0BDE D5 21 02 	MOV	$0221+X,A
0BE1 FC 	INC	Y
0BE2 F7 14 	MOV	A,[$14]+Y
0BE4 D5 20 02 	MOV	$0220+X,A
0BE7 6F 	RET
;
0BE8 D5 51 03 	MOV	$0351+X,A
0BEB 28 1F 	AND	A,#$1F
0BED D5 31 03 	MOV	$0331+X,A
0BF0 E8 00 	MOV	A,#$00
0BF2 D5 30 03 	MOV	$0330+X,A
0BF5 6F 	RET
;
0BF6 D4 91 	MOV	$91+X,A
0BF8 2D 	PUSH	A
0BF9 3F 85 0B 	CALL	$0B85
0BFC D5 50 03 	MOV	$0350+X,A
0BFF 80 	SETC
0C00 B5 31 03 	SBC	A,$0331+X
0C03 CE 	POP	X
0C04 3F D7 0D 	CALL	$0DD7
0C07 D5 40 03 	MOV	$0340+X,A
0C0A DD 	MOV	A,Y
0C0B D5 41 03 	MOV	$0341+X,A
0C0E 6F 	RET
;
0C0F D5 B0 02 	MOV	$02B0+X,A
0C12 3F 85 0B 	CALL	$0B85
0C15 D5 A1 02 	MOV	$02A1+X,A
0C18 3F 85 0B 	CALL	$0B85
;
0C1B D4 B1 	MOV	$B1+X,A
0C1D D5 C1 02 	MOV	$02C1+X,A
0C20 E8 00 	MOV	A,#$00
0C22 D5 B1 02 	MOV	$02B1+X,A
0C25 6F 	RET
;
0C26 D5 B1 02 	MOV	$02B1+X,A
0C29 2D 	PUSH	A
0C2A 8D 00 	MOV	Y,#$00
0C2C F4 B1 	MOV	A,$B1+X
0C2E CE 	POP	X
0C2F 9E 	DIV	YA,X
0C30 F8 44 	MOV	X,$44
0C32 D5 C0 02 	MOV	$02C0+X,A
0C35 6F 	RET
;
0C36 6F 	RET
;
0C37 C4 5A 	MOV	$5A,A
0C39 3F 85 0B 	CALL	$0B85
0C3C C4 5B 	MOV	$5B,A
0C3E 80 	SETC
0C3F A4 59 	SBC	A,$59
0C41 F8 5A 	MOV	X,$5A
0C43 3F D7 0D 	CALL	$0DD7
0C46 DA 5C 	MOVW	$5C,YA
0C48 6F 	RET
;
0C49 E8 00 	MOV	A,#$00
0C4B DA 52 	MOVW	$52,YA
0C4D 6F 	RET
;
0C4E C4 54 	MOV	$54,A
0C50 3F 85 0B 	CALL	$0B85
0C53 C4 55 	MOV	$55,A
0C55 80 	SETC
0C56 A4 53 	SBC	A,$53
0C58 F8 54 	MOV	X,$54
0C5A 3F D7 0D 	CALL	$0DD7
0C5D DA 56 	MOVW	$56,YA
0C5F 6F 	RET
;
0C60 C4 50 	MOV	$50,A
0C62 6F 	RET
;
0C63 D5 F0 02 	MOV	$02F0+X,A
0C66 6F 	RET
;
0C67 D5 E0 02 	MOV	$02E0+X,A
0C6A 3F 85 0B 	CALL	$0B85
0C6D D5 D1 02 	MOV	$02D1+X,A
0C70 3F 85 0B 	CALL	$0B85
;
0C73 D4 C1 	MOV	$C1+X,A
0C75 6F 	RET
;
0C76 E8 01 	MOV	A,#$01
0C78 2F 02 	BRA	$0C7C
;
0C7A E8 00 	MOV	A,#$00
0C7C D5 90 02 	MOV	$0290+X,A
0C7F DD 	MOV	A,Y
0C80 D5 81 02 	MOV	$0281+X,A
0C83 3F 85 0B 	CALL	$0B85
0C86 D5 80 02 	MOV	$0280+X,A
0C89 3F 85 0B 	CALL	$0B85
0C8C D5 91 02 	MOV	$0291+X,A
0C8F 6F 	RET
;
0C90 D5 80 02 	MOV	$0280+X,A
0C93 6F 	RET
;
0C94 D5 01 03 	MOV	$0301+X,A
0C97 E8 00 	MOV	A,#$00
0C99 D5 00 03 	MOV	$0300+X,A
0C9C 6F 	RET
;
0C9D D4 90 	MOV	$90+X,A
0C9F 2D 	PUSH	A
0CA0 3F 85 0B 	CALL	$0B85
0CA3 D5 20 03 	MOV	$0320+X,A
0CA6 80 	SETC
0CA7 B5 01 03 	SBC	A,$0301+X
0CAA CE 	POP	X
0CAB 3F D7 0D 	CALL	$0DD7
0CAE D5 10 03 	MOV	$0310+X,A
0CB1 DD 	MOV	A,Y
0CB2 D5 11 03 	MOV	$0311+X,A
0CB5 6F 	RET
;
0CB6 D5 81 03 	MOV	$0381+X,A
0CB9 6F 	RET
;
0CBA D5 40 02 	MOV	$0240+X,A
0CBD 3F 85 0B 	CALL	$0B85
0CC0 D5 41 02 	MOV	$0241+X,A
0CC3 3F 85 0B 	CALL	$0B85
0CC6 D4 80 	MOV	$80+X,A
0CC8 F4 30 	MOV	A,$30+X
0CCA D5 30 02 	MOV	$0230+X,A
0CCD F4 31 	MOV	A,$31+X
0CCF D5 31 02 	MOV	$0231+X,A
; copy 0240/1+X to 30/1+X
0CD2 F5 40 02 	MOV	A,$0240+X
0CD5 D4 30 	MOV	$30+X,A
0CD7 F5 41 02 	MOV	A,$0241+X
0CDA D4 31 	MOV	$31+X,A
0CDC 6F 	RET
;
0CDD 28 7F 	AND	A,#$7F
0CDF C4 4A 	MOV	$4A,A
0CE1 3F 85 0B 	CALL	$0B85
0CE4 E8 00 	MOV	A,#$00
0CE6 DA 60 	MOVW	$60,YA
0CE8 3F 85 0B 	CALL	$0B85
0CEB E8 00 	MOV	A,#$00
0CED DA 62 	MOVW	$62,YA
0CEF B2 48 	CLR1	$48,#05
0CF1 6F 	RET
;
0CF2 C4 68 	MOV	$68,A
0CF4 3F 85 0B 	CALL	$0B85
0CF7 C4 69 	MOV	$69,A
0CF9 80 	SETC
0CFA A4 61 	SBC	A,$61
0CFC F8 68 	MOV	X,$68
0CFE 3F D7 0D 	CALL	$0DD7
0D01 DA 64 	MOVW	$64,YA
0D03 3F 85 0B 	CALL	$0B85
0D06 C4 6A 	MOV	$6A,A
0D08 80 	SETC
0D09 A4 63 	SBC	A,$63
0D0B F8 68 	MOV	X,$68
0D0D 3F D7 0D 	CALL	$0DD7
0D10 DA 66 	MOVW	$66,YA
0D12 6F 	RET
;
0D13 DA 60 	MOVW	$60,YA
0D15 DA 62 	MOVW	$62,YA
0D17 A2 48 	SET1	$48,#05
0D19 6F 	RET
;
0D1A 3F 3C 0D 	CALL	$0D3C
0D1D 3F 85 0B 	CALL	$0B85
0D20 C4 4E 	MOV	$4E,A
0D22 3F 85 0B 	CALL	$0B85
0D25 8D 08 	MOV	Y,#$08
0D27 CF 	MUL	YA
0D28 5D 	MOV	X,A
0D29 8D 0F 	MOV	Y,#$0F
0D2B F5 9E 10 	MOV	A,$109E+X
0D2E 3F D6 09 	CALL	$09D6           ; set echo filter coeffs
0D31 3D 	INC	X
0D32 DD 	MOV	A,Y
0D33 60 	CLRC
0D34 88 10 	ADC	A,#$10
0D36 FD 	MOV	Y,A
0D37 10 F2 	BPL	$0D2B
0D39 F8 44 	MOV	X,$44
0D3B 6F 	RET
;
0D3C C4 4D 	MOV	$4D,A
0D3E 8D 7D 	MOV	Y,#$7D
0D40 CC F2 00 	MOV	$00F2,Y
0D43 E5 F3 00 	MOV	A,$00F3         ; read DSP echo delay
0D46 64 4D 	CMP	A,$4D
0D48 F0 2B 	BEQ	$0D75
0D4A 28 0F 	AND	A,#$0F
0D4C 48 FF 	EOR	A,#$FF
0D4E F3 4C 03 	BBC	$4C,#07,$0D54
0D51 60 	CLRC
0D52 84 4C 	ADC	A,$4C
0D54 C4 4C 	MOV	$4C,A
0D56 8D 04 	MOV	Y,#$04
0D58 F6 BD 10 	MOV	A,$10BD+Y
0D5B C5 F2 00 	MOV	$00F2,A
0D5E E8 00 	MOV	A,#$00
0D60 C5 F3 00 	MOV	$00F3,A
0D63 FE F3 	DBNZ	Y,$0D58
0D65 E4 48 	MOV	A,$48
0D67 08 20 	OR	A,#$20
0D69 8D 6C 	MOV	Y,#$6C
0D6B 3F D6 09 	CALL	$09D6           ; set echo FLG bit
0D6E E4 4D 	MOV	A,$4D
0D70 8D 7D 	MOV	Y,#$7D
0D72 3F D6 09 	CALL	$09D6           ; set echo delay from $4D
0D75 1C 	ASL	A
0D76 1C 	ASL	A
0D77 1C 	ASL	A
0D78 48 FF 	EOR	A,#$FF
0D7A 80 	SETC
0D7B 88 FC 	ADC	A,#$FC
0D7D 8D 6D 	MOV	Y,#$6D
0D7F 5F D6 09 	JMP	$09D6           ; set echo region to $FC00-delay*8
;
0D82 C4 5F 	MOV	$5F,A
0D84 6F 	RET
;
0D85 3F 87 0B 	CALL	$0B87
0D88 6F 	RET
;
0D89 BC 	INC	A
0D8A D5 00 04 	MOV	$0400+X,A
0D8D 6F 	RET
;
0D8E BC 	INC	A
;
0D8F C4 1B 	MOV	$1B,A
0D91 5F 03 0A 	JMP	$0A03
;
0D94 F4 A0 	MOV	A,$A0+X
0D96 D0 33 	BNE	$0DCB           ; return if $A0+X != 0
0D98 E7 30 	MOV	A,[$30+X]
0D9A 68 F9 	CMP	A,#$F9
0D9C D0 2D 	BNE	$0DCB           ; return if [$30+X] != #$F9
0D9E 3F 87 0B 	CALL	$0B87
0DA1 3F 85 0B 	CALL	$0B85
;
0DA4 D4 A1 	MOV	$A1+X,A
0DA6 3F 85 0B 	CALL	$0B85
0DA9 D4 A0 	MOV	$A0+X,A
0DAB 3F 85 0B 	CALL	$0B85
0DAE 60 	CLRC
0DAF 84 50 	ADC	A,$50
0DB1 95 F0 02 	ADC	A,$02F0+X
;
0DB4 28 7F 	AND	A,#$7F
0DB6 D5 80 03 	MOV	$0380+X,A
0DB9 80 	SETC
0DBA B5 61 03 	SBC	A,$0361+X
0DBD FB A0 	MOV	Y,$A0+X
0DBF 6D 	PUSH	Y
0DC0 CE 	POP	X
0DC1 3F D7 0D 	CALL	$0DD7
0DC4 D5 70 03 	MOV	$0370+X,A
0DC7 DD 	MOV	A,Y
0DC8 D5 71 03 	MOV	$0371+X,A
0DCB 6F 	RET
; $10/11 = $0360/1+X
0DCC F5 61 03 	MOV	A,$0361+X
0DCF C4 11 	MOV	$11,A
0DD1 F5 60 03 	MOV	A,$0360+X
0DD4 C4 10 	MOV	$10,A
0DD6 6F 	RET
;
0DD7 ED 	NOTC
0DD8 6B 12 	ROR	$12
0DDA 10 03 	BPL	$0DDF
0DDC 48 FF 	EOR	A,#$FF
0DDE BC 	INC	A
0DDF 8D 00 	MOV	Y,#$00
0DE1 9E 	DIV	YA,X
0DE2 2D 	PUSH	A
0DE3 E8 00 	MOV	A,#$00
0DE5 9E 	DIV	YA,X
0DE6 EE 	POP	Y
0DE7 F8 44 	MOV	X,$44
;
0DE9 F3 12 06 	BBC	$12,#07,$0DF2
0DEC DA 14 	MOVW	$14,YA
0DEE BA 0E 	MOVW	YA,$0E
0DF0 9A 14 	SUBW	YA,$14
0DF2 6F 	RET
;
0DF3 8F 0B
0DF5 E8 0B
0DF7 F6 0B
0DF9 0F 0C
0DFB 1B 0C
0DFD 36 0C
0DFF 37 0C
0E01 49 0C
0E03 4E 0C
0E05 60 0C
0E07 63 0C
0E09 67 0C
0E0B 73 0C
0E0D 94 0C
0E0F 9D 0C
0E11 BA 0C
0E13 26 0C
0E15 76 0C
0E17 7A 0C
0E19 90 0C
0E1B B6 0C
0E1D DD 0C
0E1F 13 0D
0E21 1A 0D
0E23 F2 0C
0E25 A4 0D
0E27 82 0D
0E29 85 0D
0E2B 89 0D
0E2D 8E 0D
0E2F 8F 0D
;
0E31 01 01 02 03  00 01 02 01  02 01 01 03  00 01 02 03
0E41 01 03 03 00  01 03 00 03  03 03 01 02  00 00 00
;
0E50 F4 90 	MOV	A,$90+X
0E52 F0 09 	BEQ	$0E5D
0E54 E8 00 	MOV	A,#$00
0E56 8D 03 	MOV	Y,#$03
0E58 9B 90 	DEC	$90+X
0E5A 3F EB 0E 	CALL	$0EEB
0E5D FB C1 	MOV	Y,$C1+X
0E5F F0 23 	BEQ	$0E84
0E61 F5 E0 02 	MOV	A,$02E0+X
0E64 DE C0 1B 	CBNE	$C0+X,$0E82
0E67 09 47 5E 	OR	$5E<d>,$47<s>
0E6A F5 D0 02 	MOV	A,$02D0+X
0E6D 10 07 	BPL	$0E76
0E6F FC 	INC	Y
0E70 D0 04 	BNE	$0E76
0E72 E8 80 	MOV	A,#$80
0E74 2F 04 	BRA	$0E7A
0E76 60 	CLRC
0E77 95 D1 02 	ADC	A,$02D1+X
0E7A D5 D0 02 	MOV	$02D0+X,A
0E7D 3F 6C 10 	CALL	$106C
0E80 2F 07 	BRA	$0E89
0E82 BB C0 	INC	$C0+X
0E84 E8 FF 	MOV	A,#$FF
0E86 3F 77 10 	CALL	$1077
0E89 F4 91 	MOV	A,$91+X
0E8B F0 09 	BEQ	$0E96
0E8D E8 30 	MOV	A,#$30
0E8F 8D 03 	MOV	Y,#$03
0E91 9B 91 	DEC	$91+X
0E93 3F EB 0E 	CALL	$0EEB
0E96 E4 47 	MOV	A,$47
0E98 24 5E 	AND	A,$5E
0E9A F0 4E 	BEQ	$0EEA           ; return
0E9C F5 31 03 	MOV	A,$0331+X
0E9F FD 	MOV	Y,A
0EA0 F5 30 03 	MOV	A,$0330+X
0EA3 DA 10 	MOVW	$10,YA
;
0EA5 7D 	MOV	A,X
0EA6 9F 	XCN	A
0EA7 5C 	LSR	A
0EA8 C4 12 	MOV	$12,A
0EAA E4 D4 	MOV	A,$D4
0EAC F0 04 	BEQ	$0EB2
0EAE E8 0A 	MOV	A,#$0A
0EB0 C4 11 	MOV	$11,A
0EB2 EB 11 	MOV	Y,$11
0EB4 F6 8A 10 	MOV	A,$108A+Y
0EB7 80 	SETC
0EB8 B6 89 10 	SBC	A,$1089+Y
0EBB EB 10 	MOV	Y,$10
0EBD CF 	MUL	YA
0EBE DD 	MOV	A,Y
0EBF EB 11 	MOV	Y,$11
0EC1 60 	CLRC
0EC2 96 89 10 	ADC	A,$1089+Y
0EC5 FD 	MOV	Y,A
0EC6 F5 21 03 	MOV	A,$0321+X
0EC9 CF 	MUL	YA
0ECA F5 51 03 	MOV	A,$0351+X
0ECD 1C 	ASL	A
0ECE 13 12 01 	BBC	$12,#00,$0ED2
0ED1 1C 	ASL	A
0ED2 DD 	MOV	A,Y
0ED3 90 03 	BCC	$0ED8
0ED5 48 FF 	EOR	A,#$FF
0ED7 BC 	INC	A
0ED8 EB 12 	MOV	Y,$12
0EDA 3F CE 09 	CALL	$09CE
0EDD 8D 14 	MOV	Y,#$14
0EDF E8 00 	MOV	A,#$00
0EE1 9A 10 	SUBW	YA,$10
0EE3 DA 10 	MOVW	$10,YA
0EE5 AB 12 	INC	$12
0EE7 33 12 C0 	BBC	$12,#01,$0EAA
0EEA 6F 	RET
;
0EEB 09 47 5E 	OR	$5E<d>,$47<s>
;
0EEE DA 14 	MOVW	$14,YA
0EF0 DA 16 	MOVW	$16,YA
0EF2 4D 	PUSH	X
0EF3 EE 	POP	Y
0EF4 60 	CLRC
0EF5 D0 0A 	BNE	$0F01
0EF7 98 1F 16 	ADC	$16,#$1F
0EFA E8 00 	MOV	A,#$00
0EFC D7 14 	MOV	[$14]+Y,A
0EFE FC 	INC	Y
0EFF 2F 09 	BRA	$0F0A
0F01 98 10 16 	ADC	$16,#$10
0F04 3F 08 0F 	CALL	$0F08
0F07 FC 	INC	Y
;
0F08 F7 14 	MOV	A,[$14]+Y
0F0A 97 16 	ADC	A,[$16]+Y
0F0C D7 14 	MOV	[$14]+Y,A
0F0E 6F 	RET
; do voice readahead?
0F0F F4 71 	MOV	A,$71+X
0F11 F0 63 	BEQ	$0F76
0F13 9B 71 	DEC	$71+X
0F15 F0 05 	BEQ	$0F1C
0F17 E8 02 	MOV	A,#$02
0F19 DE 70 5A 	CBNE	$70+X,$0F76
0F1C F4 80 	MOV	A,$80+X
0F1E C4 17 	MOV	$17,A
0F20 F4 30 	MOV	A,$30+X
0F22 FB 31 	MOV	Y,$31+X
0F24 DA 14 	MOVW	$14,YA
0F26 8D 00 	MOV	Y,#$00
0F28 F7 14 	MOV	A,[$14]+Y
0F2A F0 1C 	BEQ	$0F48
0F2C 30 05 	BMI	$0F33
0F2E FC 	INC	Y
0F2F F7 14 	MOV	A,[$14]+Y
0F31 10 FB 	BPL	$0F2E
0F33 68 C8 	CMP	A,#$C8
0F35 F0 3F 	BEQ	$0F76
0F37 68 EF 	CMP	A,#$EF
0F39 F0 29 	BEQ	$0F64
0F3B 68 E0 	CMP	A,#$E0
0F3D 90 30 	BCC	$0F6F
0F3F 6D 	PUSH	Y
0F40 FD 	MOV	Y,A
0F41 AE 	POP	A
0F42 96 51 0D 	ADC	A,$0D51+Y
0F45 FD 	MOV	Y,A
0F46 2F E0 	BRA	$0F28
0F48 E4 17 	MOV	A,$17
0F4A F0 23 	BEQ	$0F6F
0F4C 8B 17 	DEC	$17
0F4E D0 0A 	BNE	$0F5A
0F50 F5 31 02 	MOV	A,$0231+X
0F53 2D 	PUSH	A
0F54 F5 30 02 	MOV	A,$0230+X
0F57 EE 	POP	Y
0F58 2F CA 	BRA	$0F24
0F5A F5 41 02 	MOV	A,$0241+X
0F5D 2D 	PUSH	A
0F5E F5 40 02 	MOV	A,$0240+X
0F61 EE 	POP	Y
0F62 2F C0 	BRA	$0F24
0F64 FC 	INC	Y
0F65 F7 14 	MOV	A,[$14]+Y
0F67 2D 	PUSH	A
0F68 FC 	INC	Y
0F69 F7 14 	MOV	A,[$14]+Y
0F6B FD 	MOV	Y,A
0F6C AE 	POP	A
0F6D 2F B5 	BRA	$0F24
0F6F E4 47 	MOV	A,$47
0F71 8D 5C 	MOV	Y,#$5C
0F73 3F CE 09 	CALL	$09CE
0F76 F2 13 	CLR1	$13,#07
0F78 F4 A0 	MOV	A,$A0+X
0F7A F0 13 	BEQ	$0F8F
0F7C F4 A1 	MOV	A,$A1+X
0F7E F0 04 	BEQ	$0F84
0F80 9B A1 	DEC	$A1+X
0F82 2F 0B 	BRA	$0F8F
0F84 E2 13 	SET1	$13,#07
0F86 E8 60 	MOV	A,#$60
0F88 8D 03 	MOV	Y,#$03
0F8A 9B A0 	DEC	$A0+X
0F8C 3F EE 0E 	CALL	$0EEE
0F8F 3F CC 0D 	CALL	$0DCC           ; $10/11 = $0360/1+X
0F92 F4 B1 	MOV	A,$B1+X
0F94 F0 4C 	BEQ	$0FE2
0F96 F5 B0 02 	MOV	A,$02B0+X
0F99 DE B0 44 	CBNE	$B0+X,$0FE0
0F9C F5 00 01 	MOV	A,$0100+X
0F9F 75 B1 02 	CMP	A,$02B1+X
0FA2 D0 05 	BNE	$0FA9
0FA4 F5 C1 02 	MOV	A,$02C1+X
0FA7 2F 0D 	BRA	$0FB6
0FA9 40 	SETP
0FAA BB 00 	INC	$00+X
0FAC 20 	CLRP
0FAD FD 	MOV	Y,A
0FAE F0 02 	BEQ	$0FB2
0FB0 F4 B1 	MOV	A,$B1+X
0FB2 60 	CLRC
0FB3 95 C0 02 	ADC	A,$02C0+X
0FB6 D4 B1 	MOV	$B1+X,A
0FB8 F5 A0 02 	MOV	A,$02A0+X
0FBB 60 	CLRC
0FBC 95 A1 02 	ADC	A,$02A1+X
0FBF D5 A0 02 	MOV	$02A0+X,A
;
0FC2 C4 12 	MOV	$12,A
0FC4 1C 	ASL	A
0FC5 1C 	ASL	A
0FC6 90 02 	BCC	$0FCA
0FC8 48 FF 	EOR	A,#$FF
0FCA FD 	MOV	Y,A
0FCB F4 B1 	MOV	A,$B1+X
0FCD 68 F1 	CMP	A,#$F1
0FCF 90 05 	BCC	$0FD6
0FD1 28 0F 	AND	A,#$0F
0FD3 CF 	MUL	YA
0FD4 2F 04 	BRA	$0FDA
0FD6 CF 	MUL	YA
0FD7 DD 	MOV	A,Y
0FD8 8D 00 	MOV	Y,#$00
0FDA 3F 57 10 	CALL	$1057
0FDD 5F 4B 09 	JMP	$094B
0FE0 BB B0 	INC	$B0+X
0FE2 E3 13 F8 	BBS	$13,#07,$0FDD
0FE5 6F 	RET
;
0FE6 F2 13 	CLR1	$13,#07
0FE8 F4 C1 	MOV	A,$C1+X
0FEA F0 09 	BEQ	$0FF5
0FEC F5 E0 02 	MOV	A,$02E0+X
0FEF DE C0 03 	CBNE	$C0+X,$0FF5
0FF2 3F 5F 10 	CALL	$105F
0FF5 F5 31 03 	MOV	A,$0331+X
0FF8 FD 	MOV	Y,A
0FF9 F5 30 03 	MOV	A,$0330+X
0FFC DA 10 	MOVW	$10,YA
0FFE F4 91 	MOV	A,$91+X
1000 F0 0A 	BEQ	$100C
1002 F5 41 03 	MOV	A,$0341+X
1005 FD 	MOV	Y,A
1006 F5 40 03 	MOV	A,$0340+X
1009 3F 41 10 	CALL	$1041
100C F3 13 03 	BBC	$13,#07,$1012
100F 3F A5 0E 	CALL	$0EA5
1012 F2 13 	CLR1	$13,#07
1014 3F CC 0D 	CALL	$0DCC           ; $10/11 = $0360/1+X
1017 F4 A0 	MOV	A,$A0+X
1019 F0 0E 	BEQ	$1029
101B F4 A1 	MOV	A,$A1+X
101D D0 0A 	BNE	$1029
101F F5 71 03 	MOV	A,$0371+X
1022 FD 	MOV	Y,A
1023 F5 70 03 	MOV	A,$0370+X
1026 3F 41 10 	CALL	$1041
1029 F4 B1 	MOV	A,$B1+X
102B F0 B5 	BEQ	$0FE2
102D F5 B0 02 	MOV	A,$02B0+X
1030 DE B0 AF 	CBNE	$B0+X,$0FE2
1033 EB 51 	MOV	Y,$51
1035 F5 A1 02 	MOV	A,$02A1+X
1038 CF 	MUL	YA
1039 DD 	MOV	A,Y
103A 60 	CLRC
103B 95 A0 02 	ADC	A,$02A0+X
103E 5F C2 0F 	JMP	$0FC2
;
1041 E2 13 	SET1	$13,#07
1043 CB 12 	MOV	$12,Y
1045 3F E9 0D 	CALL	$0DE9
1048 6D 	PUSH	Y
1049 EB 51 	MOV	Y,$51
104B CF 	MUL	YA
104C CB 14 	MOV	$14,Y
104E 8F 00 15 	MOV	$15,#$00
1051 EB 51 	MOV	Y,$51
1053 AE 	POP	A
1054 CF 	MUL	YA
1055 7A 14 	ADDW	YA,$14
;
1057 3F E9 0D 	CALL	$0DE9
105A 7A 10 	ADDW	YA,$10
105C DA 10 	MOVW	$10,YA
105E 6F 	RET
;
105F E2 13 	SET1	$13,#07
1061 EB 51 	MOV	Y,$51
1063 F5 D1 02 	MOV	A,$02D1+X
1066 CF 	MUL	YA
1067 DD 	MOV	A,Y
1068 60 	CLRC
1069 95 D0 02 	ADC	A,$02D0+X
;
106C 1C 	ASL	A
106D 90 02 	BCC	$1071
106F 48 FF 	EOR	A,#$FF
1071 FB C1 	MOV	Y,$C1+X
1073 CF 	MUL	YA
1074 DD 	MOV	A,Y
1075 48 FF 	EOR	A,#$FF
;
1077 EB 59 	MOV	Y,$59
1079 CF 	MUL	YA
107A F5 10 02 	MOV	A,$0210+X
107D CF 	MUL	YA
107E F5 01 03 	MOV	A,$0301+X
1081 CF 	MUL	YA
1082 DD 	MOV	A,Y
1083 CF 	MUL	YA
1084 DD 	MOV	A,Y
1085 D5 21 03 	MOV	$0321+X,A
1088 6F 	RET
;
1089 00 	NOP
108A 01 	TCALL	$00
108B 03 07 0D 	BBS	$07,#00,$109B
108E 15 1E 29 	OR	A,$291E+X
1091 34 42 	AND	A,$42+X
1093 51 	TCALL	$05
1094 5E 67 6E 	CMP	Y,$6E67
1097 73 77 7A 	BBC	$77,#03,$1114
109A 7C 	ROR	A
109B 7D 	MOV	A,X
109C 7E 7F 	CMP	Y,$7F
; table of filter coeffs (0D2B)
109E 7F 00 00 00  00 00 00 00
10A6 58 BF DB F0  FE 07 0C 0C
10AE 0C 21 2B 2B  13 FE F3 F9
10B6 34 33 00 D9  E5 01 FC EB
; DSP regs - shadow regs map
10BE 2C 3C 0D 4D 6C 4C 5C 3D 2D 5C
10C8 61 63 4E 4A 48 45 0E 49 4B 46
; pitch table?
10D2 5F 08
10D4 DE 08
10D6 65 09
10D8 F4 09
10DA 8C 0A
10DC 2C 0B
10DE D6 0B
10E0 8B 0C
10E2 4A 0D
10E4 14 0E
10E6 EA 0E
10E8 CD 0F
10EA BE 10
; emulate standard SPC CPU transfer protocol
10EC E8 AA	MOV     A,#$AA
10EE C5 F4 00	MOV	$00F4,A
10F1 E8 BB 	MOV	A,#$BB
10F3 C5 F5 00 	MOV	$00F5,A
10F6 E5 F4 00 	MOV	A,$00F4
10F9 68 CC 	CMP	A,#$CC
10FB D0 F9 	BNE	$10F6
10FD 2F 20 	BRA	$111F
10FF EC F4 00 	MOV	Y,$00F4
1102 D0 FB 	BNE	$10FF
1104 5E F4 00 	CMP	Y,$00F4
1107 D0 0F 	BNE	$1118
1109 E5 F5 00 	MOV	A,$00F5
110C CC F4 00 	MOV	$00F4,Y
110F D7 14 	MOV	[$14]+Y,A
1111 FC 	INC	Y
1112 D0 F0 	BNE	$1104
1114 AB 15 	INC	$15
1116 2F EC 	BRA	$1104
1118 10 EA 	BPL	$1104
111A 5E F4 00 	CMP	Y,$00F4
111D 10 E5 	BPL	$1104
111F E5 F6 00 	MOV	A,$00F6
1122 EC F7 00 	MOV	Y,$00F7
1125 DA 14 	MOVW	$14,YA
1127 EC F4 00 	MOV	Y,$00F4
112A E5 F5 00 	MOV	A,$00F5
112D CC F4 00 	MOV	$00F4,Y
1130 D0 CD 	BNE	$10FF
1132 CD 31 	MOV	X,#$31
1134 C9 F1 00 	MOV	$00F1,X
1137 AB D3 	INC	$D3
1139 F8 D3 	MOV	X,$D3
113B C9 F7 00 	MOV	$00F7,X
113E 6F 	RET
; dispatch CPU cmd
113F 8D 7C 	MOV	Y,#$7C
1141 CC F2 00 	MOV	$00F2,Y
1144 E5 F3 00 	MOV	A,$00F3         ; read DSP source end block flags
1147 10 08 	BPL	$1151           ; voice 7 flag 0?
1149 E8 00 	MOV	A,#$00
114B C5 F3 00 	MOV	$00F3,A         ;   no, clear all ENDX flags
114E C5 F6 00 	MOV	$00F6,A         ;   and APU2
1151 EB 08 	MOV	Y,$08           ; get previous CPU cmd in Y
1153 E4 00 	MOV	A,$00           ; and current CPU cmd in A
1155 C4 08 	MOV	$08,A           ; save current CPU cmd as previous
1157 F0 53 	BEQ	$11AC           ; JMP A41 (cmd F1) if no current cmd
1159 68 40 	CMP	A,#$40
115B 90 52 	BCC	$11AF           ; JMP 9F0 if cmd < #$40
115D 68 B0 	CMP	A,#$B0
115F 90 51 	BCC	$11B2           ; JMP 11B2 if cmd < #$B0
1161 68 C0 	CMP	A,#$C0
1163 90 5C 	BCC	$11C1           ; JMP 11C1 if cmd < #$C0
1165 68 F0 	CMP	A,#$F0
1167 90 67 	BCC	$11D0           ; JMP 11D0 if cmd < #$F0
1169 28 0F 	AND	A,#$0F          ; if cmd >= $F0 then 
116B 1C 	ASL	A
116C FD 	MOV	Y,A             ; Y = table index for cmd & #$0f
116D F6 67 12 	MOV	A,$1267+Y
1170 2D 	PUSH	A
1171 F6 66 12 	MOV	A,$1266+Y
1174 2D 	PUSH	A
1175 6F 	RET                     ; get address from table and exec
; CPU cmd F2
1176 E8 00 	MOV	A,#$00
1178 C4 58 	MOV	$58,A
117A C4 59 	MOV	$59,A
117C E8 FF 	MOV	A,#$FF
117E 2F 02 	BRA	$1182
; CPU cmd F3
1180 E8 00 	MOV	A,#$00
1182 C4 5B 	MOV	$5B,A
1184 80 	SETC
1185 A4 59 	SBC	A,$59
1187 CD F0 	MOV	X,#$F0
1189 D8 5A 	MOV	$5A,X
118B 3F D7 0D 	CALL	$0DD7
118E DA 5C 	MOVW	$5C,YA
1190 2F 1A 	BRA	$11AC   ; JMP A41 (CPU F1)
; CPU cmd F4
1192 E8 FF 	MOV	A,#$FF
1194 C4 58 	MOV	$58,A
1196 C4 59 	MOV	$59,A
1198 E8 00 	MOV	A,#$00
119A C4 5A 	MOV	$5A,A
119C 2F 0E 	BRA	$11AC   ; JMP A41 (CPU F1)
; CPU cmd F5
119E E8 00 	MOV	A,#$00
11A0 2F 0D 	BRA	$11AF
; CPU cmd F6
11A2 E4 1A 	MOV	A,$1A
11A4 48 FF 	EOR	A,#$FF
11A6 0E 46 00 	TSET1	$0046
11A9 8F 00 1A 	MOV	$1A,#$00
11AC 5F 41 0A 	JMP	$0A41
11AF 5F F0 09 	JMP	$09F0
; CPU cmds 40-AF
11B2 A8 3F 	SBC	A,#$3F
11B4 8D 30 	MOV	Y,#$30
11B6 CF 	MUL	YA
11B7 DA D0 	MOVW	$D0,YA
11B9 60 	CLRC
11BA 98 A4 D1 	ADC	$D1,#$A4
11BD E8 BE 	MOV	A,#$BE
11BF 2F 15 	BRA	$11D6
; CPU cmds B0-BF
11C1 A8 AF 	SBC	A,#$AF
11C3 FD 	MOV	Y,A
11C4 F6 B8 12 	MOV	A,$12B8+Y
11C7 8F 00 D0 	MOV	$D0,#$00
11CA C4 D1 	MOV	$D1,A
11CC E8 BF 	MOV	A,#$BF
11CE 2F 06 	BRA	$11D6
; CPU cmds C0-EF
11D0 8F 00 D0 	MOV	$D0,#$00
11D3 8F A4 D1 	MOV	$D1,#$A4
11D6 C5 F6 00 	MOV	$00F6,A
11D9 80 	SETC
11DA A8 A0 	SBC	A,#$A0
11DC F2 1A 	CLR1	$1A,#07
11DE 8F 80 47 	MOV	$47,#$80
11E1 CD 0E 	MOV	X,#$0E
11E3 2D 	PUSH	A
11E4 3F 92 0B 	CALL	$0B92
11E7 EE 	POP	Y
11E8 F6 68 12 	MOV	A,$1268+Y       ; (1288)
11EB EB 59 	MOV	Y,$59
11ED CF 	MUL	YA
11EE DD 	MOV	A,Y
11EF C5 2F 03 	MOV	$032F,A
11F2 E8 00 	MOV	A,#$00
11F4 C5 5F 03 	MOV	$035F,A
11F7 E5 91 03 	MOV	A,$0391
11FA 28 1F 	AND	A,#$1F
11FC C5 11 00 	MOV	$0011,A
11FF E8 00 	MOV	A,#$00
1201 C5 10 00 	MOV	$0010,A
1204 3F A5 0E 	CALL	$0EA5
1207 BA D0 	MOVW	YA,$D0
1209 DA 10 	MOVW	$10,YA
120B 3F 61 09 	CALL	$0961
120E E2 45 	SET1	$45,#07
1210 E2 1A 	SET1	$1A,#07
1212 2F 98 	BRA	$11AC   ; JMP A41 (CPU F1)
; CPU cmd F7
1214 EC 91 03 	MOV	Y,$0391
1217 E8 00 	MOV	A,#$00
1219 DA 58 	MOVW	$58,YA
121B 2F 8F 	BRA	$11AC   ; JMP A41 (CPU F1)
; CPU cmd FA
121D E8 22 	MOV	A,#$22
121F D2 1A 	CLR1	$1A,#06
1221 8F 40 47 	MOV	$47,#$40
1224 CD 0C 	MOV	X,#$0C
1226 2D 	PUSH	A
1227 3F 92 0B 	CALL	$0B92
122A EE 	POP	Y
122B F6 86 12 	MOV	A,$1286+Y
122E EB 59 	MOV	Y,$59
1230 CF 	MUL	YA
1231 DD 	MOV	A,Y
1232 C5 2D 03 	MOV	$032D,A
1235 E8 00 	MOV	A,#$00
1237 C5 5D 03 	MOV	$035D,A
123A E5 91 03 	MOV	A,$0391
123D 28 1F 	AND	A,#$1F
123F C5 11 00 	MOV	$0011,A
1242 E8 00 	MOV	A,#$00
1244 C5 10 00 	MOV	$0010,A
1247 3F A5 0E 	CALL	$0EA5
124A BA D0 	MOVW	YA,$D0
124C DA 10 	MOVW	$10,YA
124E 3F 61 09 	CALL	$0961
1251 C2 45 	SET1	$45,#06
1253 C2 1A 	SET1	$1A,#06
1255 5F AC 11 	JMP	$11AC   ; JMP A41 (CPU F1)
; CPU cmd F8
1258 E8 01 	MOV	A,#$01
125A C4 D4 	MOV	$D4,A
125C 5F AC 11 	JMP	$11AC   ; JMP A41 (CPU F1)
; CPU cmd F9
125F E8 00 	MOV	A,#$00
1261 C4 D4 	MOV	$D4,A
1263 5F AC 11 	JMP	$11AC   ; JMP A41 (CPU F1)
; table of routines for CPU cmds F0-FF
1266 03 0A  - F0
1268 41 0A  - F1
126A 76 11  - F2
126C 80 11  - F3
126E 92 11  - F4
1270 9E 11  - F5
1272 A2 11  - F6
1274 14 12  - F7
1276 58 12  - F8
1278 5F 12  - F9
127A 1D 12  - FA
127C AC 11  - FB
127E AC 11  - FC
1280 AC 11  - FD
1282 AC 11  - FE
1284 EB 09  - FF
;
1286 FF FF 	OR	$FF<d>,$FF<s>
1288 FF 	STOP
1289 FF 	STOP
128A FF 	STOP
128B FF 	STOP
128C FF 	STOP
128D FF 	STOP
128E FF 	STOP
128F FF 	STOP
1290 FF 	STOP
1291 FF 	STOP
1292 FF 	STOP
1293 FF 	STOP
1294 FF 	STOP
1295 FF 	STOP
1296 FF 	STOP
1297 FF 	STOP
1298 FF 	STOP
1299 FF 	STOP
129A FF 	STOP
129B FF 	STOP
129C FF 	STOP
129D FF 	STOP
129E FF 	STOP
129F FF 	STOP
12A0 FF 	STOP
12A1 FF 	STOP
12A2 FF 	STOP
12A3 FF 	STOP
12A4 FF 	STOP
12A5 FF 	STOP
12A6 FF 	STOP
12A7 FF 	STOP
12A8 FF 	STOP
12A9 FF 	STOP
12AA FF 	STOP
12AB FF 	STOP
12AC FF 	STOP
12AD FF 	STOP
12AE FF 	STOP
12AF FF 	STOP
12B0 FF 	STOP
12B1 FF 	STOP
12B2 FF 	STOP
12B3 FF 	STOP
12B4 FF 	STOP
12B5 FF 	STOP
12B6 FF 	STOP
12B7 FF 	STOP
; table for CPU cmds B0-BF (11C1)
12B8 A4 A6 A8 A9 AB AD AF B0
