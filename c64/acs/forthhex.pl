#!/usr/bin/perl

# cab 2002-05-18

use File::Basename;

$fname = shift;

$fl = lc substr basename($fname), 0, 1;

open IN, "< $fname" or die;

read IN, $buf, 0x10000;
close IN;

&initops;

my $loadaddr = unpack "v", $buf;
my $code = substr $buf, 2;

my ($start, $end) = map { hex } @ARGV;

for (my $p = $start; $p <= $end; $p += 2) {
  printf "%04X  ", $p;
  
  my ($word, $arg) = unpack "v2", substr $code, ($p-$loadaddr), 4;
  my $op;
  if ($fl eq 'b' || $fl eq 'o' || $fl eq 'r' || $fl eq 's') {
    $op = $ops_b{$word} || $ops_o{$word} || $ops_r{$word}
    	 || $ops_s{$word};
  } elsif ($fl eq 'd' || $fl eq 'p') {
    $op = $ops_d{$word} || $ops_p{$word};
  } elsif ($fl eq 'w') {
    $op = $ops_w{$word};
  } elsif ($fl eq 'c') {
    $op = $ops_c{$word};
  } elsif ($fl eq 'f') {
    $op = $ops_f{$word};
  }
  $op ||= $ops{$word};

  if ($op) {
    my ($label, $addrmode) = @{$op};
    if ($addrmode eq 'imm') {
      $p += 2;
      printf "%04X %04X\t; $label", $word, $arg, $arg;
    } elsif ($addrmode eq 'var') {
      $p += 2;
      printf "%04X %04X\t; $label", $word, $arg, $p;
    } elsif ($addrmode eq 'rel') {
      $p += 2;
      printf "%04X %04X\t; $label", $word, $arg, ($p + $arg) & 0xffff;
    } elsif ($addrmode eq 'doe') {
      $p += 2;
      my $label2 = $ops{$arg-2} ? $ops{$arg-2}[0] : "";
      printf "%04X %04X\t; $label", $word, $arg, $arg, $label2;
    } elsif ($addrmode eq 'ics') {
      $arg &= 0xff;    # count is one byte
      my @chars = unpack "C$arg", substr $code, ($p-$loadaddr+3), $arg;
      $p += $arg + 1;  # account for count and data
      printf "%04X %02X" . (" %02X" x $arg) . "\t; $label",
      	$word, $arg, @chars, join("", map { chr &scrn2asc($_) } @chars);
    } else {
      printf "%04X\t; $label", $word;
    }
  } else {
    printf "%04X", $word;
  }
  print "\n";
  print ";\n" if $word == 0xb2e;
}

sub scrn2asc {
  my $in = shift;
  $in &= 0x7f;  # reverse = normal
  $in += 0x40 if $in < 0x20;
  return $in;
}

sub initops {
  %ops = (
  	  0x8aa => ['push $%04X', "imm"],
  	  0x8f9 => ['push $%04X', "imm"], 
  	  0x906 => ['push VAR $%04X', "var"],
  	  0x957 => ['CALL stk'],
  	  0x966 => ['BRA $%04X', "rel"],
  	  0x97b => ['BEQ $%04X', "rel"],
  	  0x993 => ['LOOP $%04X', "rel"],
  	  0x9b9 => ['LOOP+ $%04X', "rel"],
  	  0x9e9 => ['DO'],
  	  0x9fe => ['@R'],
  	  0xa0f => ['I'],
  	  0xa11 => ['J'],
  	  0xa3d => ['CMOVE'],
  	  0xa7d => ['UD*'],
  	  0xa85 => ['U*'],
  	  0xad4 => ['UD/MOD'],
  	  0xadc => ['AND'],
  	  0xaec => ['OR'],
  	  0xafc => ['XOR'],
  	  0xb39 => ['LEAVE'],
  	  0xb4f => ['>R'],
  	  0xb5c => ['R>'],
  	  0xb69 => ['0='],
  	  0xb7b => ['0>'],
  	  0xbac => ['D+'],
  	  0xbca => ['+'],
  	  0xbd8 => ['-'],
  	  0xbe6 => ['NEGATE'],
  	  0xbf6 => ['OVER'],
  	  0xc00 => ['DROP'],
  	  0xc02 => ['DUP'],
  	  0xc21 => ['SWAP'],
  	  0xc29 => ['ROT'],
  	  0xc44 => ['+!'],
  	  0xc5c => ['XOR-C!'],
  	  0xc67 => ['@'],
  	  0xc77 => ['C@'],
  	  0xc82 => ['!'],
  	  0xc95 => ['C!'],
  	  0xca0 => ['DOES> $%04X: %s', "doe"],
  	  0xcbe => ['cvt-ascii-digit-to-number'],
  	  0xce6 => ['DNEGATE'],
  	  0xcf6 => ['S>D'],
  	  0xd23 => ['<'],
  	  0xd39 => ['1+'],
  	  0xd43 => ['1-'],
  	  0xd4d => ['2+'],
  	  0xd57 => ['2-'],
  	  0xd61 => ['SYSVAR: push $0806'],
  	  0xd65 => ['SYSVAR: push $0808'],
 	  0xd69 => ['SYSVAR: push $080A'],
 	  0xd6d => ['SYSVAR: push $080C'],
 	  0xd71 => ['SYSVAR: push $080E'],
 	  0xd75 => ['SYSVAR: push $0810'],
 	  0xd79 => ['PAD var'],
 	  0xd7d => ['SYSVAR: push $0814'],
 	  0xd81 => ['SYSVAR: push $0816'],
 	  0xd85 => ['SYSVAR: push $0818'],
 	  0xd89 => ['SYSVAR: push $081A'],
 	  0xd8d => ['SYSVAR: push $081C'],
 	  0xd91 => ['SYSVAR: push $081E'],
 	  0xd95 => ['SYSVAR: push $0820'],
 	  0xd99 => ['SYSVAR: push $0822'],
 	  0xd9d => ['SYSVAR: push $0824'],
 	  0xda1 => ['BASE'],
 	  0xda5 => ['SYSVAR: push $0828'],
 	  0xda9 => ['SYSVAR: push $082A'],
 	  0xdad => ['SYSVAR: push $082C'],
 	  0xdb1 => ['SYSVAR: push $082E'],
 	  0xdb5 => ['HLD'],
 	  0xdb9 => ['GLOBVAR: push $0DBA'],
 	  0xdbd => ['GLOBVAR: push $0DBF'],
 	  0xdc1 => ['lastErr'],
 	  0xdc5 => ['push $0400'],
 	  0xdc9 => ['push 4'],
 	  0xdcd => ['push 1'],
 	  0xdd9 => ['push 0'],
 	  0xde1 => ['push 1'],
 	  0xde8 => ['push 2'],
 	  0xdef => ['push 3'],
 	  0xdf3 => ['push 4'],
 	  0xdf7 => ['push 8'],
 	  0xdfb => ['BL (push $20)'],
 	  0xe00 => ['push $40'],
 	  0xe04 => ['push $28 (screen width)'],
 	  0xe08 => ['store stk+4 into 0820'],
 	  0xe2c => ['='],
 	  0xe3d => ['>'],
 	  0xe45 => ['FILL'],
 	  0xe6b => ['<U'],
 	  0xe81 => ['?DUP'],
 	  0xe8d => ['ABS?'],
 	  0xe99 => ['ABS'],
 	  0xea1 => ['MIN'],
 	  0xeb1 => ['MAX'],
 	  0xec1 => ['DECIMAL'],
 	  0xecd => ['add 0880'],
 	  0xed7 => ['2-'],
 	  0xedf => ['COUNT'],
 	  0xeeb => ['push PAD + 10'],
 	  0xef7 => ['#>'],
 	  0xf09 => ['HOLD'],
 	  0xf1b => ['SIGN'],
 	  0xf2d => ['store 0 in $102B'],
 	  0xf35 => ['PAD'],
 	  0xf3d => ['D/MOD2'],
 	  0xf53 => ['#'],
 	  0xf79 => ['#S'],
 	  0xf89 => ['<#'],
 	  0xf93 => ['DABS?'],
 	  0xf9f => ['DABS'],
 	  0xfa7 => ['D/MOD (n1 n2 n3 -- r q)'],
 	  0xfc9 => ['/MOD (n1 n2 -- r q)'],
 	  0xfd5 => ['/ (n1 n2 -- q)'],
 	  0xfdf => ['* (n1 n2 -- n3 n4)'],
 	  0xff5 => ['*/MOD (n1 n2 n3 -- r q)'],
 	  0x1001 => ['*/ (n1 n2 n3 -- q)'],
 	  0x101b => ['MOD (n1 n2 -- r)'],
 	  0x1023 => ['2NOP'],
 	  0x1029 => ['VAR $102B'],
 	  0x102d => ['2NOP'],
 	  0x1033 => ['3NOP'],
 	  0x1039 => ['push 1'],
 	  0x103d => ['push 0'],
 	  0x1041 => ['2*'],
 	  0x104a => ['2/'],
 	  0x1059 => ['NOP'],
 	  0x105d => ['2ROT'],
 	  0x1069 => ['2DUP'],
 	  0x1078 => ['2DROP'],
 	  0x1081 => ['>='],
 	  0x1089 => ['<>'],
 	  0x1091 => ['<='],
 	  0x1099 => ['0>'],
 	  0x10ad => ['HIBYTE'],
 	  0x10b9 => ['LOBYTE'],
 	  0x10c6 => ['0!'],
 	  0x10d1 => ['1!'],
 	  0x10de => ['1+!'],
 	  0x111e => ['CMOVE>'],
 	  0x11a8 => ['READST'],
 	  0x11b0 => ['MACHINE'],
 	  0x1206 => ['OPEN'],
 	  0x1214 => ['SETNAM'],
 	  0x121c => ['SETLFS'],
 	  0x1224 => ['CLOSE'],
 	  0x1236 => ['IGNOREERROR'],
 	  0x123c => ['CHKOUT'],
 	  0x1249 => ['STATUSOK?'],
 	  0x125e => ['CHROUT'],
 	  0x1268 => ['CHROUT until READST not short block err'],
 	  0x127a => ['GETIN'],
 	  0x1286 => ['VAR $1288'],
 	  0x128a => ['retry CHROUT after CHKOUT'],
 	  0x12b0 => ['push $02A8 (# sectors/disk)'],
 	  0x12b4 => ['push $0100'],
 	  0x12b8 => ['currentDrive'],
 	  0x12bc => ['VAR $12be'],
 	  0x12c0 => ['push addr of "#"'],
 	  0x12c4 => ['set lastErr from stk; zero 1594 if lastErr not 0'],
 	  0x12d6 => ['set lastErr if stk.hi not zero'],
 	  0x12ec => ['resetFiles (open 4,15)'],
 	  0x1318 => ['closeFiles (4,15)'],
 	  0x137b => ['GETDISKERROR'],
 	  0x139c => ['send string to disk cmd channel'],
 	  0x13be => ['var DISKBUFSIZE'],
 	  0x13c1 => ['WRITEBLOCK'],
 	  0x13e1 => ['READBLOCK'],
 	  0x1408 => ['/MOD'],
 	  0x1431 => ['push 2'],
 	  0x1435 => ['ABS2TS (abs -- t s)'],
 	  0x14b9 => ['push addr of "U2:4,0,TT,SS"'],
 	  0x14bd => ['cvt decimal # 00-99 to two ASCII digits'],
 	  0x14d5 => ['SETUPUCMD'],
 	  0x1520 => ['push addr of "B-P:4,0"'],
 	  0x1524 => ['send "B-P:4,0" to cmd chan on current drive'],
 	  0x1530 => ['send U1 cmd for abs sector read to disk cmd chan'],
 	  0x153c => ['send U2 cmd for abs sector write to disk cmd chan'],
 	  0x1548 => ['READSECTOR'],
 	  0x1574 => ['WRITESECTOR'],
 	  0x1592 => ['VAR $1594'],
 	  0x1596 => ['set $1594 to zero'],
 	  0x159e => ['push addr of "I"'],
 	  0x15a2 => ['INITDRIVES'],
 	  0x1626 => ['RWSECTORS (addr start count rw --)'],
 	  0x166a => ['RWSECTORS (addr start count rw --)'],
 	  0x1670 => ['RW4SECTORS (addr start rw --)'],
 	  0x1688 => ['RW4SECTORSE (addr start rw --)'], 
 	  0x16ac => ['push addr of str+len "N0:SS,EA"'],
 	  0x16b7 => ['FORMATDISK'],
 	  0x16d9 => ['VAR $16DA'],
 	  0x16dd => ['VAR mask for KBCHRIN'],
 	  0x16e4 => ['push addr of default (textmode) colors'],
 	  0x16e8 => ['SETCOLORS'],
 	  0x170e => ['KEY'],
 	  0x1730 => ['KBCHRIN'],
 	  0x1746 => ['KEYMASKED'],
 	  0x1752 => ['STOP?'],
 	  0x1767 => ['CHRINSTR'],
 	  0x17ef => ['INITIRQVECTORS'],
 	  0x1813 => ['KERNELOFF'],
 	  0x1834 => ['MAIN'],
 	  0x186a => ['0='],
 	  0x1870 => ['ON STK GOTO next Nth word'],
 	  0x1872 => ['ON STK GOTO next Nth word'],
 	  0x188a => ['@'],
 	  0x18a6 => ['C+!'],
 	  0x18b2 => ['push 4'],
 	  0x18b6 => ['push $10'],
 	  0x18ba => ['push 8'],
 	  0x18be => ['push 8'],
 	  0x18c2 => ['push $14'],
 	  0x18c6 => ['push $25 (single quote)'],
 	  0x18ca => ['push $22 (double quote)'],
 	  0x18ce => ['push $80'],
          0x18d2 => ['push 15'],
          0x18d6 => ['push 10'],
          0x18da => ['push 4'],
          0x18de => ['push $80'],
          0x18e2 => ['push $0500'],
          0x18e6 => ['push 5'],
          0x18ea => ['push $0C00'],
          0x18ee => ['push $1000'],
          0x18f2 => ['push 15'],
          0x18f6 => ['push $50'],
          0x18fa => ['push $21'],
          0x18fe => ['push 14'],
          0x1902 => ['push $0400'],
          0x1906 => ['push 4'],
          0x190a => ['push 12'],
          0x190e => ['push $19'],
          0x1912 => ['push 6'],
          0x1916 => ['push $50'],
          0x191a => ['push $78'],
          0x191e => ['push $28'],
          0x1922 => ['push 8'],
          0x1926 => ['push 8'],
          0x192a => ['push $FE'],
          0x192e => ['push $0100'],
          0x1932 => ['push $20'],
          0x1936 => ['push $40'],
          0x193a => ['push $0580'],
          0x193e => ['push 10'],
          0x1942 => ['push $0474'],
          0x1946 => ['push $036F'],
          0x194a => ['push $A7'],
          0x194e => ['push 2'],
          0x1952 => ['push 1'],
          0x1956 => ['push $0287  (base sector of gfx data)'],
          0x195a => ['push $01C7  (base sector of region data)'],
       	  0x195e => ['push $01C6 (sector # of adv disk sig)'],
          0x1962 => ['push $01C2'],
          0x1966 => ['push $01BD'],
          0x196a => ['push $01B8'],
          0x196e => ['push $01B2'],
          0x1972 => ['push $01AC'],
          0x1976 => ['push $01AA'],
          0x197a => ['push $0194'],
          0x197e => ['push $0193'],
          0x1982 => ['push $016B'],
          0x1986 => ['push $6C'],
          0x198a => ['push $60'],
          0x198e => ['push $55'],
          0x1992 => ['push $4B'],
          0x1996 => ['push $1B'],
          0x199a => ['push $18'],
          0x199e => ['push $15'],
          0x19a2 => ['push $0137'],
          0x19a6 => ['push $0128'],
          0x19aa => ['push $0119'],
          0x19ae => ['push $010A'],
          0x19b2 => ['push $D4'],
 	  0x19b6 => ['calculate sector # for region stk (stk*12+$01C7)'],
          0x19c4 => ['push $01C7'],
          0x19c8 => ['push $01C9'],
          0x19cc => ['push $E000  (region data area)'],
          0x19d0 => ['push $EC00'],
          0x19d4 => ['push $F100'],
          0x19d8 => ['push $F574'],
          0x19dc => ['push $F8E3'],
          0x19e0 => ['push $FE63'],
          0x19e4 => ['push $FFF5 (addr of disk signature)'],
          0x19e8 => ['push $FFCD'],
          0x19ec => ['push $FF55'],
          0x19f0 => ['push $FF15'],
          0x19f4 => ['push $0400'],
          0x19f8 => ['push $0340  (sprites 0-2 data area)'],
          0x19fc => ['push $2600  (disk buffer)'],
          0x1a00 => ['push $2700  (sprites 3-6 data area)'],
          0x1a04 => ['push $2800  (custom charset for game gfx)'],
          0x1a08 => ['push $CC18'],
 	  0x1a0c => ['stk = stk - 1 + $6C'],
 	  0x1a16 => ['if lastfile="D" then push F8E3 else CC18'],
          0x1a30 => ['push $FCCB'],
          0x1a34 => ['push $FE63'],
          0x1a38 => ['push $FE78'],
          0x1a3c => ['push $FE77'],
          0x1a40 => ['push $3780  (gfx bg colors 0-2 and 3rd color'],
          0x1a44 => ['push $3788'],
          0x1a48 => ['push $3798'],
          0x1a4c => ['push $37C0  (sprite 7 data area)'],
          0x1a50 => ['push $2600'],
          0x1a54 => ['push $F8E3'],
          0x1a58 => ['push $3789'],
          0x1a5c => ['push VAR $1A5E (menu stk ptr)'],
          0x1a60 => ['push $F574  (adventure title)'],
          0x1a64 => ['push $F588  (adventure byline)'],
          0x1a68 => ['push $F59C'],
          0x1a6c => ['push $F59D  (number of regions)'],
          0x1a70 => ['push $F59F'],
          0x1a74 => ['push $F633'],
          0x1a78 => ['push $F65B'],
          0x1a7c => ['push $F65D'],
          0x1a80 => ['push $F65F'],
          0x1a84 => ['push $F79F'],
          0x1a88 => ['push $F7A0'],
          0x1a8c => ['push $F7A1  (region names)'],
          0x1a90 => ['push $F8E1'],
          0x1a94 => ['push $F8E2  (theme music: fant, spy, sci-fi)'],
          0x1a98 => ['push $F79F'],
          0x1a9c => ['push $E000'],
          0x1aa0 => ['push $E020'],
          0x1aa4 => ['push $E0A0'],
          0x1aa8 => ['push $E0A2'],
          0x1aac => ['push $E0AA'],
          0x1ab0 => ['push $E0EA'],
          0x1ab4 => ['push $E40A'],
          0x1ab8 => ['push $E532'],
          0x1abc => ['push $E65A'],
          0x1ac0 => ['push $E662'],
          0x1ac4 => ['push $E752'],
          0x1ac8 => ['push $E7F2'],
          0x1acc => ['push $E806'],
          0x1ad0 => ['push $E80E'],
          0x1ad4 => ['push $E810'],
          0x1ad8 => ['push $0832'],
          0x1adc => ['push $F100'],
          0x1ae0 => ['push $F300'],
          0x1ae4 => ['push $F400'],
          0x1ae8 => ['push $F480'],
          0x1aec => ['push $F482'],
          0x1af0 => ['push $F484'],
 	  0x1af4 => ['stk = ($f482) + $f484'],
          0x1b00 => ['push $EC00'],
          0x1b04 => ['push $F963'],
 	  0x1b08 => ['C@(stk + stk-1)'],
          0x1b10 => ['push 7'],
          0x1b14 => ['push 15'],
          0x1b18 => ['push $10'],
          0x1b1c => ['push $1F'],
          0x1b20 => ['push 5'],
          0x1b24 => ['push 6'],
          0x1b28 => ['push $20'],
          0x1b2c => ['push $3F'],
          0x1b30 => ['push $40'],
          0x1b34 => ['push $7F'],
          0x1b38 => ['push $80'],
          0x1b3c => ['push $FF'],
          0x1b40 => ['push $C0'],
          0x1b44 => ['push $28'],
          0x1b48 => ['push $50'],
          0x1b4c => ['push $F0'],
          0x1b50 => ['push $A0'],
          0x1b54 => ['push $0320'],
 	  0x1b58 => ['1='],
 	  0x1b60 => ['2='],
 	  0x1b68 => ['3+'],
 	  0x1b7a => ['BETWEEN'],
 	  0x1b8e => ['1AND'],
 	  0x1b96 => ['3F-AND'],
 	  0x1b9e => ['7F-AND'],
 	  0x1ba6 => ['3AND'],
 	  0x1bae => ['7AND'],
 	  0x1bb6 => ['1F-AND'],
 	  0x1bbe => ['1+-DUP'],
 	  0x1bc6 => ['=-OR'],
 	  0x1bce => ['*+'],
 	  0x1bd6 => ['0MAX'],
 	  0x1bde => ['FILLSPACES (addr len --)'],
 	  0x1be6 => ['ROTROT'],
 	  0x1bee => ['C>>7'],
 	  0x1c01 => ['C>>6'],
 	  0x1c06 => ['C>>5'],
 	  0x1c0b => ['C>>4'],
 	  0x1c10 => ['C>>3'],
 	  0x1c15 => ['C>>2'],
 	  0x1c1a => ['C-0F-AND'],
 	  0x1c25 => ['C<<7'],
 	  0x1c38 => ['C<<6'],
 	  0x1c3d => ['C<<5'],
 	  0x1c42 => ['C<<4'],
 	  0x1c47 => ['C<<3'],
 	  0x1c4c => ['C<<2'],
 	  0x1c51 => ['SGN'],
 	  0x1c6b => ['set $3978, then wait till it becomes zero'],
 	  0x1c7d => ['-TRAILING'],
 	  0x1ca7 => ['+MOD (n1 n2 -- n3) n3=(n1+n2) MOD n2'],
 	  0x1cb5 => ['MOD-40'],
 	  0x1cbd => ['GET-ARRAY-ELEMENT (idx addr -- val)'],
 	  0x1ccb => ['RANDOM'],
 	  0x1cf0 => ['(n -- r) r = RANDOM/($100/n) must be < n'],
 	  0x1d12 => ['rnd/($100/stk) if stk not zero'],
 	  0x1d1e => ['rnd/($100/$64)'],
 	  0x1d28 => ['SETBITS (bits addr mask --)'],
 	  0x1d3a => ['SET-F0-BITS (bits addr --)'],
 	  0x1d44 => ['SET-E0-BITS (bits addr --)'],
 	  0x1d4e => ['SET-C0-BITS (bits addr --)'],
 	  0x1d56 => ['SET-80-BITS (bits addr --)'],
 	  0x1d5e => ['SET-7F-BITS (bits addr --)'],
 	  0x1d6e => ['SET-3F-BITS (bits addr --)'],
 	  0x1d7e => ['SET-1F-BITS (bits addr --)'],
 	  0x1d8e => ['SET-0F-BITS (bits addr --)'],
 	  0x1d9e => ['ZEROFILL'],
 	  0x1da6 => ['SWAPMEM'],
 	  0x1dbe => ['CSWAPMEM'],
 	  0x1dd6 => ['C+!'],
 	  0x1de6 => ['C0!'],
 	  0x1df0 => ['constrain stk to between $00 and $1F'],
 	  0x1dfa => ['constrain stk to between $00 and $3F'],
 	  0x1e04 => ['constrain stk to between $00 and $0F'],
 	  0x1e0e => ['constrain stk to between $00 and $7F'],
 	  0x1e18 => ['constrain stk to between $00 and $03'],
 	  0x1e22 => ['/MOD (n1 n2 -- n1MODn2 n1/n2)'],
          0x1e30 => ['push $0640'],
       	  0x1e34 => ['fetch byte from table (idx -- val)'],
       	  0x1e5d => ['convert screen code to ACS char code (s -- c)'],
       	  0x1e7f => ['convert ACS char code to screen code (c -- s)'],
 	  0x1e77 => ['fetch byte from table (idx -- val)'],
 	  0x1ecb => ['pack 3 scrnchars @a2 into 1 word @a1 (a1 a2 --)'],
 	  0x1ef9 => ['convert scrnchrs @$3789-97 to packed ACSchrs @stk'],
 	  0x1f15 => ['unpack 3 scrchrs from word @a1 to @a2 (a1 a2 --)'],
 	  0x1f3b => ['convert acschars at stk to ctstr in $3788'],
 	  0x1f63 => ['SOUNDOFF'],
 	  0x1f71 => ['push addr of VAR PRGFILENAME'],
       	  0x1f78 => ['push VAR $1F77 (letter of prg to load)'],
 	  0x1f7c => ['LOAD stk,8,9'],
 	  0x1f9e => ['push VAR $1FA0 (1 = "B" loaded, 2="R"&"C")'],
 	  0x1fa2 => ['push VAR $1FA4 ("O","S" loaded?)'],
 	  0x1fa6 => ['load "O", "S" if not already loaded'],
          0x1fb6 => ['push $0362'],
 	  0x1fe6 => ['LOAD "G",8,9'],
 	  0x1ff0 => ['load program files to make an adv disk (B,O,S)'],
 	  0x200e => ['load "O", "S" and mark as loaded'],
 	  0x2022 => ['load "C","O","R","S" if not loaded'],
 	  0x2048 => ['NOP'],
 	  0x204c => ['NOP'],
 	  0x2050 => ['push $FFD5 (LOAD)'],
 	  0x2054 => ['LOAD PRGFILENAME,8,9'],
 	  0x2074 => ['load "F" (and "R" if necessary)'],
 	  0x2096 => ['load program files needed to play an adventure'],
 	  0x20c0 => ['load, init sound driver if not loaded'],
 	  0x20d0 => ['copy an adventure disk (changing prompts)'],
 	  0x20da => ['change "DISK" in "YOUR ADVENTURE DISK"'],
 	  0x20f0 => ['change reqstr to "YOUR ADVENTURE COPY"'],
 	  0x20fa => ['change reqstr to "YOUR ADVENTURE DISK"'],
 	  0x2116 => ['copy an adventure disk?'],
 	  0x2167 => ['push $00AE'],
 	  0x2219 => ['request a new adv disk if current sig zero'],
 	  0x2227 => ['print drastic changes warning'],
 	  0x2299 => ['load and init sound driver'],
 	  0x22ab => ['INITSOUND'],
 	  0x22b7 => ['decrypt music code'],
 	  0x22f5 => ['print new adv disk prompt, wait for button'],
 	  0x2372 => ['request a new adventure disk for copying'],
 	  0x23f2 => ['print "THIS IS THE MAIN ACS DISK!", buttonwait'],
 	  0x241b => ['print "FORMATTING THE DISK, PLEASE WAIT"'],
 	  0x2455 => ['print "ALREADY HAS AN ADVENTURE ON IT", button'],
 	  0x24c6 => ['verify drastic changes (return true if OK)'],
 	  0x24f4 => ['cart cold/warm start routine'],
 	  0x251c => ['copy cart vectors/sig to $8000'],
          0x2575 => ['push $2D'],
       	  0x2579 => ['BL (push $20)'],
 	  0x257d => ['push addr of VAR SCREENPOS ($257F)'],
 	  0x2581 => ['get current screen position'],
 	  0x2589 => ['push VAR $258B (=$2600)'],
 	  0x258d => ['fetch VAR $258B (=$2600)'],
          0x2595 => ['push $D000  (sprite X pos LSB)'],
          0x2599 => ['push $D001  (sprite Y pos)'],
          0x259d => ['push $D010  (sprite X pos MSB)'],
          0x25a1 => ['push $D021  (bg color)'],
          0x25a5 => ['push $D027  (sprite color)'],
          0x25a9 => ['push $D015  (sprite enable)'],
          0x25ad => ['push $07F8  (sprite data ptr)'],
          0x25b1 => ['push $D016  (VIC test, scrollx, mclr, 38/40)'],
          0x25b5 => ['push $D01C  (sprite multicolor mode)'],
          0x25b9 => ['push $D01D  (sprite X expand)'],
          0x25bd => ['push $D017  (sprite Y expand)'],
          0x25c1 => ['push $D800  (color memory)'],
          0x25c5 => ['push $D011  (VIC extcol, bitmap, 24/25, scrolly)'],
          0x25c9 => ['push $D01B  (sprite/bg display priority)'],
          0x25cd => ['push $0286  (current fg color)'],
          0x25d1 => ['push $D025  (spr multicolor color regs'],
          0x25d5 => ['push VAR $25D7'],
          0x25d9 => ['store VAR $25D7'],
          0x25e1 => ['fetch VAR $25D7'],
          0x25e9 => ['push CVAR $25EB'],
          0x25ec => ['store CVAR $25EB'],
          0x25f4 => ['fetch CVAR $25EB'],
          0x3800 => ['store VAR $FF15'],
          0x3808 => ['push $FF17'],
          0x380c => ['fetch VAR $FF15'],
          0x3814 => ['push VAR $3816'],
          0x3818 => ['store VAR $3816'],
          0x3820 => ['fetch VAR $3816'],
          0x3828 => ['push VAR $382A'],
          0x382c => ['store VAR $382A'],
          0x3834 => ['fetch VAR $382A'],
          0x383c => ['push VAR $383E'],
          0x3840 => ['store VAR $383E'],
          0x3848 => ['fetch VAR $383E'],
          0x3850 => ['push VAR $3852 (ptr)'],
          0x3854 => ['store VAR $3852'],
          0x385c => ['fetch VAR $3852'],
          0x3864 => ['push VAR $3866'],
          0x3868 => ['store VAR $3866'],
          0x3870 => ['fetch VAR $3866'],
          0x3878 => ['push CVAR $387A'],
          0x387b => ['store CVAR $387A'],
          0x3883 => ['fetch CVAR $387A'],
          0x388b => ['push CVAR $388D'],
          0x388e => ['store CVAR $388D'],
          0x3896 => ['fetch CVAR $388D'],
          0x389e => ['push VAR $38A0'],
          0x38a2 => ['store VAR $38A0'],
          0x38aa => ['fetch VAR $38A0'],
          0x38b2 => ['push CVAR $38B4'],
          0x38b5 => ['store CVAR $38B4'],
          0x38bd => ['fetch CVAR $38B4'],
          0x38c5 => ['push VAR $38C7'],
          0x38c9 => ['store VAR $38C7'],
          0x38d1 => ['fetch VAR $38C7'],
          0x38d9 => ['push CVAR $38DB'],
          0x38dc => ['store CVAR $38DB'],
          0x38e4 => ['fetch CVAR $38DB'],
          0x38ec => ['push VAR $38EE'],
          0x38f0 => ['store VAR $38EE'],
          0x38f8 => ['fetch VAR $38EE'],
          0x3900 => ['push VAR $3902'],
          0x3904 => ['store VAR $3902'],
          0x390c => ['fetch VAR $3902'],
          0x3914 => ['push VAR $3916'],
          0x3918 => ['store VAR $3916'],
          0x3920 => ['fetch VAR $3916'],
          0x3928 => ['push VAR $392A'],
          0x392c => ['store VAR $392A'],
          0x3934 => ['fetch VAR $392A'],
          0x393c => ['push VAR $393E'],
          0x3940 => ['store VAR $393E'],
          0x3948 => ['fetch VAR $393E'],
          0x3950 => ['push CVAR $3952'],
          0x3953 => ['store CVAR $3952'],
          0x395b => ['fetch CVAR $3952'],
          0x3963 => ['push CVAR $3965  (playing=1/constructing=0)'],
          0x3966 => ['store CVAR $3965  (playing=1/constructing=0)'],
          0x396e => ['fetch CVAR $3965  (playing=1/constructing=0)'],
          0x3976 => ['push VAR $3978'],
          0x397a => ['push VAR $397C  (current region)'],
          0x397e => ['fetch VAR $397C  (current region)'],
          0x3986 => ['store VAR $397C  (current region)'],
       	  0x398e => ['push VAR $3990 (RWFLAG)'],
 	  0x3992 => ['fetch VAR $3990 (RWFLAG)'],
 	  0x399a => ['set RWFLAG to read (1)'],
 	  0x39a2 => ['set RWFLAG to write (0)'],
          0x39aa => ['push CVAR $39AC'],
          0x39ad => ['store CVAR $39AC'],
          0x39b5 => ['fetch CVAR $39AC'],
          0x39bd => ['push CVAR $39BF'],
          0x39c0 => ['store CVAR $39BF'],
          0x39c8 => ['fetch CVAR $39BF'],
          0x39d0 => ['push CVAR $39D2 (gfx dirty)'],
          0x39d3 => ['store CVAR $39D2 (gfx dirty)'],
          0x39db => ['fetch CVAR $39D2 (gfx dirty)'],
          0x39e3 => ['push CVAR $39E5'],
          0x39e6 => ['store CVAR $39E5'],
          0x39ee => ['fetch CVAR $39E5'],
          0x39f6 => ['push CVAR $39F8'],
          0x39f9 => ['store CVAR $39F8'],
          0x3a01 => ['fetch CVAR $39F8'],
          0x3a09 => ['push VAR $3A0B'],
          0x3a0d => ['push VAR $3A0F'],
          0x3a11 => ['push VAR $3A13'],
          0x3a15 => ['store VAR $3A0B'],
          0x3a1d => ['store VAR $3A0F'],
          0x3a25 => ['fetch VAR $3A0B'],
          0x3a2d => ['fetch VAR $3A0F'],
          0x3a35 => ['push VAR $3A37'],
          0x3a39 => ['store VAR $3A37'],
          0x3a41 => ['fetch VAR $3A37'],
          0x3a49 => ['push VAR $3A4B'],
          0x3a4d => ['store VAR $3A4B'],
          0x3a55 => ['fetch VAR $3A4B'],
          0x3a5d => ['push VAR $3A5F (array of raw joystick data)'],
          0x3a61 => ['push VAR $3A63 (keypressflag)'],
          0x3a65 => ['fetch VAR $3A63 (keypressflag)'],
          0x3a6d => ['set VAR $3A63 (keypressflag) to 1'],
          0x3a75 => ['set VAR $3A63 (keypressflag) to 0'],
 	  0x3a7d => ['push addr of VAR MUSICFLAG ($3A7F)'],
          0x3a81 => ['push $23'],
          0x3a85 => ['push $10'],
          0x3a89 => ['push 2'],
          0x3a8d => ['push 1'],
          0x3a91 => ['push 7'],
          0x3a95 => ['push 3'],
          0x3a99 => ['push 0'],
          0x3a9d => ['push 1'],
          0x3aa1 => ['push 2'],
          0x3aa5 => ['push 3'],
          0x3aa9 => ['push 4'],
          0x3aad => ['push 5'],
          0x3ab1 => ['push 6'],
          0x3ab5 => ['push 7'],
          0x3ab9 => ['push 8'],
          0x3abd => ['push 9'],
          0x3ac1 => ['push 10'],
          0x3ac5 => ['push 11'],
          0x3ac9 => ['push 12'],
          0x3acd => ['push $51'],
          0x3ad1 => ['push $52'],
          0x3ad5 => ['push $80'],
          0x3ad9 => ['push $53'],
          0x3add => ['push $50'],
          0x3ae1 => ['push $7F'],
          0x3ae5 => ['push $54'],
          0x3ae9 => ['GETJOYVAL (joy# -- value)'],
          0x3b15 => ['?BUTTON (joy# -- f)'],
          0x3b1f => ['?BUTTON for current joystick (-- f)'],
          0x3b37 => ['wait for button release'],
          0x3b43 => ['convert joy axis bits to delta'],
          0x3b57 => ['get axis values for current joy (-- dx dy)'],
          0x3b6b => ['curent joystick centered? (-- f)'],
          0x3b75 => ['wait for current joystick to be centered'],
          0x3b7f => ['fetch value of DELKEY ($20)'],
          0x3b8b => ['GETIN until A = CR, DEL, or $20-$5D'],
          0x3bb3 => ['wait for button to be pressed and released'],
          0x3bbf => ['wait for curjoy to be centered, button up'],
          0x3bcd => ['return 1 if button pressed, 0 if stick moved'],
          0x3bf5 => ['get current joystick #'],
          0x3c09 => ['GETIN'],
          0x3c32 => ['push $1E'],
          0x3c36 => ['push 4'],
          0x3c3a => ['push 5'],
          0x3c3e => ['push VAR $3C40'],
          0x3cc8 => ['read curjoy; return 1up, 2rt, 3dn, 4lf, else 0'],
          0x3d18 => ['wait for joymove; return 1up, 2rt, 3dn, 4lf'],
          0x3d28 => ['start playing song on stk'],
          0x3d36 => ['start playing song on stk if music mod loaded'],
          0x3d4c => ['push $0169 (disk sig of ADV DISK)'],
          0x3d50 => ['push $07C0 (disk sig of ACS FRONT)'],
          0x3d54 => ['push $029A (disk sig of ACS BACK)'],
          0x3d58 => ['push VAR $3D5A (current adv disk sig)'],
          0x3d5e => ['fetch VAR $3D5A (current adv disk sig)'],
          0x3d66 => ['push VAR $3D68 (source adv disk sig)'],
          0x3d6a => ['fetch VAR $3D68 (source adv disk sig)'],
          0x3d72 => ['clear VAR $3D68 (source adv disk sig)'],
          0x3d7a => ['clear VAR $3D5A (current adv disk sig)'],
          0x3d82 => ['ON STK push sig of ACSF, curadv, ACSB, srcadv'],
          0x3d8e => ['push VAR $3D90'],
          0x3d92 => ['push VAR $3D94 (idx of disk needed)'],
          0x3d96 => ['push VAR $3D98 (idx of disk in drive)'],
          0x3d9a => ['set VAR $3D94 (DISKREQ) to 1 (current adv)'],
          0x3da2 => ['set VAR $3D94 (DISKREQ) to 0 (ACS FRONT)'],
          0x3daa => ['set VAR $3D94 (DISKREQ) to 2 (ACS BACK)'],
          0x3db4 => ['set VAR $3D94 (DISKREQ) from VAR $3D90'],
          0x3dc0 => ['read/write one abs sector (addr(wronly) abs --)'],
          0x3de8 => ['create random adv disk sig and write to disk'],
          0x3e2a => ['ON STK push addr of disk request string'],
          0x3e36 => ['count string "THE ACS DISK (RIGHT SIDE UP)"'],
          0x3e53 => ['count string "YOUR ADVENTURE DISK"'],
          0x3e67 => ['count string "THE ACS DISK, TURNED UPSIDE DOWN,"'],
          0x3e89 => ['count string "THE DISK FROM WHICH TO COPY"'],
       	  0x3ea5 => ['print "TROUBLE", wait for button, reinit'],
       	  0x3f0c => ['return true if sig on stk matches DISKREQ'],
       	  0x3f30 => ['establish a sig for src disk (return true if OK)'],
       	  0x3f66 => ['read disk sig to $FFF5 and return 1st word'],
       	  0x3f8a => ['get 2nd word of disk signature'],
       	  0x3fe4 => ['read sig from disk, return true if == DISKREQ'],
       	  0x4018 => ['read/write abs sector with retry/prompts'],
       	  0x4032 => ['r/w stk bytes from sector stk-1 to mem @stk-2'],
       	  0x409e => ['print "THIS IS NOT AN ACS ADVENTURE DISK."'],
 	  0x40d1 => ['PRINT "put " diskreq "in the drive":buttonPause'],
 	  0x410f => ['r/w bytes from disk (addr sector len --)'],
 	  0x415d => ['check disk sig, prompt until DISKREQ matches'],
 	  0x416f => ['save screen and go back to nonsplit mode'],
 	  0x4177 => ['go back to split mode, restore screen'],
 	  0x41a9 => ['read or write gfx data to disk'],
 	  0x41c9 => ['read data for current region into $E000-$EBFF'],
 	  0x41d9 => ['write current region data from $E000'],
 	  0x41fb => ['read or write current region to/from $E000'],
 	  0x420d => ['read or write gfx data if dirty'],
 	  0x4219 => ['load or save parts of adv as needed'],
 	  0x4257 => ['load an adventure'],
 	  0x427b => ['load an adventure from current adv disk'],
 	  0x42bb => ['menu item: save your work and continue'],
 	  0x4303 => ['save, clear msg window'],
 	  0x4315 => ['restore msg window'],
 	  0x4325 => ['push VAR $4328 (pos/ctstrs "NOT MADE ADVDISK")'],
 	  0x4387 => ['prompt for adv disk, or print "f1 to make" (-- f)'],
 	  0x43ef => ['convert ASCII digit to screen code'],
 	  0x4405 => ['convert ASCII numstring @(stk) to screen codes'],
 	  0x4427 => ['convert # to screen code string (n -- addr)'],
 	  0x4447 => ['move cursor to R20,C(stk)'],
 	  0x4451 => ['move cursor to R21,C(stk)'],
 	  0x445b => ['move cursor to R22,C(stk)'],
 	  0x4465 => ['move cursor to R23,C(stk)'],
 	  0x446f => ['move cursor to R24,C(stk)'],
 	  0x4479 => ['write stk spaces at current screen position'],
 	  0x4483 => ['move cursor to R22,C0 and clear 3 lines'],
 	  0x4491 => ['move cursor to R21,C0 and clear 4 lines'],
 	  0x449d => ['move cursor to R20,C0 and clear 5 lines'],
 	  0x44ab => ['print "\'S "'],
 	  0x44b5 => ['convert column/row to screen addr (c r -- addr)'],
 	  0x44c1 => ['convert row/column to screen addr (r c -- addr)'],
 	  0x44c9 => ['put block of 4 chars at row/col (char c r --)'],
 	  0x44d7 => ['put block of 4 chars at addr (char addr --)'],
 	  0x4501 => ['copy 20 bytes from stk to current screen pos'],
 	  0x450d => ['print strings at stk (r c len str ... $FF)'],
 	  0x453d => ['save screen contents in $F8E3 or $CC18'],
 	  0x454b => ['restore screen contents from $F8E3 or $CC18'],
 	  0x4561 => ['pluralize last thing printed (add "S" or "ES")'],
 	  0x457d => ['print ctstr to screen at addr (ctstr addr --)'],
 	  0x458b => ['print ctstr to screen at row/col (ctstr r c --)'],
 	  0x4593 => ['print string at scrpos, update pos (addr len --)'],
 	  0x45a5 => ['print ctstr at screenpos, update screenpos'],
 	  0x45ad => ['print number right justified (n width --)'],
 	  0x45c7 => ['clear screen/colormem, set bg/border colors'],
 	  0x45eb => ['push VAR $45ED (current border color)'],
 	  0x45ee => ['print inline ctstr ("%s")', "ics"],
 	  0x4602 => ['print number (n --)'],
 	  0x460a => ['move cursor to (c r --)'],
 	  0x4614 => ['print "PRESS BUTTON TO CONTINUE."'],
 	  0x4634 => ['print "PRESS BUTTON TO CONTINUE." @24,5'],
 	  0x463e => ['print "PRESS BUTTON" and wait for button press'],
 	  0x466c => ['print "."'],
 	  0x4648 => ['wait for func key press; return fkey idx (0-3)'],
 	  0x4674 => ['print adventure title'],
 	  0x4680 => ['print adventure byline'],
 	  0x4698 => ['print "TYPE NAME AND THEN PRESS BUTTON."'],
 	  0x46bf => ['print "TYPE NAME AND THEN PRESS BUTTON." @22,2'],
 	  0x46c9 => ['reverse video n chars at screenpos (n --)'],
 	  0x46e9 => ['reverse off n chars at screenpos (n --)'],
 	  0x4707 => ['print "ADVENTURE CONSTRUCTION SET" @0,7'],
 	  0x4736 => ['return 2^stk'],
 	  0x4742 => ['turn on bits in byte at addr (bits addr --)'],
 	  0x4752 => ['turn off bits in byte at addr (bits addr --)'],
 	  0x4766 => ['reset sprite loc, mclr, expands, pri (sprnum --)'],
 	  0x478c => ['enable sprite (sprnum --)'],
 	  0x4796 => ['get color #3 ($3783)'],
 	  0x47a0 => ['set bg0-2 to $3780-2, border to black'],
 	  0x47ca => ['enable sprite multicolor mode (sprnum --)'],
 	  0x47d4 => ['enable multicolor text/bitmap mode'],
 	  0x47e6 => ['disable multicolor text/bitmap mode'],
 	  0x47fa => ['enable sprite X expand (sprnum --)'],
 	  0x4804 => ['enable sprite Y expand (sprnum --)'],
 	  0x480e => ['set default sprite data area pointers'],
 	  0x4862 => ['get addr of data area for sprite (sprnum -- addr)'],
 	  0x4870 => ['set sprite position to x,y (x y sprnum --)'],
 	  0x48a6 => ['disable sprite (sprnum --)'],
 	  0x48b0 => ['set sprite color (color sprnum --)'],
 	  0x48ba => ['push VAR $48BC  (save for spr enable reg)'],
 	  0x48bd => ['swap $48BC with $D015 (sprite enable)'],
 	  0x48c7 => ['turn off sprites, saving spr enable in $48bc'],
 	  0x48d9 => ['restore $d015 (spr enable) from $48bc if zero'],
 	  0x48e9 => ['turn off sprites and clear save reg'],
 	  0x48f5 => ['is sprite enabled? (sprnum -- f)'],
 	  0x4901 => ['setup sprites 3-6 if not in use'],
 	  0x49c8 => ['clear kb buffer and shift flags'],
 	  0x4a07 => ['push VAR $4a09  (cursor enable(L), counter(H))'],
 	  0x4a0b => ['clear kb buffer and wait for idle keyboard'],
 	  0x4a9f => ['push VAR $4AA1  (bg color of divider bar)'],
 	  0x4ab3 => ['push VAR $4AB5'],
 	  0x4ab7 => ['push VAR $4AB9'],
 	  0x4b3a => ['install raster interrupt handlers'],
 	  0x4b62 => ['enable raster IRQ (tbladdr count --)'],
 	  0x4b72 => ['push VAR $4B74  ("normal" raster table)'],
 	  0x4b77 => ['set uc/gfx charset, screen $400, bg from $16E2'],
 	  0x4b7f => ['restore non-splitscreen mode'],
 	  0x4b95 => ['set a splitscreen mode (tbladdr count --)'],
 	  0x4ba9 => ['fill 4-block of color mem with color #3 (c r --)'],
 	  0x4bc7 => ['push VAR $4BC9  (split screen raster table)'],
 	  0x4c0b => ['set standard splitscreen mode'],
 	  0x4c17 => ['setup std splitscreen for play/room construct'],
 	  0x4c2b => ['disable raster IRQ, enable CIA1 timer IRQ'],
 	  0x4c3a => ['print "ACCESSING DISK...PLEASE WAIT" @(24,0)'], 
 	  0x4c84 => ['restore scrnpos, row 24 after "ACCESSING DISK"'],
	  0x4ca0 => ['setup color memory for play/room construction'],
	  0x4cfe => ['clear split screen (top="CCC@@...@@CCC",msg=" ")'],
	  0x4d36 => ['setup sprite 0 as cursor'],
	  0x4d56 => ['push VAR $4D58  (cursor sprite data)'],
	  0x4d7b => ['push VAR $4D7D (raster tbl: thing/creature edit)'],
	  0x4d86 => ['set thing/person/creature edit splitscreen mode'],
	  0x4d94 => ['setup screen/color mem for thing/creature edit)'],
          0x4dd6 => ['push CVAR $4DD8 (screen mode)'],
          0x4dd9 => ['fetch CVAR $4DD8 (screen mode)'],
          0x4de1 => ['store CVAR $4DD8 (screen mode)'],
          0x4de9 => ['set thing/person/creature edit splitscreen mode'],
 	  0x4df1 => ['restore nonsplit mode, clear screen, color mem'],
 	  0x4df9 => ['set screen split mode (mode --)'],
 	  0x4e09 => ['push VAR $4E0B: long message frame chars/locs'],
 	  0x4e35 => ['print long message frame'],
 	  0x4eb5 => ['display long message and wait for button'],
 	  0x4f1d => ['make and run an input field (addr len ? ? --)'],
 	  0x4f45 => ['push VAR $4F47  (scpos)'],
 	  0x4f49 => ['push VAR $4F4B  (addr)'],
 	  0x4f4d => ['push VAR $4F4F  (offset)'],
 	  0x4f51 => ['push VAR $4F53  (len)'],
 	  0x4f55 => ['push VAR $4F57'],
 	  0x4f59 => ['push VAR $4F5B'],
 	  0x4f5d => ['initialize input field variables'],
 	  0x4f7f => ['fill inputfield with "=" and destaddr with " "'],
 	  0x4f8f => ['fetch VAR $4F4F  (offset)'],
 	  0x4f97 => ['fetch VAR $4F57'],
 	  0x4f9f => ['return true if VAR $4F57 == space'],
 	  0x4fa9 => ['fill inputfield on screen with "="'],
 	  0x4fc5 => ['store stk at screenpos'],
 	  0x4fcd => ['move cursor one right'],
 	  0x4feb => ['move cursor to new location'],
 	  0x500d => ['disable cursor, unRVSing current pos'],
 	  0x5021 => ['turn off cursor and wait for idle stick'],
 	  0x5029 => ['store stk at current input field location'],
 	  0x504f => ['handle keypress while in input field'],
 	  0x50c9 => ['move cursor one left'],
 	  0x50d7 => ['delete char to left in input field'],
 	  0x5101 => ['make and run input field (addr len --)'],
 	  0x510b => ['combine nybbles to make byte (hinyb lonyb -- b)'],
 	  0x5119 => ['fetch CVAR @($25d7)'],
 	  0x5121 => ['fetch CVAR @($25d7)+1'],
 	  0x512b => ['fetch CVAR @($25d7)+2'],
 	  0x5135 => ['fetch CVAR @($25d7)+3'],
 	  0x513f => ['fetch lo nybble of CVAR @($25d7)'],
 	  0x517f => ['fetch CVAR @($3816)'],
 	  0x5187 => ['fetch CVAR @($3816)+1'],
 	  0x5191 => ['fetch CVAR @($3816)+2'],
 	  0x51c5 => ['return true if CVAR@($25d7).lo == stk'],
 	  0x51cd => ['return $EC00 + 10*(CVAR $25EB - 1)'],
 	  0x51e5 => ['return $F0FC + 4*stk'],
 	  0x520b => ['return CVAR @($3816) >>5 +2'],
 	  0x5215 => ['return CVAR @($3816) & $1F'],
 	  0x521d => ['return lo nyb of CVAR @($3816)+1'],
 	  0x5225 => ['return true if CVAR @($3816)+2 > $7F'],
 	  0x522f => ['return ((CVAR @($3816)+1)>>4 - 7) * 5'],
 	  0x523f => ['return true if CVAR @($3816)+2 bit 6 set'],
 	  0x5249 => ['return CVAR @($3816) & $1F'],
 	  0x524f => ['return ((CVAR @($3816)+1)>>4 - 7) * 5 - $1E'],
 	  0x525b => ['fetch CVAR @($25d7)+1'],
 	  0x5261 => ['return true if CVAR @($25d7) bit 5 set'],
 	  0x526b => ['return true if CVAR@($25d7).lo == 6'],
 	  0x5273 => ['return true if CVAR@($25d7).lo == 2'],
 	  0x527b => ['return true if CVAR@($25d7).lo == 1'],
 	  0x5283 => ['return true if CVAR@($25d7).lo == 1 or 2'],
 	  0x528d => ['return true if CVAR@($25d7).lo == 3'],
 	  0x5295 => ['return true if CVAR@($25d7).lo == 4'],
 	  0x529d => ['return true if CVAR@($25d7).lo == 5'],
 	  0x52a5 => ['return true if CVAR@($25d7).lo == 3 or 4'],
 	  0x52af => ['return true if CVAR@($25d7).lo == 7'],
 	  0x52b7 => ['return true if CVAR@($25d7).lo == 10'],
 	  0x52bf => ['return true if CVAR@($25d7).lo == 11'],
 	  0x52c7 => ['return true if CVAR@($25d7).lo == 8'],
 	  0x52cf => ['return true if CVAR@($25d7).lo == 9'],
 	  0x52d7 => ['return true if CVAR@($25d7).lo between 0 and 7'],
 	  0x52e3 => ['return true if CVAR $25EB == $51'],
 	  0x52ed => ['return true if CVAR@($25d7).lo between 2 and 6'],
 	  0x5349 => ['store 2^(7-stk) in CVAR $387A'],
 	  0x5357 => ['on stk return (30,C0,03,0C)'],
 	  0x535f => ['store (30,C0,03,0C) in CVAR $387A'],
 	  0x53ef => ['return true if CVAR@($25d7).lo == 7 and bit 5 clear'],
 	  0x53fb => ['return true if CVAR@($25d7) bit 4 set'],
 	  0x5405 => ['return true if CVAR@($3816)+1 bit 6 set'],
 	  0x540f => ['return true if CVAR@($3816) bit 7 set'],
 	  0x5417 => ['return true if CVAR@($3816)+1 bit 7 set'],
 	  0x541f => ['return true if CVAR@($25d7) bit 7 set'],
 	  0x5449 => ['return CVAR @($25d7)+1 >>6 & 3'],
 	  0x5453 => ['return true if CVAR@($25d7)+2 bit 7 set'],
 	  0x545b => ['return true if stk between 0 and 6, or == 8 or 10'],
 	  0x5473 => ['true if 0 < CVAR @($25d7).lo < 6, or == 8 or 10'],
 	  0x54e3 => ['return $F300+(CVAR $25EB)-1'],
 	  0x54ef => ['return $F380+(CVAR $25EB)-1'],
 	  0x54f9 => ['return C@(stk), zero if > $7F'],
 	  0x550d => ['return C@($F300+(CVAR $25EB)-1), zero if > $7F'],
 	  0x5515 => ['return C@($F380+(CVAR $25EB)-1), zero if > $7F'],
 	  0x551d => ['return C@($F0FC + 4*stk).lo'],
 	  0x555b => ['push $0C00'],
 	  0x555f => ['push $EC00'],
 	  0x558f => ['fetch VAR $E005'],
 	  0x5599 => ['fetch VAR $E007'],
 	  0x55a3 => ['push $E009'],
 	  0x55a7 => ['push $E06D'],
 	  0x55ab => ['push $E07B'],
 	  0x55af => ['push $E1A3'],
 	  0x55b3 => ['push $E3F3'],
 	  0x55b7 => ['push $E4E3'],
 	  0x55cd => ['return $E3F3 + ($E005)'],
 	  0x563b => ['return $F7A1 + stk*$14  (region name)'],
 	  0x5649 => ['return addr of current region name'],
 	  0x5659 => ['return true if stk == current region'],
 	  0x5661 => ['return CVAR($38DB).lo'],
 	  0x5669 => ['return CVAR@($38C7)+1'],
 	  0x5673 => ['return true if CVAR@($38C7)+1 > 0'],
 	  0x56a7 => ['return CVAR@($38C7)+2'],
 	  0x56b1 => ['return CVAR@($38C7)+3'],
 	  0x56cf => ['return $E3F3 + 10*CVAR($38DB).lo'],
 	  0x572f => ['VAR $382A += 3'],
 	  0x5739 => ['fetch CVAR $382A'],
 	  0x5741 => ['return CVAR $382A.hi'],
 	  0x5749 => ['return CVAR $382A.lo'],
 	  0x5751 => ['return CVAR@($382A)+1'],
 	  0x575b => ['return CVAR@($382A)+2'],
 	  0x5765 => ['return CVAR@($382A)+2'],
 	  0x5799 => ['return C@($38C7) + 2'],
 	  0x57a3 => ['store stk - 2 in  CVAR $38C7'],
 	  0x582b => ['push $FF00'],
 	  0x5861 => ['fetch CVAR @($3816)'],
 	  0x5903 => ['print "ACTION MOVES TO/READING" region(stk)'],
 	  0x595d => ['(load &) goto region stk, saving current'],
 	  0x59a9 => ['(load &) goto world map, saving current'],
 	  0x59df => ['C>>4 (return high nybble)'],
 	  0x5a75 => ['push CVAR $5A77'],
 	  0x5a78 => ['push VAR $5A7A'],
 	  0x5a7c => ['push VAR $5A7E'],
 	  0x5a80 => ['push VAR $5A82'],
 	  0x5a84 => ['swap 38DB/5A77, 38C7/5A7A, 382A/5A7E, 383E/5A82'],
 	  0x5ad2 => ['fetch CVAR $5A77'],
 	  0x5b38 => ['fetch CVAR $F7A0'],
 	  0x5b40 => ['return (stk + ($3A0F)) % 40'],
 	  0x5b4a => ['return (stk + ($3A0B)) % 40'],
 	  0x5b54 => ['return $E000 + 2*stk'],
 	  0x5b5e => ['return (C@($E000+2*stk) & $3F) + 2'],
 	  0x5b6a => ['return C@($E000+2*stk) >> 6'],
 	  0x5b74 => ['return C@($E001+2*stk)'],
 	  0x5be4 => ['return (VAR $3852) + stk'],
 	  0x5bec => ['fetch VAR $3852 (con/mdef)'],
 	  0x5bf2 => ['return (VAR $3852) + 1 (str)'],
 	  0x5bfa => ['return (VAR $3852) + 2 (dex)'],
 	  0x5c02 => ['return (VAR $3852) + 3 (life)'],
 	  0x5c0a => ['return (VAR $3852) + 4 (speed)'],
 	  0x5c12 => ['return (VAR $3852) + 5 (power)'],
 	  0x5c1a => ['return (VAR $3852) + 6 (dodge)'],
 	  0x5c22 => ['return (VAR $3852) + 7 (parry)'],
 	  0x5c2a => ['return (VAR $3852) + 8 (armor)'],
 	  0x5c32 => ['return (VAR $3852) + 9 (melee)'],
 	  0x5c3c => ['return (VAR $3852) + 10 (missle)'],
 	  0x5c46 => ['return (VAR $3852) + 11'],
 	  0x5c50 => ['return (VAR $3852) + 13'],
 	  0x5c5a => ['return (VAR $3852) + 14'],
 	  0x5c64 => ['return (VAR $3852) + 15 (size)'],
 	  0x5c6c => ['return (VAR $3852) + 16'],
 	  0x5c74 => ['return (VAR $3852) + 17 (wis)'],
 	  0x5c7e => ['return (VAR $3852) + 18 (wealth)'],
 	  0x5c88 => ['return (VAR $3852) + 20 (ready weapon)'],
 	  0x5c92 => ['return (VAR $3852) + 21 (ready armor)'],
 	  0x5c9c => ['return (VAR $3852) + 22 (picture)'],
 	  0x5ca6 => ['return (VAR $3852) + 23'],
 	  0x5cb0 => ['return CVAR@($3852) (con/mdef)'],
 	  0x5cb8 => ['return CVAR@($3852)+1 (str)'],
 	  0x5cc0 => ['return CVAR@($3852)+2 (dex)'],
 	  0x5cc8 => ['return CVAR@($3852)+3 (life)'],
 	  0x5cd0 => ['return CVAR@($3852)+4 (speed)'],
 	  0x5cd8 => ['return CVAR@($3852)+5 (power)'],
 	  0x5ce0 => ['return CVAR@($3852)+6 (dodge)'],
 	  0x5ce8 => ['return CVAR@($3852)+7 (parry)'],
 	  0x5cf0 => ['return CVAR@($3852)+8 (armor)'],
 	  0x5cf8 => ['return CVAR@($3852)+9 (melee)'],
 	  0x5d00 => ['return CVAR@($3852)+10 (missle)'],
 	  0x5d08 => ['return CVAR@($3852)+11'],
 	  0x5d10 => ['return CVAR@($3852)+13'],
 	  0x5d18 => ['return CVAR@($3852)+14'],
 	  0x5d20 => ['return CVAR@($3852)+15 (size)'],
 	  0x5d28 => ['return CVAR@($3852)+16'],
 	  0x5d30 => ['return CVAR@($3852)+17 (wis)'],
 	  0x5d38 => ['return VAR@($3852)+18  (wealth)'],
 	  0x5d40 => ['return CVAR@($3852)+22 (picture)'],
 	  0x5d48 => ['return CVAR@($3852) & $3F (con)'],
 	  0x5d50 => ['return CVAR@($3852)+1 & $1F (str)'],
 	  0x5d58 => ['return CVAR@($3852)+2 & $1F (dex)'],
 	  0x5d60 => ['return true if CVAR@($3852)+4 bit 6 set'],
 	  0x5d6a => ['return CVAR@($3852)+15 & $1F (size)'],
 	  0x5d72 => ['return true if CVAR@($3852)+4 bit 7 set'],
 	  0x5d7a => ['return CVAR@($3852)+3 & $3F (life)'],
 	  0x5d82 => ['return CVAR@($3852)+4 >>4 & 3'],
 	  0x5d8c => ['return CVAR@($3852)+17 & $1F (wis)'],
 	  0x5d94 => ['return CVAR@($3852)+5 & $7F (power)'],
 	  0x5d9c => ['return CVAR@($3852) >>6'],
 	  0x5da4 => ['return CVAR@($3852)+6 & $7F (dodge)'],
 	  0x5dac => ['return CVAR@($3852)+7 & $7F (parry)'],
 	  0x5db4 => ['return CVAR@($3852)+8 & $7F (armor)'],
 	  0x5dbc => ['return CVAR@($3852)+9 & $7F (melee)'],
 	  0x5dc4 => ['return CVAR@($3852)+10 & $7F (missle)'],
 	  0x5dcc => ['return CVAR@($3852)+20 (ready weapon)'],
 	  0x5dd4 => ['return CVAR@($3852)+21 (ready armor)'],
 	  0x5ddc => ['return CVAR@($3852)+22 & $7F (picture)'],
 	  0x5de4 => ['return true if CVAR@($3852)+5 bit 7 set'],
 	  0x5dec => ['return true if CVAR@($3852)+6 bit 7 set'],
 	  0x5df4 => ['return true if CVAR@($3852) > 0 (con/mdef)'],
 	  0x5dfc => ['return true if CVAR@($3852) > 0 (con/mdef)'],
 	  0x5e02 => ['return true if CVAR@($3852)+8 bit 7 set'],
 	  0x5e0a => ['return (VAR $3866 < 5)'],
 	  0x5e16 => ['return true if CVAR@($3852) > 0 && VAR $3866 < 5'],
 	  0x5e20 => ['return true if CVAR@($3852)+9 bit 7 set'],
 	  0x5e28 => ['return CVAR@($3852)+17 >> 5'],
 	  0x5e30 => ['return CVAR@($3852)+4.lo (speed)'],
 	  0x5e38 => ['return CVAR@($3852)+16'],
 	  0x5e3e => ['SET-C0-BITS of CVAR@($3852) (con)'],
 	  0x5e46 => ['SET-E0-BITS of CVAR@($3852)+1 (str)'],
 	  0x5e4e => ['SET-E0-BITS of CVAR@($3852)+2 (dex)'],
 	  0x5e56 => ['store CVAR@($3852)+16'],
 	  0x5e5e => ['SET-E0-BITS of CVAR@($3852)+15 (size)'],
 	  0x5e66 => ['SET-F0-BITS of CVAR@($3852)+4 (speed)'],
 	  0x5e6e => ['SET-C0-BITS of CVAR@($3852)+3 (life)'],
 	  0x5e76 => ['store VAR@($3852)+18 (wealth)'],
 	  0x5e7e => ['SET-E0-BITS of CVAR@($3852)+17 (wis)'],
 	  0x5e86 => ['SET-80-BITS of CVAR@($3852)+5 (power)'],
 	  0x5e8e => ['SET-3F-BITS of CVAR@($3852) (mdef)'],
 	  0x5e96 => ['SET-80-BITS of CVAR@($3852)+6 (dodge)'],
 	  0x5e9e => ['SET-80-BITS of CVAR@($3852)+7 (parry)'],
 	  0x5ea6 => ['SET-80-BITS of CVAR@($3852)+8 (armor)'],
 	  0x5eae => ['SET-80-BITS of CVAR@($3852)+9 (melee)'],
 	  0x5eb6 => ['SET-80-BITS of CVAR@($3852)+10 (missle)'],
 	  0x5ebe => ['SET-C0-BITS of CVAR@($3852)+13'],
 	  0x5ec6 => ['SET-80-BITS of CVAR@($3852)+14'],
 	  0x5ece => ['SET-3F-BITS of CVAR@($3852)+1'],
 	  0x5ed6 => ['store CVAR@($3852)+20  (ready weapon)'],
 	  0x5ede => ['store CVAR@($3852)+21  (ready armor)'],
 	  0x5f3e => ['+, constrain result between 00-7F'],
 	  0x5f46 => ['add stk to CON, constrain 01-3F'],
 	  0x5f56 => ['add stk to STR, constrain 00-1F'],
 	  0x5f62 => ['add stk to DEX, constrain 00-1F'],
 	  0x5f6e => ['add stk to MAGICDEF, constrain 00-03'],
 	  0x5f7a => ['add stk to SIZE, constrain 00-1F'],
 	  0x5f86 => ['add stk to SPEED, constrain 00-0F'],
 	  0x5f92 => ['add stk to LIFE, constrain 00-3F'],
 	  0x5f9e => ['add stk to WIS, constrain 00-1F'],
 	  0x5faa => ['add stk to POWER, constrain 00-7F'],
 	  0x5fb4 => ['add stk to DODGE, constrain 00-7F'],
 	  0x5fbe => ['add stk to PARRY, constrain 00-7F'],
 	  0x5fc8 => ['add stk to ARMOR, constrain 00-7F'],
 	  0x5fd2 => ['add stk to MELEE, constrain 00-7F'],
 	  0x5fdc => ['add stk to MISSLE, constrain 00-7F'],
 	  0x5fe6 => ['add stk to WEALTH, constr 0-25k'],
 	  0x5ff8 => ['fetch CVAR $388D'],
 	  0x610a => ['set CVAR@($3852)+21 (ready armor) to CVAR $388D'],
 	  0x6114 => ['set CVAR@($3852)+20 (ready weapon) to CVAR $388D'],
 	  0x6212 => ['return $F633+(@($3866)-1)*10'],
 	  0x6254 => ['return $F59F + (stk-1)*$25'],
 	  0x6344 => ['swap 392A/3852, 3866/393E'],
 	  0x6374 => ['return true if CVAR $392A > 0'],
 	  0x6a04 => ['if playing, 2*; if constructing, 2/'],
 	  0x6b7e => ['return ctstr descr of magic defense'],
 	  0x6bf8 => ['print magic defense string (mdefval --)'],
 	  0x6c04 => ['set up thing/person/creature mode'],
 	  0x6c34 => ['print readied item'],
 	  0x6c4d => ['print readied armor'],
 	  0x6c59 => ['print readied weapon'],
 	  0x6c65 => ['return value of stat by index'],
 	  0x6d03 => ['print stat value (stat# value --)'],
 	  0x6d69 => ['print stats for creature/player'],
 	  0x6e05 => ['push VAR $6E07 (char status screen labels)'],
 	  0x6ed2 => ['print char status screen labels'],
 	  0x6eda => ['push VAR $6EDC (main menu text)'],
 	  0x6f7a => ['display main menu'],
 	  0x6f8e => ['push VAR $6F90 ("loading title screen")'],
 	  0x6fa8 => ['set keypressflag if key is pressed'],
 	  0x6fde => ['MAIN: make an adventure disk'],
 	  0x6fe8 => ['MAIN: play an adventure'],
 	  0x6ffc => ['MAIN: construct an adventure'],
 	  0x7004 => ['MAIN: copy an adventure disk'],
 	  0x7054 => ['dispatch main menu choice (n --)'],
 	  0x7060 => ['dispatch main menu choice (n --)'],
 	  0x7066 => ['MAIN LOOP: display menu, get F#, dispatch, loop'],
	);
  %ops_b =
  	(
  	  0x99c6 => ['read std acs gfx (genre --)'],
  	  0x99e0 => ['copy gfx from another adv'],
  	  0x99f2 => ['menu item: copy gfx from another adv'],
  	  0x9a00 => ['menu item: copy std acs fantasy gfx'],
  	  0x9a08 => ['menu item: copy std acs futuristic gfx'],
  	  0x9a10 => ['menu item: copy std acs contemporary gfx'],
  	  0x9a18 => ['copy std acs gfx (genre --)'],
  	  0x9a24 => ['copy std acs gfx w/confirm (genre --)'],
  	  0x9a32 => ['menu text: copy gfx menu'],
  	  0x9aac => ['menu init: copy gfx menu'],
  	  0x9ab8 => ['menu data: copy gfx menu'],
  	  0x9b0c => ['run copy gfx from another adv menu'],
  	  0x9b16 => ['print "YOUR REQUEST IS DONE.", buttonwait'],
  	  0x9b3e => ['print "ACS WILL PICK NAME" at screenaddr stk'],
  	  0x9cc7 => ['zero sectors $01AA-$01B1 of current adv disk'],
  	  0x9ce7 => ['print "MESSAGE stk OF 254" in disk buffer'],
  	  0x9dc9 => ['erase world map and all regions'],
  	  0x9e99 => ['push VAR $9E9B  ("GOLD")'],
  	  0x9ea0 => ['push VAR $9EA2  ("STANDARD DOOR")'],
  	  0x9eb0 => ['push VAR $9EB2  ("STORE")'],
  	  0x9eb8 => ['push VAR $9EBA  ("EMPTY FLOOR")'],
  	  0x9ec6 => ['push VAR $9EC6  ("DO NOTHING")'],
  	  0x9ed3 => ['push VAR $9ED5  ("TRINKET")'],
  	  0x9edd => ['push VAR $9EDF  ("ONE WAY DOOR")'],
  	  0x9eec => ['erase master creature list'],
  	  0x9f08 => ['menu item: erase master creature list'],
  	  0x9f16 => ['menu item: erase everything but graphics'],
  	  0x9f24 => ['menu item: erase world map and all regions'],
  	  0xa00a => ['erase everything but graphics'],
  	  0xa0ec => ['menu text: erase part of adv'],
  	  0xa161 => ['menu init: erase part of adv'],
  	  0xa16d => ['menu data: erase part of adv'],
  	  0xa199 => ['run erase part of adv menu'],
  	  0xa1a3 => ['push VAR $A1A5 (menu text: copy/erase adv)'],
  	  0xa1fa => ['menu init: copy/erase adv'],
  	  0xa20c => ['menu restart: copy/erase adv'],
  	  0xa214 => ['menu item: exit copy/erase adv menu'],
  	  0xa222 => ['menu item: erase part of adv'],
  	  0xa22a => ['menu item: copy gfx from another adv'],
  	  0xa232 => ['push VAR $A234 (menu data: copy/erase adv)'],
  	  0xa256 => ['restart make disk menu, print "ADV DISK READY!"'],
  	  0xa2cb => ['make std adv disk (genre --)'],
  	  0xa2fb => ['menu item: make fantasy adv disk'],
  	  0xa303 => ['menu item: make spy/myst adv disk'],
  	  0xa30b => ['menu item: make sci-fi adv disk'],
  	  0xa313 => ['menu item: make rivers of light adv disk'],
  	  0xa3d9 => ['menu item: make land of aventuria adv disk'],
  	  0xa381 => ['push VAR $A383'],
  	  0xa467 => ['menu text: make adv disk menu'],
  	  0xa4d9 => ['menu init: make adv disk menu'],
  	  0xa50c => ['menu data: make an adv disk menu'].
  	  0xa570 => ['run "make an adv disk" menu'],
  	  0xa57a => ['copy or erase some/all of an adventure'],
  	  0xad5a => ['edit graphics'],
  	  0xc902 => ['edit things'],
  	);
  $ops_c =
  	(
  	  0xb58d => ['edit region'],
  	  0xc24a => ['edit world map'],
  	  0xc8e4 => ['edit world map creatures'],
  	);
  %ops_f =
  	(
  	  0x9eae => ['let acs finish your adventure'],
  	);
  %ops_o =
  	(
  	  0x708c => ['VAR $1A5E (menu stack ptr) += 4'],
  	  0x7096 => ['VAR $1A5E (menu stack ptr) -= 4'],
  	  0x70a2 => ['fetch VAR $1A5E (menu stk ptr)'],
  	  0x70aa => ['fetch VAR $1A5E (menu stk ptr), then add 2'],
  	  0x70b4 => ['fetch VAR $1A5E (menu stk ptr), then add 1'],
  	  0x70be => ['store 1 in CVAR($1A5E)+1  (exit menu)'],
  	  0x70c8 => ['return addr of current menupos data'],
  	  0x70d8 => ['get column of current menu position'],
  	  0x70e4 => ['get sprite x coord for current menupos'],
  	  0x70f2 => ['get row of current menu position'],
  	  0x70fa => ['get sprite y coord for current menupos'],
  	  0x7108 => ['get new menupos based on movement'],
  	  0x7122 => ['move sprite 0 to current menupos and enable'],
  	  0x7132 => ['wait for joymove in menu'],
  	  0x7154 => ['get confirmation of menu item if required (-- f)'],
  	  0x7170 => ['get action addr for current menu item'],
  	  0x717c => ['get action addr for current menu item'],
  	  0x7182 => ['invoke action addr for current menu item'],
  	  0x718a => ['run menu (x menuaddr --)'],
  	  0x71ec => ['draw all connecting menu lines'],
  	  0x7228 => ['draw connecting lines from current menupos'],
  	  0x72c7 => ['connect menuposes with C@FF16 (Cnow Cdest Rn Rd --)'],
  	  0x731b => ['write C@($FF16) at row,column (c r --)'],
  	  0x732b => ['push addr of text for edit things/creat/gfx menu'],
  	  0x7393 => ['menu item: edit things'],
  	  0x739d => ['menu item: edit graphics'],
  	  0x73a7 => ['menu item: edit master list of creatures'],
  	  0x73b3 => ['menu init for edit things/creatures/gfx'],
  	  0x73bf => ['restart edit things/creatures/gfx menu'],
  	  0x73c7 => ['menu item: copy or erase adventure'],
  	  0x740d => ['run edit things/creatures/gfx menu'],
  	  0x7417 => ['print region number and name (n --)'],
  	  0x7429 => ['print region number and name @(16,10)'],
  	  0x743d => ['menu item: select region'],
  	  0x7445 => ['menu item: prev region (oldreg -- newreg)'],
  	  0x7453 => ['menu item: next region (oldreg -- newreg)'],
  	  0x7463 => ['push VAR $7465 (text of pick region menu)'],
  	  0x74b0 => ['edit region name'],
  	  0x74e7 => ['menu item: rename region'],
  	  0x74f3 => ['menu init: pick region menu'],
  	  0x751d => ['push VAR $751F (pick region menu data)'],
  	  0x7549 => ['run pick region menu'],
  	  0x7553 => ['push VAR $7555 (text for edit world/region menu)'],
  	  0x75c0 => ['menu init: edit world/region menu'],
  	  0x75d2 => ['menu restart: edit world/region menu'],
  	  0x75da => ['initialize region data'],
  	  0x7634 => ['menu item: edit region'],
  	  0x767f => ['add a region'],
  	  0x7697 => ['menu item: do more detailed work (world/region)'],
  	  0x76a7 => ['edit region, then restore world/region menu'],
  	  0x76b1 => ['on stk push ctstr "FANTASY", "SPY", or "SCIFI"'],
  	  0x76df => ['menu item: add region'],
  	  0x771d => ['print "ACS HAS SAVED YOUR WORK", buttonwait'],
  	  0x77d4 => ['menu item: edit world map'],
  	  0x77de => ['menu item: edit map creatures'],
  	  0x77ea => ['on stk print "FANTASY", "SPY/MYST", or "SCI-FI"'],
  	  0x77f6 => ['print current theme music @(15,1)'],
  	  0x780a => ['menu item: select theme music'],
  	  0x7822 => ['push VAR $7824 (edit world map/reg menu data)'],
  	  0x7866 => ['run edit world map/regions menu'],
  	  0x7870 => ['print "TYPE NAME AND PRESS BUTTON" @21,2'],
  	  0x7880 => ['menu init: main constr menu'],
  	  0x7898 => ['menu restart: main constr menu'],
  	  0x78a0 => ['print [adv title] "BY" [adv byline]'],
  	  0x78c5 => ['push VAR $78C7 (main constr menu text)'],
  	  0x798b => ['menu item: let acs finish your adv'],
  	  0x7997 => ['menu item: save your work and exit'],
  	  0x79a1 => ['input new name/byline (addr row --)'],
  	  0x79bb => ['menu item: input new byline'],
  	  0x79c5 => ['menu item: input new adv title'],
  	  0x79cf => ['menu item: edit adventure intro'],
  	  0x7a5d => ['menu item: edit map/regions (do more detail 1)'],
  	  0x7a65 => ['push VAR $7A67 (menu data: main constr menu)'],
  	  0x7ad9 => ['run main constr menu'],
  	  0x7ae5 => ['construct an adv (from main menu)'],
  	  0x7af9 => ['table of spell descriptions'],
  	  0x7c86 => ['push 11'],
  	  0x7c8a => ['table of arg types for spells'],
  	  0x7c9d => ['table of skill names for raise/lower spells'],
  	  0x7d20 => ['print skill name (arg for raise/lower spells)'],
  	  0x7d2c => ['table of music/sfx names'],
  	  0x7e9b => ['print music/sfx name'],
          0x7ea9 => ['push $FE63'],
          0x7ead => ['push $FEDB'],
          0x7eb1 => ['push $FEEA'],
          0x7f77 => ['edit long message (msg# --)'],
       	);
  %ops_r =
  	(
  	  0x8b96 => ['edit master list of creatures'],
  	);
  %ops_s =
  	(
  	  0x938c => ['print "MAY ADD MANY/ADDS ONLY ##/ADDS NONE" (n --)'],
  	  0x93dc => ['print "   "'],
  	  0x93e6 => ['put 4block of chars @R/C, color #3 (char c r --)'],
  	  0x9408 => ['erase line 24'],
  	  0x9414 => ['print "PRESS BUTTON TO CONFIRM" (-- f)'],
  	);
}